<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment - Elite Wear</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/userStyle/header.css">
    <link rel="stylesheet" href="/userStyle/footer.css">
    <link rel="stylesheet" href="/userStyle/checkout.css">
    <link rel="stylesheet" href="/userStyle/checkoutPayment.css">
</head>
<body>
    <%- include("../partials/user/header") %>

    <div class="checkout-container">
        <!-- Progress Bar -->
        <div class="checkout-progress-container">
            <div class="checkout-progress">
                <div class="progress-step active">
                    <div class="step-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <div class="step-label">Cart</div>
                </div>
                <div class="progress-connector active"></div>
                <div class="progress-step active">
                    <div class="step-icon">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="step-label">Delivery</div>
                </div>
                <div class="progress-connector active"></div>
                <div class="progress-step active">
                    <div class="step-icon">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <div class="step-label">Payment</div>
                </div>
                <div class="progress-connector"></div>
                <div class="progress-step">
                    <div class="step-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="step-label">Confirmation</div>
                </div>
            </div>
        </div>

        <div class="row g-4">
            <!-- Payment Methods Section -->
            <div class="col-lg-5">
                <div class="payment-methods-card">
                    <div class="card-header">
                        <h5>Payment Methods</h5>
                    </div>
                    
                    <div class="card-body">
                        <div id="paymentAlert"></div>
                        
                        <div class="payment-options">
                            <div class="payment-option">
                                <input type="radio" name="payment" id="cod" value="COD" checked>
                                <label for="cod">
                                    <div class="payment-option-icon">
                                        <i class="fas fa-money-bill-wave"></i>
                                    </div>
                                    <div class="payment-option-content">
                                        <div class="payment-option-title">Cash on Delivery</div>
                                        <div class="payment-option-description">Pay when your order is delivered</div>
                                    </div>
                                </label>
                            </div>
                            
                            <div class="payment-option">
                                <input type="radio" name="payment" id="razorpay" value="Razorpay">
                                <label for="razorpay">
                                    <div class="payment-option-icon">
                                        <i class="fas fa-credit-card"></i>
                                    </div>
                                    <div class="payment-option-content">
                                        <div class="payment-option-title">Pay Online</div>
                                        <div class="payment-option-description">Credit/Debit Card, UPI, Netbanking via Razorpay</div>
                                    </div>
                                </label>
                            </div>
                            
                            <div class="payment-cards">
                                <img src="/uploads/visaCard.png" alt="Visa">
                                <img src="/uploads/mastercard.jpeg" alt="Mastercard">
                                <img src="/uploads/Rupay-Logo.png" alt="RuPay">
                                <img src="/uploads/upi.jpeg" alt="UPI">
                            </div>
                            
                            <div class="payment-option <%= (user.walletBalance < grandTotal) ? 'disabled' : '' %>">
                                <input type="radio" name="payment" id="wallet" value="Wallet" 
                                    <%= (user.walletBalance < grandTotal) ? 'disabled' : '' %>>
                                <label for="wallet">
                                    <div class="payment-option-icon">
                                        <i class="fas fa-wallet"></i>
                                    </div>
                                    <div class="payment-option-content">
                                        <div class="payment-option-title">
                                            Wallet
                                            <span class="wallet-balance <%= (user.walletBalance < grandTotal) ? 'insufficient' : 'sufficient' %>">
                                                ₹<%= user.walletBalance ? user.walletBalance.toFixed(2) : '0.00' %>
                                            </span>
                                        </div>
                                        <div class="payment-option-description">
                                            <% if (user.walletBalance < grandTotal) { %>
                                                Insufficient balance. You need ₹<%= (grandTotal - user.walletBalance).toFixed(2) %> more.
                                                <a href="/wallet" class="add-money-link">Add money</a>
                                            <% } else { %>
                                                Pay using your wallet balance
                                            <% } %>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="delivery-address-card">
                    <div class="card-header">
                        <h5>Delivery Address</h5>
                        <a href="/checkOut" class="btn-change-address">
                            <i class="fas fa-pencil-alt"></i> Change
                        </a>
                    </div>
                    
                    <div class="card-body">
                        <div class="address-details">
                            <div class="address-name"><%= deliveryAddress.fullname %></div>
                            <div class="address-line"><%= deliveryAddress.address %></div>
                            <div class="address-line"><%= deliveryAddress.city %>, <%= deliveryAddress.district %></div>
                            <div class="address-line"><%= deliveryAddress.state %> - <%= deliveryAddress.pincode %></div>
                            <div class="address-phone">
                                <i class="fas fa-phone-alt"></i> <%= deliveryAddress.mobile %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Order Summary Section -->
            <div class="col-lg-7">
                <div class="order-summary-card">
                    <div class="card-header">
                        <h5>Order Summary</h5>
                        <span class="badge bg-primary"><%= cartItems.length %> items</span>
                    </div>
                    
                    <div class="card-body">
                        <div class="order-items">
                            <% cartItems.forEach(item => { 
                                const variant = item.productId.variants.find(v => v.size === item.size);
                                const price = variant ? variant.salePrice : 0;
                                const totalItemPrice = price * item.quantity;
                            %>
                                <div class="order-item">
                                    <div class="item-image">
                                        <img src="<%= item.productId.images[0]?.url || '/api/placeholder/70/70' %>" alt="<%= item.productId.name %>">
                                    </div>
                                    <div class="item-details">
                                        <div class="item-name"><%= item.productId.name %></div>
                                        <div class="item-meta">
                                            <span>Size: <%= item.size %></span>
                                            <span>Qty: <%= item.quantity %></span>
                                        </div>
                                    </div>
                                    <div class="item-price">₹<%= totalItemPrice.toFixed(2) %></div>
                                </div>
                            <% }); %>
                        </div>
                        
                        <div class="price-summary">
                            <div class="price-row">
                                <span>Subtotal</span>
                                <span>₹<%= totalPrice.toFixed(2) %></span>
                            </div>
                            <div class="price-row">
                                <span>Delivery</span>
                                <span><%= deliveryCharge === 0 ? 'FREE' : '₹' + deliveryCharge.toFixed(2) %></span>
                            </div>
                            
                            <% if (discount > 0 && appliedCoupon) { %>
                                <div class="price-row discount">
                                    <span>Discount (<%= appliedCoupon.code %>)</span>
                                    <span>-₹<%= discount.toFixed(2) %></span>
                                </div>
                            <% } %>
                            
                            <div class="price-row total">
                                <span>Total</span>
                                <span>₹<%= grandTotal.toFixed(2) %></span>
                            </div>
                        </div>
                        
                        <button id="placeOrderBtn" class="btn-place-order" onclick="handlePayment()">
                            <span class="btn-text">Place Order</span>
                            <span class="btn-price">₹<%= grandTotal.toFixed(2) %></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
    // Show alert message
    function showAlert(type, message) {
        const alertDiv = document.getElementById("paymentAlert");
        alertDiv.innerHTML = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;

    // Auto dismiss after longer duration - 10 seconds for success, 15 seconds for errors
    setTimeout(() => {
        const alertElement = document.querySelector(".alert");
        if (alertElement) {
            const bsAlert = new bootstrap.Alert(alertElement);
            bsAlert.close();
        }
    }, type === 'danger' ? 15000 : 10000);

        // Scroll to alert
        alertDiv.scrollIntoView({ behavior: "smooth", block: "start" });
    }

    // Handle payment process
    async function handlePayment() {
        const paymentMethod = document.querySelector('input[name="payment"]:checked').value;
        const couponCode = "<%= appliedCoupon ? appliedCoupon.code : '' %>";
        const placeOrderBtn = document.getElementById('placeOrderBtn');
        
        // Disable button and show loading state
        placeOrderBtn.disabled = true;
        placeOrderBtn.innerHTML = '<span class="spinner"></span> Processing...';
        
        try {
            if (paymentMethod === 'Razorpay') {
                // Handle Razorpay payment
                const response = await fetch('/create-razorpay-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ couponCode })
                });
                
                const data = await response.json();
                console.log('Razorpay order response:', data);
                
                if (!data.success) {
                    throw new Error(data.message || 'Failed to create Razorpay order');
                }
                
                const options = {
                    key: data.key,
                    amount: data.order.amount,
                    currency: data.order.currency,
                    name: 'Elite Wear',
                    description: 'Purchase from Elite Wear',
                    image: '/Uploads/ChatGPT Image Apr 13, 2025, 06_50_48 PM.png',
                    order_id: data.order.id,
                    prefill: {
                        name: data.user.name,
                        email: data.user.email,
                        contact: data.user.mobile || ''
                    },
                    theme: {
                        color: '#3a86ff'
                    },
                    modal: {
                        ondismiss: function() {
                            placeOrderBtn.disabled = false;
                            placeOrderBtn.innerHTML = `
                                <span class="btn-text">Place Order</span>
                                <span class="btn-price">₹<%= grandTotal.toFixed(2) %></span>
                            `;
                        }
                    },
                    handler: async function(response) {
                        try {
                            console.log('Payment successful, verifying...', response);
                            const verifyResponse = await fetch('/verify-payment', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature
                                })
                            });
                            
                            const verifyData = await verifyResponse.json();
                            
                            if (verifyData.success) {
                                // Show success message before redirect
                                showAlert("success", "Payment successful! Redirecting to confirmation page...");
                                
                                // Redirect after a short delay
                                setTimeout(() => {
                                    window.location.href = verifyData.redirect;
                                }, 1500);
                            } else {
                                throw new Error(verifyData.message || 'Payment verification failed');
                            }
                        } catch (error) {
                            console.error('Verification error:', error);
                            showAlert('danger', error.message || 'Payment verification failed');
                            
                            // Reset button state
                            placeOrderBtn.disabled = false;
                            placeOrderBtn.innerHTML = `
                                <span class="btn-text">Place Order</span>
                                <span class="btn-price">₹<%= grandTotal.toFixed(2) %></span>
                            `;
                        }
                    }
                };
                
                // Initialize Razorpay
                const rzp = new Razorpay(options);
                
                // Handle payment failure with clear message
                rzp.on('payment.failed', function(response) {
                    console.error('Payment failed:', response.error);
                    
                    // Show detailed error message
                    let errorMessage = 'Payment failed. ';
                    
                    if (response.error) {
                        if (response.error.description) {
                            errorMessage += response.error.description;
                        } else if (response.error.reason) {
                            errorMessage += response.error.reason;
                        } else if (response.error.code) {
                            errorMessage += `Error code: ${response.error.code}`;
                        }
                    }
                    
                    errorMessage += '. Please try again.';
                    
                    // Display error with prominent styling
                    showAlert('danger', `
                        <div class="d-flex align-items-center">
                            <i class="fas fa-exclamation-triangle me-2" style="font-size: 1.5rem; color: #dc3545;"></i>
                            <div>
                                <strong style="font-size: 1.1rem;">Payment Failed</strong>
                                <div>${errorMessage}</div>
                            </div>
                        </div>
                    `);
                    
                    // Reset button state
                    placeOrderBtn.disabled = false;
                    placeOrderBtn.innerHTML = `
                        <span class="btn-text">Place Order</span>
                        <span class="btn-price">₹<%= grandTotal.toFixed(2) %></span>
                    `;
                });
                
                // Open Razorpay checkout
                rzp.open();
                
            } else {
                // Handle COD or Wallet payment
                const response = await fetch('/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        paymentMethod, 
                        couponCode 
                    }),
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Show success message before redirect
                    showAlert("success", `Order placed successfully with ${paymentMethod}! Redirecting...`);
                    
                    // Redirect after a short delay
                    setTimeout(() => {
                        window.location.href = data.redirect;
                    }, 1500);
                } else {
                    throw new Error(data.message || 'Failed to place order');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            
            // Show detailed error message
            showAlert('danger', `
                <div class="d-flex align-items-center">
                    <i class="fas fa-exclamation-triangle me-2" style="font-size: 1.5rem; color: #dc3545;"></i>
                    <div>
                        <strong style="font-size: 1.1rem;">Payment Failed</strong>
                        <div>${error.message || 'An error occurred while processing your payment. Please try again.'}</div>
                    </div>
                </div>
            `);
            
            // Reset button state
            placeOrderBtn.disabled = false;
            placeOrderBtn.innerHTML = `
                <span class="btn-text">Place Order</span>
                <span class="btn-price">₹<%= grandTotal.toFixed(2) %></span>
            `;
        }
    }

    // Add event listeners when DOM is loaded
    document.addEventListener("DOMContentLoaded", () => {
        console.log("Checkout payment page loaded");

        // Add event listeners to payment options
        const paymentOptions = document.querySelectorAll('.payment-option input[type="radio"]');
        paymentOptions.forEach((option) => {
            option.addEventListener("change", () => {
                // Remove highlight from all options
                document.querySelectorAll(".payment-option").forEach((opt) => {
                    opt.classList.remove("selected");
                });

                // Add highlight to selected option
                option.closest(".payment-option").classList.add("selected");
            });
        });

        // Initial highlight for selected payment method
        const selectedOption = document.querySelector('input[name="payment"]:checked');
        if (selectedOption) {
            selectedOption.closest(".payment-option").classList.add("selected");
        }
    });
</script>
</body>
</html>
