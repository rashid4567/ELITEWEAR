<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Elite Wear - Premium Collection</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- AOS Animation Library -->
  <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
  <!-- Swiper CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/userStyle/header.css">
  <link rel="stylesheet" href="/userStyle/footer.css">
  <link rel="stylesheet" href="/userStyle/allproduct.css">
</head>

<body>
 

  <div class="scroll-indicator"></div>

  <div class="cursor"></div>
  <div class="cursor-follower"></div>
  
  <script>
   
    document.body.setAttribute('data-header-bg', 'dark');
  </script>
  
  <%- include("../partials/user/header") %>

  <!-- Hero Section -->
  <section class="hero-section" data-aos="fade-in">
    <div class="hero-content">
      <h1 class="hero-title">Discover the Future of Fashion</h1>
      <p class="hero-subtitle">Explore our curated collection of premium designs crafted for the modern lifestyle</p>
    </div>
  </section>

  <!-- Breadcrumb -->
  <div class="container">
    <nav aria-label="breadcrumb" class="custom-breadcrumb" data-aos="fade-up">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/"><i class="fas fa-home"></i> Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Shop</li>
      </ol>
    </nav>
  </div>

  <!-- Main Shop Section -->
  <div class="container shop-container">
    <div class="row">
      <!-- Mobile Filter Toggle -->
      <div class="d-block d-lg-none mb-4" data-aos="fade-up">
        <button class="btn filter-toggle-btn w-100" id="mobileFilterToggle">
          <i class="fas fa-sliders-h me-2"></i> Filters & Categories
        </button>
      </div>

      <!-- Sidebar Filters -->
      <div class="col-lg-3 filter-sidebar" id="filterSidebar" data-aos="fade-right" data-aos-delay="100">
        <div class="filter-header d-flex d-lg-none justify-content-between align-items-center mb-3">
          <h5 class="m-0">Filters</h5>
          <button class="btn-close" id="closeFilter"></button>
        </div>

        <form id="filterForm" action="/filterProducts" method="GET">
          <div class="filter-section">
            <h5 class="filter-title">Refine Selection</h5>

            <div class="filter-group">
              <span class="filter-label">Categories</span>
              <select class="form-select" name="category" id="categorySelect">
                <option value="all">All Categories</option>
                <% categories.forEach(cat => { %>
                  <option value="<%= cat.name %>" <%=(filters && filters.category === cat.name) ? 'selected' : '' %>><%= cat.name %></option>
                <% }); %>
              </select>
            </div>

            <div class="filter-group">
              <span class="filter-label">Size</span>
              <div class="size-options">
                <% ['S', 'M', 'L', 'XL', 'XXL'].forEach(size => { %>
                  <button type="button" class="size-btn <%= (filters && filters.size === size) ? 'active' : '' %>" data-size="<%= size %>"><%= size %></button>
                <% }); %>
              </div>
              <input type="hidden" name="size" id="selectedSize" value="<%= filters ? filters.size : '' %>">
            </div>

            <div class="filter-group">
              <span class="filter-label">Price Range</span>
              <div class="price-inputs">
                <div class="price-input">
                  <input type="number" class="form-control" placeholder="Min" name="minPrice" id="minPrice" value="<%= filters ? filters.minPrice : '' %>">
                </div>
                <div class="price-divider">-</div>
                <div class="price-input">
                  <input type="number" class="form-control" placeholder="Max" name="maxPrice" id="maxPrice" value="<%= filters ? filters.maxPrice : '' %>">
                </div>
              </div>
            </div>

            <div class="filter-actions">
              <button type="button" class="btn btn-shop-now" id="applyFilters">Apply Filters</button>
              <a href="/allproduct" class="btn btn-reset">Reset All</a>
            </div>
          </div>
        </form>
      </div>

      <!-- Products Grid -->
      <div class="col-lg-9 products-container">
        <div class="products-header" data-aos="fade-left" data-aos-delay="100">
          <div class="products-count">
            <h4 id="productCount">Products (<%= totalProducts %>)</h4>
          </div>
          
          <div class="products-actions">
            <div class="search-container">
              <form action="/search" method="GET" class="search-form" id="searchForm">
                <input type="text" name="query" id="searchQuery" placeholder="Search products..." class="search-input" value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>">
                <button type="button" class="search-button" id="searchBtn">
                  <i class="fas fa-search"></i>
                </button>
              </form>
            </div>
            
            <div class="sorting-container">
              <select class="form-select" id="sortOption" name="sort">
                <option value="latest" <%=(filters && filters.sort === 'latest') ? 'selected' : '' %>>New Arrivals</option>
                <option value="price-low-high" <%=(filters && filters.sort === 'price-low-high') ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price-high-low" <%=(filters && filters.sort === 'price-high-low') ? 'selected' : '' %>>Price: High to Low</option>
                <option value="popular" <%=(filters && filters.sort === 'popular') ? 'selected' : '' %>>Most Popular</option>
              </select>
            </div>
          </div>
        </div>

        <!-- Products Grid -->
        <div class="row" id="products-container">
          <% if (products && products.length > 0) { %>
            <% products.forEach((product, index) => { %>
              <div class="col-md-4 col-sm-6 mb-4 product-item" data-aos="fade-up" data-aos-delay="<%= 150 + (index * 50) %>">
                <div class="product-card shimmer">
                  <div class="wishlist-icon">
                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="wishlist-heart" data-product-id="<%= product._id %>">
                      <path class="heart" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                    </svg>
                  </div>
                  <a href="/productdetails/<%= product._id %>" class="product-image-link img-magnifier-container">
                    <% const mainImage = product.images && product.images.find(img => img.isMain) || (product.images && product.images[0]) || { url: '/placeholder.svg?height=300&width=300&query=fashion+product' }; %>
                    <img src="<%= mainImage.url %>" class="product-image" alt="<%= product.name %>" onerror="this.onerror=null; this.src='/placeholder.svg?height=300&width=300&query=fashion+product';" data-magnify="true">
                    <% if (product.offer && product.offer > 0) { %>
                      <span class="product-badge"><%= product.offer %>% OFF</span>
                    <% } %>
                    <div class="product-overlay">
                      <span class="quick-view">Quick View</span>
                    </div>
                  </a>
                  <div class="product-info">
                    <h3 class="product-name"><%= product.name %></h3>
                    <div class="product-price-rating">
                      <div class="product-pricing">
                        <% if (product.offer > 0) { %>
                          <span class="product-price">₹<%= (product.salePrice || 0).toFixed(2) %></span>
                          <span class="product-original-price">₹<%= (product.regularPrice || 0).toFixed(2) %></span>
                        <% } else { %>
                          <span class="product-price">₹<%= (product.regularPrice || 0).toFixed(2) %></span>
                        <% } %>
                      </div>
                      <div class="product-rating">
                        <% const rating = product.ratings ? (product.ratings.average || 0) : 0; %>
                        <% for (let star = 1; star <= 5; star++) { %>
                          <% if (star <= Math.floor(rating)) { %>
                            <i class="fas fa-star"></i>
                          <% } else if (star <= Math.ceil(rating) && star > Math.floor(rating)) { %>
                            <i class="fas fa-star-half-alt"></i>
                          <% } else { %>
                            <i class="far fa-star"></i>
                          <% } %>
                        <% } %>
                        <span class="rating-count">(<%= product.ratings ? (product.ratings.count || 0) : 0 %>)</span>
                      </div>
                    </div>
                    <a href="/productdetails/<%= product._id %>" class="btn-view-product">View Product</a>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <div class="col-12" data-aos="fade-up">
              <div class="no-products">
                <div class="no-products-icon">
                  <i class="fas fa-search"></i>
                </div>
                <h3>No Products Found</h3>
                <p><% if (typeof noProductsMessage !== 'undefined' && noProductsMessage) { %>
                  <%= noProductsMessage %>
                <% } else { %>
                  We couldn't find any products matching your criteria.
                <% } %></p>
                <a href="/allproduct" class="btn btn-shop-now">Clear Filters</a>
              </div>
            </div>
          <% } %>
        </div>

        <!-- Pagination -->
        <% if (totalPages && totalPages > 1) { %>
          <nav aria-label="Page navigation" class="pagination-container" data-aos="fade-up">
            <ul class="pagination" id="pagination">
              <% const buildPageUrl = (pageNum) => {
                const params = new URLSearchParams();
                if (filters) {
                  if (filters.category && filters.category !== 'all') params.append('category', filters.category);
                  if (filters.size) params.append('size', filters.size);
                  if (filters.color) params.append('color', filters.color);
                  if (filters.minPrice) params.append('minPrice', filters.minPrice);
                  if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);
                  if (filters.sort) params.append('sort', filters.sort);
                }
                if (typeof searchQuery !== 'undefined' && searchQuery) {
                  params.append('query', searchQuery);
                }
                params.append('page', pageNum);
                return `/filterProducts?${params.toString()}`;
              } %>

              <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                <a class="page-link" href="<%= buildPageUrl(currentPage - 1) %>" aria-label="Previous" data-page="<%= currentPage - 1 %>">
                  <i class="fas fa-chevron-left"></i>
                </a>
              </li>

              <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                  <a class="page-link" href="<%= buildPageUrl(i) %>" data-page="<%= i %>"><%= i %></a>
                </li>
              <% } %>

              <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="<%= buildPageUrl(currentPage + 1) %>" aria-label="Next" data-page="<%= currentPage + 1 %>">
                  <i class="fas fa-chevron-right"></i>
                </a>
              </li>
            </ul>
          </nav>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Newsletter Section -->
  <section class="newsletter-section" data-aos="fade-up">
    <div class="container">
      <div class="row align-items-center">
        <div class="col-lg-6">
          <h2 class="newsletter-title">Join Our Fashion Community</h2>
          <p class="newsletter-text">Subscribe to receive exclusive offers, early access to new collections, and style inspiration.</p>
        </div>
        <div class="col-lg-6">
          <form class="newsletter-form">
            <div class="input-group">
              <input type="email" class="form-control" placeholder="Your email address" required>
              <button class="btn btn-shop-now" type="submit">Subscribe</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </section>

  <%- include("../partials/user/footer") %>

  <!-- Toast Notification -->
  <div class="toast-container">
    <div id="wishlistToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <strong class="me-auto">Notification</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body" id="toastBody"></div>
    </div>
  </div>

  <!-- Quick View Modal -->
  <div class="modal fade" id="quickViewModal" tabindex="-1" aria-labelledby="quickViewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="quickViewModalLabel">Quick View</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-md-6">
              <div class="img-magnifier-container">
                <img id="quickViewImage" src="/placeholder.svg?height=300&width=300&query=fashion+product" alt="Product Image" class="img-fluid rounded" data-magnify="true">
              </div>
            </div>
            <div class="col-md-6">
              <h3 id="quickViewName" class="mb-3"></h3>
              <p id="quickViewPrice" class="product-price mb-3"></p>
              <div id="quickViewRating" class="star-rating mb-3"></div>
              <p id="quickViewDescription" class="mb-4"></p>
              <div class="d-grid">
                <a id="quickViewLink" href="#" class="btn btn-shop-now">View Details</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Back to Top Button -->
  <div class="back-to-top" id="backToTop">
    <i class="fas fa-arrow-up"></i>
  </div>

  <!-- Dark Mode Toggle -->
  <div class="dark-mode-toggle" id="darkModeToggle">
    <i class="fas fa-moon"></i>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>
  <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize AOS
      AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true
      });
      
      // Preloader
      const preloader = document.querySelector('.preloader');
      window.addEventListener('load', () => {
        setTimeout(() => {
          preloader.classList.add('fade-out');
        }, 500);
      });

      // Scroll Indicator
      const scrollIndicator = document.querySelector('.scroll-indicator');
      window.addEventListener('scroll', () => {
        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        scrollIndicator.style.width = scrolled + '%';
      });

      // Custom Cursor
      const cursor = document.querySelector('.cursor');
      const cursorFollower = document.querySelector('.cursor-follower');
      
      document.addEventListener('mousemove', (e) => {
        cursor.style.left = e.clientX + 'px';
        cursor.style.top = e.clientY + 'px';
        
        // Add a slight delay to the follower for a smooth effect
        setTimeout(() => {
          cursorFollower.style.left = e.clientX + 'px';
          cursorFollower.style.top = e.clientY + 'px';
        }, 50);
      });
      
      document.addEventListener('mousedown', () => {
        cursor.classList.add('active');
        cursorFollower.classList.add('active');
      });
      
      document.addEventListener('mouseup', () => {
        cursor.classList.remove('active');
        cursorFollower.classList.remove('active');
      });
      
      // Add hover effect for interactive elements
      const interactiveElements = document.querySelectorAll('a, button, .product-card, .size-btn, .wishlist-icon, .filter-toggle-btn');
      interactiveElements.forEach(el => {
        el.addEventListener('mouseenter', () => {
          cursor.classList.add('active');
          cursorFollower.classList.add('active');
        });
        
        el.addEventListener('mouseleave', () => {
          cursor.classList.remove('active');
          cursorFollower.classList.remove('active');
        });
      });
      
      // Image Magnifier Function
      function magnify(imgID, zoom) {
        var img, glass, w, h, bw;
        img = document.getElementById(imgID);
        
        if (!img) return;
        
        // Create magnifier glass
        glass = document.createElement("DIV");
        glass.setAttribute("class", "img-magnifier-glass");
        
        // Insert magnifier glass
        img.parentElement.insertBefore(glass, img);
        
        // Set background properties for the magnifier glass
        glass.style.backgroundImage = "url('" + img.src + "')";
        glass.style.backgroundRepeat = "no-repeat";
        glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
        bw = 3; // Border width
        w = glass.offsetWidth / 2;
        h = glass.offsetHeight / 2;
        
        // Execute function when someone moves the magnifier glass over the image
        glass.addEventListener("mousemove", moveMagnifier);
        img.addEventListener("mousemove", moveMagnifier);
        
        // Hide glass when mouse leaves the image
        img.addEventListener("mouseleave", function() {
          glass.style.opacity = "0";
        });
        
        // Show glass when mouse enters the image
        img.addEventListener("mouseenter", function() {
          glass.style.opacity = "1";
        });
        
        function moveMagnifier(e) {
          var pos, x, y;
          // Prevent any other actions that may occur when moving over the image
          e.preventDefault();
          // Get the cursor's x and y positions
          pos = getCursorPos(e);
          x = pos.x;
          y = pos.y;
          
          // Prevent the magnifier glass from being positioned outside the image
          if (x > img.width - (w / zoom)) {x = img.width - (w / zoom);}
          if (x < w / zoom) {x = w / zoom;}
          if (y > img.height - (h / zoom)) {y = img.height - (h / zoom);}
          if (y < h / zoom) {y = h / zoom;}
          
          // Set the position of the magnifier glass
          glass.style.left = (x - w) + "px";
          glass.style.top = (y - h) + "px";
          
          // Display what the magnifier glass "sees"
          glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
        }
        
        function getCursorPos(e) {
          var a, x = 0, y = 0;
          e = e || window.event;
          // Get the x and y positions of the image
          a = img.getBoundingClientRect();
          // Calculate the cursor's x and y coordinates, relative to the image
          x = e.pageX - a.left - window.pageXOffset;
          y = e.pageY - a.top - window.pageYOffset;
          return {x : x, y : y};
        }
      }
      
      // Apply magnifier to all product images
      function initMagnifiers() {
        const productImages = document.querySelectorAll('img[data-magnify="true"]');
        productImages.forEach((img, index) => {
          img.id = 'magnifyImg' + index;
          magnify('magnifyImg' + index, 2); // Zoom level of 2x
        });
      }
      
      // Initialize magnifiers after a short delay to ensure images are loaded
      setTimeout(initMagnifiers, 500);
      
      const filters = <%- JSON.stringify(filters || { category: 'all', size: '', color: '', minPrice: '', maxPrice: '', sort: 'latest' }) %>;
      let currentPage = <%= currentPage || 1 %>;
      
      // Mobile filter toggle
      const mobileFilterToggle = document.getElementById('mobileFilterToggle');
      const filterSidebar = document.getElementById('filterSidebar');
      const closeFilter = document.getElementById('closeFilter');
      
      if (mobileFilterToggle) {
        mobileFilterToggle.addEventListener('click', function() {
          filterSidebar.classList.add('show');
          document.body.classList.add('filter-open');
        });
      }
      
      if (closeFilter) {
        closeFilter.addEventListener('click', function() {
          filterSidebar.classList.remove('show');
          document.body.classList.remove('filter-open');
        });
      }
      
      // Size selection
      const sizeButtons = document.querySelectorAll('.size-btn');
      const selectedSizeInput = document.getElementById('selectedSize');
      
      sizeButtons.forEach(button => {
        button.addEventListener('click', function() {
          const size = this.getAttribute('data-size');
          
          if (this.classList.contains('active')) {
            // Deselect if already active
            this.classList.remove('active');
            selectedSizeInput.value = '';
          } else {
            // Select new size
            sizeButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            selectedSizeInput.value = size;
          }
        });
      });
      
      // Wishlist functionality
      const wishlistToast = new bootstrap.Toast(document.getElementById('wishlistToast'));
      
      async function loadWishlistState() {
        try {
          const response = await fetch('/wishlist/ids');
          const data = await response.json();
          
          document.querySelectorAll('.wishlist-heart').forEach(heart => {
            const productId = heart.getAttribute('data-product-id');
            if (data.products.includes(productId)) {
              heart.querySelector('.heart').classList.add('active');
            }
          });
        } catch (error) {
          console.error('Error loading wishlist state:', error);
        }
      }
      
      loadWishlistState();
      
      document.querySelectorAll('.wishlist-heart').forEach(heart => {
        heart.addEventListener('click', async function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const productId = this.getAttribute('data-product-id');
          const heartPath = this.querySelector('.heart');
          const isActive = heartPath.classList.contains('active');
          const url = isActive ? '/wishlist/remove' : '/addTowhislist';
          
          try {
            const response = await fetch(url, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ productId: productId }),
            });
            
            const data = await response.json();
            
            const toastBody = document.getElementById('toastBody');
            toastBody.innerHTML = `<i class="${data.success ? 'fas fa-check-circle text-success' : 'fas fa-exclamation-circle text-danger'}"></i> ${data.message}`;
            
            if (data.success) {
              heartPath.classList.toggle('active');
              
              // Add floating heart animation if adding to wishlist
              if (!isActive) {
                const icon = this.closest('.wishlist-icon');
                const floatingHeart = document.createElement('div');
                floatingHeart.className = 'floating-heart';
                floatingHeart.innerHTML = '<i class="fas fa-heart"></i>';
                icon.appendChild(floatingHeart);
                
                setTimeout(() => {
                  floatingHeart.remove();
                }, 1000);
              }
            }
            
            wishlistToast.show();
          } catch (error) {
            console.error('Error:', error);
            const toastBody = document.getElementById('toastBody');
            toastBody.innerHTML = `<i class="fas fa-exclamation-circle text-danger"></i> Operation failed`;
            wishlistToast.show();
          }
        });
      });
      
      // Quick View functionality
      const quickViewModal = new bootstrap.Modal(document.getElementById('quickViewModal'));
      
      document.querySelectorAll('.quick-view').forEach(quickViewBtn => {
        quickViewBtn.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const productCard = this.closest('.product-card');
          const productLink = productCard.querySelector('.product-image-link').getAttribute('href');
          const productImage = productCard.querySelector('.product-image').getAttribute('src');
          const productName = productCard.querySelector('.product-name').textContent;
          const productPrice = productCard.querySelector('.product-price').textContent;
          const productRating = productCard.querySelector('.product-rating').innerHTML;
          
          document.getElementById('quickViewImage').setAttribute('src', productImage);
          document.getElementById('quickViewName').textContent = productName;
          document.getElementById('quickViewPrice').textContent = productPrice;
          document.getElementById('quickViewRating').innerHTML = productRating;
          document.getElementById('quickViewDescription').textContent = 'Premium quality product crafted with the finest materials for the modern lifestyle. This item features exceptional craftsmanship and attention to detail.';
          document.getElementById('quickViewLink').setAttribute('href', productLink);
          
          quickViewModal.show();
          
          // Reinitialize magnifier for the quick view image
          setTimeout(() => {
            magnify('quickViewImage', 2);
          }, 300);
        });
      });
      
      // Filter functionality
      const applyFiltersBtn = document.getElementById('applyFilters');
      const categorySelect = document.getElementById('categorySelect');
      const minPriceInput = document.getElementById('minPrice');
      const maxPriceInput = document.getElementById('maxPrice');
      const sortOption = document.getElementById('sortOption');
      const searchBtn = document.getElementById('searchBtn');
      const searchQuery = document.getElementById('searchQuery');
      
      function fetchProducts(isSearch = false) {
        const filterData = {
          category: categorySelect.value,
          size: selectedSizeInput.value,
          minPrice: minPriceInput.value,
          maxPrice: maxPriceInput.value,
          sort: sortOption.value,
          query: searchQuery.value,
          page: currentPage
        };
        
        const queryString = new URLSearchParams(filterData).toString();
        const url = isSearch ? `/search?${queryString}` : `/filterProducts?${queryString}`;
        
        // Show loading state
        document.getElementById('products-container').innerHTML = `
          <div class="col-12 text-center py-5">
            <div class="loading-spinner"></div>
            <p class="mt-3">Loading products...</p>
          </div>
        `;
        
        fetch(url, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
          updateProducts(data);
          updatePagination(data);
          
          // Close mobile filter if open
          if (window.innerWidth < 992) {
            filterSidebar.classList.remove('show');
            document.body.classList.remove('filter-open');
          }
          
          // Scroll to products section
          document.querySelector('.products-header').scrollIntoView({ behavior: 'smooth' });
          
          // Update wishlist state
          loadWishlistState();
          
          // Initialize magnifiers for new product images
          setTimeout(initMagnifiers, 500);
        })
        .catch(error => {
          console.error('Error fetching products:', error);
          document.getElementById('products-container').innerHTML = `
            <div class="col-12 text-center py-5">
              <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle me-2"></i>
                Error loading products. Please try again.
              </div>
            </div>
          `;
        });
      }
      
      if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', function() {
          currentPage = 1;
          fetchProducts();
        });
      }
      
      if (sortOption) {
        sortOption.addEventListener('change', function() {
          currentPage = 1;
          fetchProducts();
        });
      }
      
      if (searchBtn) {
        searchBtn.addEventListener('click', function() {
          currentPage = 1;
          fetchProducts(true);
        });
      }
      
      if (searchQuery) {
        searchQuery.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            e.preventDefault();
            currentPage = 1;
            fetchProducts(true);
          }
        });
      }
      
      // Pagination
      const pagination = document.getElementById('pagination');
      if (pagination) {
        pagination.addEventListener('click', function(e) {
          e.preventDefault();
          const pageLink = e.target.closest('.page-link');
          if (pageLink && !pageLink.parentElement.classList.contains('disabled')) {
            currentPage = parseInt(pageLink.dataset.page);
            fetchProducts(searchQuery.value.trim() !== '');
          }
        });
      }
      
      function updateProducts(data) {
        const productsContainer = document.getElementById('products-container');
        productsContainer.innerHTML = '';
        
        if (data.products && data.products.length > 0) {
          data.products.forEach((product, index) => {
            const mainImage = product.images && product.images.find(img => img.isMain) || 
                             (product.images && product.images[0]) || 
                             { url: '/placeholder.svg?height=300&width=300&query=fashion+product' };
            
            const rating = product.ratings ? (product.ratings.average || 0) : 0;
            let starsHtml = '';
            
            for (let star = 1; star <= 5; star++) {
              if (star <= Math.floor(rating)) {
                starsHtml += '<i class="fas fa-star"></i>';
              } else if (star <= Math.ceil(rating) && star > Math.floor(rating)) {
                starsHtml += '<i class="fas fa-star-half-alt"></i>';
              } else {
                starsHtml += '<i class="far fa-star"></i>';
              }
            }
            
            const pricingHtml = product.offer > 0 
              ? `<span class="product-price">₹${product.salePrice.toFixed(2)}</span>
                 <span class="product-original-price">₹${product.regularPrice.toFixed(2)}</span>`
              : `<span class="product-price">₹${product.regularPrice.toFixed(2)}</span>`;
            
            const badgeHtml = product.offer > 0 
              ? `<span class="product-badge">${product.offer}% OFF</span>` 
              : '';
            
            const productHtml = `
              <div class="col-md-4 col-sm-6 mb-4 product-item" data-aos="fade-up" data-aos-delay="${150 + (index * 50)}">
                <div class="product-card shimmer">
                  <div class="wishlist-icon">
                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="wishlist-heart" data-product-id="${product._id}">
                      <path class="heart" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                    </svg>
                  </div>
                  <a href="/productdetails/${product._id}" class="product-image-link img-magnifier-container">
                    <img src="${mainImage.url}" class="product-image" alt="${product.name}" onerror="this.onerror=null; this.src='/placeholder.svg?height=300&width=300&query=fashion+product';" data-magnify="true">
                    ${badgeHtml}
                    <div class="product-overlay">
                      <span class="quick-view">Quick View</span>
                    </div>
                  </a>
                  <div class="product-info">
                    <h3 class="product-name">${product.name}</h3>
                    <div class="product-price-rating">
                      <div class="product-pricing">
                        ${pricingHtml}
                      </div>
                      <div class="product-rating">
                        ${starsHtml}
                        <span class="rating-count">(${product.ratings ? (product.ratings.count || 0) : 0})</span>
                      </div>
                    </div>
                    <a href="/productdetails/${product._id}" class="btn-view-product">View Product</a>
                  </div>
                </div>
              </div>
            `;
            
            productsContainer.insertAdjacentHTML('beforeend', productHtml);
          });
          
          // Reattach event listeners for wishlist buttons
          document.querySelectorAll('.wishlist-heart').forEach(heart => {
            heart.addEventListener('click', async function(e) {
              e.preventDefault();
              e.stopPropagation();
              
              const productId = this.getAttribute('data-product-id');
              const heartPath = this.querySelector('.heart');
              const isActive = heartPath.classList.contains('active');
              const url = isActive ? '/wishlist/remove' : '/addTowhislist';
              
              try {
                const response = await fetch(url, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({ productId: productId }),
                });
                
                const data = await response.json();
                
                const toastBody = document.getElementById('toastBody');
                toastBody.innerHTML = `<i class="${data.success ? 'fas fa-check-circle text-success' : 'fas fa-exclamation-circle text-danger'}"></i> ${data.message}`;
                
                if (data.success) {
                  heartPath.classList.toggle('active');
                  
                  // Add floating heart animation if adding to wishlist
                  if (!isActive) {
                    const icon = this.closest('.wishlist-icon');
                    const floatingHeart = document.createElement('div');
                    floatingHeart.className = 'floating-heart';
                    floatingHeart.innerHTML = '<i class="fas fa-heart"></i>';
                    icon.appendChild(floatingHeart);
                    
                    setTimeout(() => {
                      floatingHeart.remove();
                    }, 1000);
                  }
                }
                
                wishlistToast.show();
              } catch (error) {
                console.error('Error:', error);
                const toastBody = document.getElementById('toastBody');
                toastBody.innerHTML = `<i class="fas fa-exclamation-circle text-danger"></i> Operation failed`;
                wishlistToast.show();
              }
            });
          });
          
          // Reattach quick view event listeners
          document.querySelectorAll('.quick-view').forEach(quickViewBtn => {
            quickViewBtn.addEventListener('click', function(e) {
              e.preventDefault();
              e.stopPropagation();
              
              const productCard = this.closest('.product-card');
              const productLink = productCard.querySelector('.product-image-link').getAttribute('href');
              const productImage = productCard.querySelector('.product-image').getAttribute('src');
              const productName = productCard.querySelector('.product-name').textContent;
              const productPrice = productCard.querySelector('.product-pricing').textContent.trim();
              const productRating = productCard.querySelector('.product-rating').innerHTML;
              
              document.getElementById('quickViewImage').setAttribute('src', productImage);
              document.getElementById('quickViewName').textContent = productName;
              document.getElementById('quickViewPrice').textContent = productPrice;
              document.getElementById('quickViewRating').innerHTML = productRating;
              document.getElementById('quickViewDescription').textContent = 'Premium quality product crafted with the finest materials for the modern lifestyle. This item features exceptional craftsmanship and attention to detail.';
              document.getElementById('quickViewLink').setAttribute('href', productLink);
              
              quickViewModal.show();
              
              // Reinitialize magnifier for the quick view image
              setTimeout(() => {
                magnify('quickViewImage', 2);
              }, 300);
            });
          });

          // Initialize AOS for new elements
          AOS.refresh();
        } else {
          productsContainer.innerHTML = `
            <div class="col-12">
              <div class="no-products">
                <div class="no-products-icon">
                  <i class="fas fa-search"></i>
                </div>
                <h3>No Products Found</h3>
                <p>${data.noProductsMessage || 'We couldn\'t find any products matching your criteria.'}</p>
                <a href="/allproduct" class="btn btn-shop-now">Clear Filters</a>
              </div>
            </div>
          `;
        }
        
        document.getElementById('productCount').textContent = `Products (${data.totalProducts})`;
      }
      
      function updatePagination(data) {
        const pagination = document.getElementById('pagination');
        if (!pagination) return;
        
        pagination.innerHTML = '';
        
        if (data.totalPages > 1) {
          pagination.innerHTML += `
            <li class="page-item ${data.currentPage === 1 ? 'disabled' : ''}">
              <a class="page-link" href="#" aria-label="Previous" data-page="${data.currentPage - 1}">
                <i class="fas fa-chevron-left"></i>
              </a>
            </li>
          `;
          
          for (let i = 1; i <= data.totalPages; i++) {
            pagination.innerHTML += `
              <li class="page-item ${data.currentPage === i ? 'active' : ''}">
                <a class="page-link" href="#" data-page="${i}">${i}</a>
              </li>
            `;
          }
          
          pagination.innerHTML += `
            <li class="page-item ${data.currentPage === data.totalPages ? 'disabled' : ''}">
              <a class="page-link" href="#" aria-label="Next" data-page="${data.currentPage + 1}">
                <i class="fas fa-chevron-right"></i>
              </a>
            </li>
          `;
        }
      }
      
      // Back to top button
      const backToTopButton = document.getElementById('backToTop');
      
      window.addEventListener('scroll', () => {
        if (window.scrollY > 300) {
          backToTopButton.classList.add('show');
        } else {
          backToTopButton.classList.remove('show');
        }
      });
      
      backToTopButton.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
      
      // Dark mode toggle
      const darkModeToggle = document.getElementById('darkModeToggle');
      const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
      
      // Check for saved theme preference or use the system preference
      const savedTheme = localStorage.getItem('theme');
      
      if (savedTheme === 'dark' || (!savedTheme && prefersDarkScheme.matches)) {
        document.body.classList.add('dark-mode');
        darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
      }
      
      darkModeToggle.addEventListener('click', () => {
        if (document.body.classList.contains('dark-mode')) {
          document.body.classList.remove('dark-mode');
          localStorage.setItem('theme', 'light');
          darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
        } else {
          document.body.classList.add('dark-mode');
          localStorage.setItem('theme', 'dark');
          darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }
      });
      
      // Newsletter form
      const newsletterForm = document.querySelector('.newsletter-form');
      if (newsletterForm) {
        newsletterForm.addEventListener('submit', function(e) {
          e.preventDefault();
          const email = this.querySelector('input[type="email"]').value;
          
          // Show success message
          const toastBody = document.getElementById('toastBody');
          toastBody.innerHTML = `<i class="fas fa-check-circle text-success"></i> Thank you for subscribing with ${email}!`;
          wishlistToast.show();
          
          // Reset form
          this.reset();
        });
      }
    });
  </script>
</body>
</html>
