<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ELITE WEAR - Premium Fashion</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/userStyle/allproduct.css">
</head>

<body>
    <%- include("../partials/user/header") %>

    <section class="hero">
        <div class="hero-content">
            <h1>Bestselling Products</h1>
            <p>Elevate your style with our premium collection</p>
        </div>
    </section>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-dark">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">shop</li>
    </ol>
    <div class="container shop-section">
        <div class="row">
            <div class="col-lg-3">
                <form id="filterForm" action="/filterProducts" method="GET">
                    <div class="filter-section">
                        <h5 class="filter-title">Filter By</h5>

                        <div class="filter-group">
                            <span class="filter-label">Categories</span>
                            <select class="form-select" name="category" id="categorySelect">
                                <option value="all">All Categories</option>
                                <% categories.forEach(cat => { %>
                                    <option value="<%= cat.name %>" <%=(filters && filters.category === cat.name) ? 'selected' : '' %>><%= cat.name %></option>
                                <% }); %>
                            </select>
                        </div>

                        <div class="filter-group">
                            <span class="filter-label">Size</span>
                            <div class="d-flex flex-wrap gap-2">
                                <% ['S', 'M', 'L', 'XL'].forEach(size => { %>
                                    <button type="button" class="btn btn-outline-dark btn-sm size-btn <%= (filters && filters.size === size) ? 'active' : '' %>" data-size="<%= size %>"><%= size %></button>
                                <% }); %>
                            </div>
                            <input type="hidden" name="size" id="selectedSize" value="<%= filters ? filters.size : '' %>">
                        </div>

                        <div class="filter-group">
                            <span class="filter-label">Price Range</span>
                            <div class="row">
                                <div class="col">
                                    <input type="number" class="form-control" placeholder="Min" name="minPrice" id="minPrice" value="<%= filters ? filters.minPrice : '' %>">
                                </div>
                                <div class="col">
                                    <input type="number" class="form-control" placeholder="Max" name="maxPrice" id="maxPrice" value="<%= filters ? filters.maxPrice : '' %>">
                                </div>
                            </div>
                        </div>

                        <div class="d-flex gap-2 mt-3">
                            <button type="button" class="btn btn-primary flex-grow-1" id="applyFilters">Apply Filters</button>
                            <a href="/allproduct" class="btn btn-outline-secondary">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

            <div class="col-lg-9">
                <div class="products-header d-flex justify-content-between align-items-center mb-4">
                    <h4 id="productCount">Products (<%= totalProducts %>)</h4>
                    <div class="search-container">
                        <form action="/search" method="GET" class="d-flex" id="searchForm">
                            <input type="text" name="query" id="searchQuery" placeholder="Search products or brands..." class="search-input" value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>">
                            <button type="button" class="search-button" id="searchBtn">
                                <i class="fas fa-search"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary ms-2" id="resetSearch">Reset</button>
                        </form>
                    </div>
        
                    <div class="sorting-options">
                        <select class="form-select" id="sortOption" name="sort">
                            <option value="latest" <%=(filters && filters.sort === 'latest') ? 'selected' : '' %>>New Arrivals</option>
                            <option value="price-low-high" <%=(filters && filters.sort === 'price-low-high') ? 'selected' : '' %>>Price: Low to High</option>
                            <option value="price-high-low" <%=(filters && filters.sort === 'price-high-low') ? 'selected' : '' %>>Price: High to Low</option>
                            <option value="popular" <%=(filters && filters.sort === 'popular') ? 'selected' : '' %>>Most Popular</option>
                        </select>
                    </div>
                </div>

                <div class="row" id="products-container">
                    <% if (products && products.length > 0) { %>
                        <% products.forEach(product => { %>
                            <div class="col-md-4 col-sm-6 mb-4 product-item">
                                <a href="/productdetails?id=<%= product._id %>" class="text-decoration-none text-dark product-link">
                                    <div class="product-card">
                                        <div class="product-img-container">
                                            <% const mainImage = product.images && product.images.find(img => img.isMain) || (product.images && product.images[0]) || { url: '/images/placeholder.jpg' }; %>
                                            <img src="<%= mainImage.url %>" class="product-img" alt="<%= product.name %>">
                                            <% if (product.offer && product.offer > 0) { %>
                                                <span class="product-badge"><%= product.offer %>% OFF</span>
                                            <% } %>
                                        </div>
                                        <h5 class="product-title"><%= product.name %></h5>
                                        <div class="product-pricing">
                                            <% if (product.offer > 0) { %>
                                                <span class="product-price">₹<%= (product.salePrice || 0).toFixed(2) %></span>
                                                <span class="product-original-price">₹<%= (product.regularPrice || 0).toFixed(2) %></span>
                                            <% } else { %>
                                                <span class="product-price">₹<%= (product.regularPrice || 0).toFixed(2) %></span>
                                            <% } %>
                                        </div>
                                        <div class="product-rating">
                                            <% const rating = product.ratings ? (product.ratings.average || 0) : 0; %>
                                            <% for (let star = 1; star <= 5; star++) { %>
                                                <% if (star <= Math.floor(rating)) { %>
                                                    <i class="fas fa-star"></i>
                                                <% } else if (star <= Math.ceil(rating) && star > Math.floor(rating)) { %>
                                                    <i class="fas fa-star-half-alt"></i>
                                                <% } else { %>
                                                    <i class="far fa-star"></i>
                                                <% } %>
                                            <% } %>
                                            <span class="ms-1">(<%= product.ratings ? (product.ratings.count || 0) : 0 %>)</span>
                                        </div>
                                    </div>
                                </a>
                                <div class="wishlist-icon">
                                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="wishlist-heart" data-product-id="<%= product._id %>">
                                        <path class="heart" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                                    </svg>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="col-12 text-center py-5">
                            <div class="alert alert-info">
                                <% if (typeof noProductsMessage !== 'undefined' && noProductsMessage) { %>
                                    <%= noProductsMessage %>
                                <% } else { %>
                                    No products found matching your criteria.
                                <% } %>
                                <div class="mt-3">
                                    <a href="/allproduct" class="btn btn-primary">Go Back</a>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>

                <% if (totalPages && totalPages > 1) { %>
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center" id="pagination">
                            <% const buildPageUrl = (pageNum) => {
                                const params = new URLSearchParams();
                                if (filters) {
                                    if (filters.category && filters.category !== 'all') params.append('category', filters.category);
                                    if (filters.size) params.append('size', filters.size);
                                    if (filters.color) params.append('color', filters.color);
                                    if (filters.minPrice) params.append('minPrice', filters.minPrice);
                                    if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);
                                    if (filters.sort) params.append('sort', filters.sort);
                                }
                                if (typeof searchQuery !== 'undefined' && searchQuery) {
                                    params.append('query', searchQuery);
                                }
                                params.append('page', pageNum);
                                return `/filterProducts?${params.toString()}`;
                            } %>

                            <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                                <a class="page-link" href="<%= buildPageUrl(currentPage - 1) %>" aria-label="Previous" data-page="<%= currentPage - 1 %>">
                                    <span aria-hidden="true">«</span>
                                </a>
                            </li>

                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="<%= buildPageUrl(i) %>" data-page="<%= i %>"><%= i %></a>
                                </li>
                            <% } %>

                            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                <a class="page-link" href="<%= buildPageUrl(currentPage + 1) %>" aria-label="Next" data-page="<%= currentPage + 1 %>">
                                    <span aria-hidden="true">»</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                <% } %>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <!-- Toast Container -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="wishlistToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Wishlist</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="toastBody"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const filters = <%- JSON.stringify(filters || { category: 'all', size: '', color: '', minPrice: '', maxPrice: '', sort: 'latest' }) %>;
        let currentPage = <%= currentPage || 1 %>;

        document.addEventListener('DOMContentLoaded', function () {
            // Initialize toast
            const wishlistToast = new bootstrap.Toast(document.getElementById('wishlistToast'));

    
            async function loadWishlistState() {
                try {
                    const response = await fetch('/wishlist/ids');
                    const data = await response.json();
                    
                    document.querySelectorAll('.wishlist-heart').forEach(heart => {
                        const productId = heart.getAttribute('data-product-id');
                        if (data.products.includes(productId)) {
                            heart.querySelector('.heart').classList.add('active');
                        }
                    });
                } catch (error) {
                    console.error('Error loading wishlist state:', error);
                }
            }
            loadWishlistState();

            // Handle wishlist toggle
            document.querySelectorAll('.wishlist-heart').forEach(heart => {
                heart.addEventListener('click', async function(event) {
                    
                    const productId = this.getAttribute('data-product-id');
                    const heartPath = this.querySelector('.heart');
                    const isActive = heartPath.classList.contains('active');
                    const url = isActive ? '/wishlist/remove' : '/addTowhislist';

                

                    try {
                        const response = await fetch(url, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ productId: productId }),
                        });
                        
                        const data = await response.json();
                
                        const toastBody = document.getElementById('toastBody');
                        toastBody.textContent = data.message;
                        toastBody.style.color = data.success ? 'green' : 'red';
                        wishlistToast.show();
                        if (data.success) {
                            heartPath.classList.toggle('active');
                        }
                    } catch (error) {
                
                        const toastBody = document.getElementById('toastBody');
                        toastBody.textContent = 'Operation failed';
                        toastBody.style.color = 'red';
                        wishlistToast.show();
                    }
                });
            });

            
            function fetchProducts(isSearch = false) {
                const filterData = {
                    category: document.getElementById('categorySelect').value,
                    size: document.getElementById('selectedSize').value,
                    minPrice: document.getElementById('minPrice').value,
                    maxPrice: document.getElementById('maxPrice').value,
                    sort: document.getElementById('sortOption').value,
                    query: document.getElementById('searchQuery').value,
                    page: currentPage
                };

                const queryString = new URLSearchParams(filterData).toString();
                const url = isSearch ? `/search?${queryString}` : `/filterProducts?${queryString}`;

                fetch(url, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    credentials: 'same-origin'
                })
                .then(response => response.json())
                .then(data => {
                    updateProducts(data);
                    updatePagination(data);
                    // Reload wishlist state after updating products
                    loadWishlistState();
                })
                .catch(error => {
                    console.error('Error fetching products:', error);
                });
            }

            document.getElementById('categorySelect').addEventListener('change', function () {
                currentPage = 1;
                fetchProducts();
            });

            document.querySelectorAll('.size-btn').forEach(btn => {
                btn.addEventListener('click', function (e) {
                    e.preventDefault();
                    const size = this.dataset.size;
                    const sizeInput = document.getElementById('selectedSize');
                    
                    document.querySelectorAll('.size-btn').forEach(b => b.classList.remove('active'));
                    if (sizeInput.value === size) {
                        sizeInput.value = '';
                    } else {
                        this.classList.add('active');
                        sizeInput.value = size;
                    }
                    currentPage = 1;
                    fetchProducts();
                });
            });

            document.getElementById('applyFilters').addEventListener('click', function (e) {
                e.preventDefault();
                currentPage = 1;
                fetchProducts();
            });

            document.getElementById('sortOption').addEventListener('change', function () {
                currentPage = 1;
                fetchProducts();
            });

            document.getElementById('searchBtn').addEventListener('click', function (e) {
                e.preventDefault();
                currentPage = 1;
                fetchProducts(true); 
            });

            document.getElementById('resetSearch').addEventListener('click', function () {
                document.getElementById('searchQuery').value = '';
                currentPage = 1;
                fetchProducts(); 
            });

            document.getElementById('pagination')?.addEventListener('click', function (e) {
                e.preventDefault();
                const pageLink = e.target.closest('.page-link');
                if (pageLink && !pageLink.parentElement.classList.contains('disabled')) {
                    currentPage = parseInt(pageLink.dataset.page);
                    fetchProducts(document.getElementById('searchQuery').value.trim() !== '');
                }
            });

            function updateProducts(data) {
                const productsContainer = document.getElementById('products-container');
                productsContainer.innerHTML = '';

                if (data.products && data.products.length > 0) {
                    data.products.forEach(product => {
                        const productHtml = `
                            <div class="col-md-4 col-sm-6 mb-4 product-item">
                                <a href="/productdetails?id=${product._id}" class="text-decoration-none text-dark product-link">
                                    <div class="product-card">
                                        <div class="product-img-container">
                                            <img src="${product.images[0]?.url || '/images/placeholder.jpg'}" class="product-img" alt="${product.name}">
                                            ${product.offer > 0 ? `<span class="product-badge">${product.offer}% OFF</span>` : ''}
                                        </div>
                                        <h5 class="product-title">${product.name}</h5>
                                        <div class="product-pricing">
                                            ${product.offer > 0 ? `
                                                <span class="product-price">₹${product.salePrice.toFixed(2)}</span>
                                                <span class="product-original-price">₹${product.regularPrice.toFixed(2)}</span>
                                            ` : `
                                                <span class="product-price">₹${product.regularPrice.toFixed(2)}</span>
                                            `}
                                        </div>
                                        <div class="product-rating">
                                            ${generateStars(product.ratings?.average || 0)}
                                            <span class="ms-1">(${product.ratings?.count || 0})</span>
                                        </div>
                                    </div>
                                </a>
                                <div class="wishlist-icon">
                                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="wishlist-heart" data-product-id="${product._id}">
                                        <path class="heart" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                                    </svg>
                                </div>
                            </div>
                        `;
                        productsContainer.insertAdjacentHTML('beforeend', productHtml);
                    });

                    document.querySelectorAll('.wishlist-heart').forEach(heart => {
                        heart.addEventListener('click', async function(event) {
                            
                            const productId = this.getAttribute('data-product-id');
                            const heartPath = this.querySelector('.heart');
                            const isActive = heartPath.classList.contains('active');
                            const url = isActive ? '/wishlist/remove' : '/addTowhislist';

                            

                            try {
                                const response = await fetch(url, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ productId: productId }),
                                });
                        
                                const data = await response.json();
                            
                                const toastBody = document.getElementById('toastBody');
                                toastBody.textContent = data.message;
                                toastBody.style.color = data.success ? 'green' : 'red';
                                wishlistToast.show();
                                if (data.success) {
                                    heartPath.classList.toggle('active');
                                }
                            } catch (error) {
                                console.error('Error:', error);
                                const toastBody = document.getElementById('toastBody');
                                toastBody.textContent = 'Operation failed';
                                toastBody.style.color = 'red';
                                wishlistToast.show();
                            }
                        });
                    });
                } else {
                    productsContainer.innerHTML = `
                        <div class="col-12 text-center py-5">
                            <div class="alert alert-info">
                                ${data.noProductsMessage || 'No products found matching your criteria.'}
                                <div class="mt-3">
                                    <a href="/allproduct" class="btn btn-primary">Go Back</a>
                                </div>
                            </div>
                        </div>
                    `;
                }

                document.getElementById('productCount').textContent = `Products (${data.totalProducts})`;
            }

            function updatePagination(data) {
                const pagination = document.getElementById('pagination');
                if (!pagination) return;

                pagination.innerHTML = '';

                if (data.totalPages > 1) {
                    pagination.innerHTML += `
                        <li class="page-item ${data.currentPage === 1 ? 'disabled' : ''}">
                            <a class="page-link" href="#" aria-label="Previous" data-page="${data.currentPage - 1}">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>
                    `;

                    for (let i = 1; i <= data.totalPages; i++) {
                        pagination.innerHTML += `
                            <li class="page-item ${data.currentPage === i ? 'active' : ''}">
                                <a class="page-link" href="#" data-page="${i}">${i}</a>
                            </li>
                        `;
                    }

                    pagination.innerHTML += `
                        <li class="page-item ${data.currentPage === data.totalPages ? 'disabled' : ''}">
                            <a class="page-link" href="#" aria-label="Next" data-page="${data.currentPage + 1}">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    `;
                }
            }

            function generateStars(rating) {
                let stars = '';
                for (let i = 1; i <= 5; i++) {
                    if (i <= Math.floor(rating)) {
                        stars += '<i class="fas fa-star"></i>';
                    } else if (i <= Math.ceil(rating) && i > Math.floor(rating)) {
                        stars += '<i class="fas fa-star-half-alt"></i>';
                    } else {
                        stars += '<i class="far fa-star"></i>';
                    }
                }
                return stars;
            }

            function initActiveStates() {
                if (filters.size) {
                    const sizeBtn = document.querySelector(`.size-btn[data-size="${filters.size}"]`);
                    if (sizeBtn) sizeBtn.classList.add('active');
                }
            }

            initActiveStates();

            // Initial fetch to load products
            fetchProducts();
        });
        
    </script>
</body>

</html>