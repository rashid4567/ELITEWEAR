<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Elite Wear - Shopping Cart</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- AOS Animation Library -->
  <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
  <!-- Swiper CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/userStyle/header.css">
  <link rel="stylesheet" href="/userStyle/footer.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <link rel="stylesheet" href="/userStyle/cart.css">
</head>
<body>
 

  <!-- Scroll Indicator -->
  <div class="scroll-indicator"></div>

  <!-- Cursor Glow Effect -->
  <div class="cursor-glow"></div>

  <%- include("../partials/user/header") %>

  <div class="container my-5">
    <div class="row justify-content-center">
      <div class="col-lg-10">
        <div class="cart-header-wrapper" data-aos="fade-up">
          <h2 class="cart-header">YOUR SHOPPING CART</h2>
        </div>

        <% if (!cart || cart.items.length === 0) { %>
        <div class="empty-cart-container" data-aos="fade-up" data-aos-delay="200">
          <div class="empty-cart-icon">
            <i class="fas fa-shopping-cart"></i>
          </div>
          <p>Your cart is empty. Discover our latest collections and add something special!</p>
          <div class="mt-4">
            <a href="/allproduct" class="continue-shopping-btn">
              <i class="fas fa-arrow-left me-2"></i>Continue Shopping
            </a>
          </div>
        </div>
        <% } else { %>
        <div class="text-end mb-4" data-aos="fade-up" data-aos-delay="100">
          <button class="btn empty-cart-btn" onclick="emptyCart()">
            <i class="fas fa-trash-alt me-2"></i>Empty my Cart
          </button>
        </div>

        <div class="row">
          <div class="col-lg-8">
            <div class="cart-items-container">
              <% cart.items.forEach((item, index) => { %>
                <% if (item.productId) { %>
                <div class="cart-item" data-aos="fade-up" data-aos-delay="<%= index * 100 %>">
                  <div class="shimmer"></div>
                  <div class="row align-items-center">
                    <div class="col-md-3 col-4">
                      <div class="product-image-container">
                        <img
                          src="<%= item.productId.images && item.productId.images.length > 0 ? item.productId.images[0].url : '/placeholder.svg?height=300&width=300&query=fashion+product' %>"
                          alt="<%= item.productId.name || 'Product' %>"
                          class="cart-img"
                          onerror="this.onerror=null; this.src='/placeholder.svg?height=300&width=300&query=fashion+product';"
                        />
                      </div>
                    </div>
                    <div class="col-md-9 col-8">
                      <div class="row">
                        <div class="col-md-7">
                          <h3 class="item-title"><%= item.productId.name || 'Unknown Product' %></h3>
                          <div class="product-details">
                            <% if (item.size) { %>
                            <p class="product-attribute"><span>Size:</span> <%= item.size %></p>
                            <% } %>
                            <% if (item.color) { %>
                            <p class="product-attribute"><span>Color:</span> <%= item.color %></p>
                            <% } %>
                          </div>
                          <div class="price-container">
                            <% const variant = item.productId.variants && item.size
                              ? item.productId.variants.find(v => v.size === item.size)
                              : item.productId.variants && item.productId.variants[0] || { salePrice: item.productId.salePrice || 0 }; %>
                            <div class="price-wrapper">
                              <span class="price-label">Price:</span>
                              <span class="price-current">₹<%= (variant.salePrice || 0).toFixed(2) %></span>
                            </div>
                          </div>
                        </div>
                        <div class="col-md-5">
                          <div class="quantity-control">
                            <button
                              class="quantity-btn"
                              onclick="updateQuantity('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>', -1)"
                              data-action="decrement"
                              aria-label="Decrease quantity"
                            >
                              <i class="fas fa-minus"></i>
                            </button>
                            <input
                              type="text"
                              class="quantity-input"
                              value="<%= item.quantity %>"
                              readonly
                              aria-describedby="quantity-<%= item.productId._id %>"
                            />
                            <button
                              class="quantity-btn"
                              onclick="updateQuantity('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>', 1)"
                              data-action="increment"
                              aria-label="Increase quantity"
                            >
                              <i class="fas fa-plus"></i>
                            </button>
                          </div>
                          <div class="text-md-end mt-3">
                            <button
                              class="remove-btn"
                              onclick="removeItem('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>')"
                              data-action="remove"
                              aria-label="Remove item"
                            >
                              <i class="fas fa-times me-1"></i> Remove
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <% } else { %>
                <p class="text-muted">Invalid product in cart</p>
                <% } %>
              <% }) %>
            </div>
          </div>

          <div class="col-lg-4">
            <div class="cart-summary" data-aos="fade-up" data-aos-delay="300">
              <div class="subtotal-row">
                <div class="row">
                  <div class="col-6">
                    <h4>SUBTOTAL</h4>
                  </div>
                  <div class="col-6 text-end">
                    <div class="price-current">₹<%= subtotal %></div>
                  </div>
                </div>
              </div>

              <div class="shipping-info">
                <p>
                  <i class="fas fa-info-circle me-2"></i>
                  Shipping, taxes, and discount codes calculated at checkout.
                </p>
              </div>

              <div class="checkout-actions">
                <a href="/checkOut" class="checkout-btn">
                  <i class="fas fa-lock me-2"></i>Proceed to checkout
                </a>
                <a href="/allproduct" class="continue-btn">
                  <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                </a>
              </div>
            </div>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>

  <div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

  <%- include("../partials/user/footer") %>

  <!-- Dark Mode Toggle -->
  <button class="dark-mode-toggle" id="darkModeToggle">
    <i class="fas fa-moon"></i>
  </button>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize AOS
      AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true
      });

    
      // Scroll Indicator
      const scrollIndicator = document.querySelector('.scroll-indicator');
      window.addEventListener('scroll', () => {
        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        scrollIndicator.style.width = scrolled + '%';
      });

      // Cursor Glow Effect
      const cursorGlow = document.querySelector('.cursor-glow');
      document.addEventListener('mousemove', (e) => {
        cursorGlow.style.left = e.clientX + 'px';
        cursorGlow.style.top = e.clientY + 'px';
      });

      document.addEventListener('mousedown', () => {
        cursorGlow.style.width = '30px';
        cursorGlow.style.height = '30px';
        cursorGlow.style.opacity = '0.8';
      });

      document.addEventListener('mouseup', () => {
        cursorGlow.style.width = '20px';
        cursorGlow.style.height = '20px';
        cursorGlow.style.opacity = '0.5';
      });

      // Dark mode toggle
      const darkModeToggle = document.getElementById('darkModeToggle');
      const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
      
      // Check for saved theme preference or use the system preference
      const savedTheme = localStorage.getItem('theme');
      
      if (savedTheme === 'dark' || (!savedTheme && prefersDarkScheme.matches)) {
        document.body.classList.add('dark-mode');
        darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
      }
      
      darkModeToggle.addEventListener('click', () => {
        if (document.body.classList.contains('dark-mode')) {
          document.body.classList.remove('dark-mode');
          localStorage.setItem('theme', 'light');
          darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
        } else {
          document.body.classList.add('dark-mode');
          localStorage.setItem('theme', 'dark');
          darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }
      });

      // Navbar scroll effect
      window.addEventListener('scroll', function () {
        const navbar = document.querySelector('.navbar');
        if (navbar) {
          if (window.scrollY > 50) {
            navbar.classList.add('navbar-scrolled');
          } else {
            navbar.classList.remove('navbar-scrolled');
          }
        }
      });

      // Add shimmer effect to cart items
      document.querySelectorAll('.cart-item').forEach(item => {
        item.addEventListener('mouseenter', () => {
          const shimmer = item.querySelector('.shimmer');
          if (shimmer) {
            shimmer.style.opacity = '1';
          }
        });

        item.addEventListener('mouseleave', () => {
          const shimmer = item.querySelector('.shimmer');
          if (shimmer) {
            shimmer.style.opacity = '0';
          }
        });
      });
    });

    function showToast(message, type = "success") {
      const toastContainer = document.querySelector(".toast-container");
      toastContainer.innerHTML = "";
      const toast = document.createElement("div");
      toast.className = `toast align-items-center text-white bg-${
        type === "success" ? "success" : "danger"
      } border-0`;
      toast.role = "alert";
      toast.ariaLive = "assertive";
      toast.ariaAtomic = "true";
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            <i class="fas fa-${type === "success" ? "check-circle" : "exclamation-circle"} me-2"></i>
            ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      setTimeout(() => toast.remove(), 3000);
    }

    async function updateQuantity(productId, size, color, change) {
      const buttons = document.querySelectorAll(
        `[data-action="increment"], [data-action="decrement"]`
      );
      buttons.forEach((btn) => btn.classList.add("loading-btn"));

      try {
        const response = await fetch("/cart/update", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, size, color, change }),
          credentials: "include",
        });
        const result = await response.json();

        if (result.success) {
          window.location.reload();
        } else {
          showToast(result.message, "danger");
          if (response.status === 401) {
            showToast("Please log in to update cart", "danger");
            setTimeout(() => (window.location.href = "/login"), 2000);
          }
        }
      } catch (error) {
        console.error("Error updating quantity:", error);
        showToast("Failed to update quantity", "danger");
      } finally {
        buttons.forEach((btn) => btn.classList.remove("loading-btn"));
      }
    }

    async function removeItem(productId, size, color) {
      const button = event.currentTarget;
      button.classList.add("loading-btn");

      try {
        const response = await fetch("/cart/remove", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, size, color }),
          credentials: "include",
        });
        const result = await response.json();

        if (result.success) {
          // Add a nice fade-out animation before reload
          const cartItem = button.closest('.cart-item');
          cartItem.style.transition = 'all 0.5s ease';
          cartItem.style.opacity = '0';
          cartItem.style.transform = 'translateX(50px)';
          
          setTimeout(() => {
            window.location.reload();
          }, 500);
        } else {
          showToast(result.message, "danger");
          if (response.status === 401) {
            showToast("Please log in to remove items", "danger");
            setTimeout(() => (window.location.href = "/login"), 2000);
          }
        }
      } catch (error) {
        console.error("Error removing item:", error);
        showToast("Failed to remove item", "danger");
      } finally {
        button.classList.remove("loading-btn");
      }
    }

    async function emptyCart() {
      if (!document.querySelector(".cart-item")) {
        showToast("Cart is already empty", "info");
        return;
      }
      
      const result = await Swal.fire({
        title: "ARE YOU SURE?",
        text: "Do you want to clear the cart?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, clear",
        confirmButtonColor: "#ef4444",
        cancelButtonText: "No",
        cancelButtonColor: "#64748b",
        customClass: {
          popup: "swal-custom",
        },
        background: document.body.classList.contains('dark-mode') ? '#1e293b' : '#ffffff',
        color: document.body.classList.contains('dark-mode') ? '#f1f5f9' : '#1e293b',
      });

      if (result.isConfirmed) {
        const button = event.currentTarget;
        button.classList.add("loading-btn");

        try {
          const response = await fetch("/cart/empty", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
          });
          const result = await response.json();

          if (result.success) {
            // Add a nice fade-out animation for all cart items
            const cartItems = document.querySelectorAll('.cart-item');
            cartItems.forEach((item, index) => {
              item.style.transition = 'all 0.5s ease';
              item.style.opacity = '0';
              item.style.transform = 'translateY(30px)';
              item.style.transitionDelay = `${index * 0.1}s`;
            });
            
            setTimeout(() => {
              window.location.reload();
            }, 800);
          } else {
            showToast(result.message, "danger");
            if (response.status === 401) {
              showToast("Please log in to clear cart", "danger");
              setTimeout(() => (window.location.href = "/login"), 2000);
            }
          }
        } catch (error) {
          console.error("Error clearing cart:", error);
          showToast("Failed to clear cart", "danger");
        } finally {
          button.classList.remove("loading-btn");
        }
      }
    }
  </script>
</body>
</html>
