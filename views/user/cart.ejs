<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Elite Wear - Shopping Cart</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- AOS Animation Library -->
  <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
  <!-- Swiper CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/userStyle/header.css">
  <link rel="stylesheet" href="/userStyle/footer.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    :root {
      --primary-color: #0f172a;
      --secondary-color: #f8fafc;
      --accent-color: #3b82f6;
      --accent-hover: #2563eb;
      --accent-secondary: #8b5cf6;
      --accent-tertiary: #ec4899;
      --text-primary: #1e293b;
      --text-secondary: #64748b;
      --text-light: #94a3b8;
      --border-color: #e2e8f0;
      --card-bg: #ffffff;
      --sidebar-bg: #ffffff;
      --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05);
      --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.1);
      --gradient-primary: linear-gradient(135deg, #3b82f6, #8b5cf6);
      --gradient-secondary: linear-gradient(135deg, #8b5cf6, #ec4899);
      --gradient-accent: linear-gradient(135deg, #3b82f6, #10b981);
      --success-color: #10b981;
      --error-color: #ef4444;
      --warning-color: #f59e0b;
      --transition-fast: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      --border-radius-sm: 0.375rem;
      --border-radius: 0.5rem;
      --border-radius-lg: 0.75rem;
      --border-radius-xl: 1rem;
      --border-radius-full: 9999px;
      --font-primary: 'Outfit', sans-serif;
      --font-secondary: 'Playfair Display', serif;
    }

    /* Dark mode variables */
    .dark-mode {
      --primary-color: #f8fafc;
      --secondary-color: #0f172a;
      --text-primary: #f1f5f9;
      --text-secondary: #cbd5e1;
      --text-light: #94a3b8;
      --border-color: #334155;
      --card-bg: #1e293b;
      --sidebar-bg: #0f172a;
      --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
      --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.3);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: var(--font-primary);
      color: var(--text-primary);
      background-color: var(--secondary-color);
      overflow-x: hidden;
      transition: background-color var(--transition-normal), color var(--transition-normal);
    }

    /* Scrollbar styling */
    ::-webkit-scrollbar {
      width: 6px;
      height: 6px;
    }

    ::-webkit-scrollbar-track {
      background: var(--secondary-color);
    }

    ::-webkit-scrollbar-thumb {
      background: var(--text-light);
      border-radius: var(--border-radius-full);
    }

    ::-webkit-scrollbar-thumb:hover {
      background: var(--text-secondary);
    }

    /* Scroll Indicator */
    .scroll-indicator {
      position: fixed;
      top: 0;
      left: 0;
      height: 3px;
      background: var(--gradient-primary);
      z-index: 9999;
      width: 0%;
      transition: width 0.1s ease;
    }

    /* Cursor Glow Effect */
    .cursor-glow {
      position: fixed;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: var(--accent-color);
      pointer-events: none;
      mix-blend-mode: difference;
      z-index: 9999;
      transform: translate(-50%, -50%);
      opacity: 0.5;
      transition: width 0.3s, height 0.3s, opacity 0.3s;
    }

    /* Cart Header */
    .cart-header-wrapper {
      position: relative;
      margin-bottom: 3rem;
      text-align: center;
      overflow: hidden;
    }

    .cart-header {
      font-family: var(--font-secondary);
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
      position: relative;
      display: inline-block;
      background: var(--gradient-primary);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      text-fill-color: transparent;
    }

    .cart-header::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: var(--gradient-primary);
      border-radius: var(--border-radius-full);
      transition: width var(--transition-normal);
    }

    .cart-header:hover::after {
      width: 120px;
    }

    /* Empty Cart */
    .empty-cart-container {
      text-align: center;
      padding: 4rem 2rem;
      background-color: var(--card-bg);
      border-radius: var(--border-radius-lg);
      box-shadow: var(--card-shadow);
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
    }

    .empty-cart-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%233b82f6' fill-opacity='0.03' fill-rule='evenodd'/%3E%3C/svg%3E");
      opacity: 0.5;
      z-index: 0;
    }

    .empty-cart-icon {
      font-size: 5rem;
      color: var(--text-light);
      margin-bottom: 1.5rem;
      position: relative;
      z-index: 1;
      animation: float 3s ease-in-out infinite;
    }

    @keyframes float {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-10px);
      }
      100% {
        transform: translateY(0);
      }
    }

    .empty-cart-container p {
      font-size: 1.25rem;
      color: var(--text-secondary);
      margin-bottom: 2rem;
      position: relative;
      z-index: 1;
    }

    .continue-shopping-btn {
      background: var(--gradient-primary);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: var(--border-radius-full);
      font-weight: 500;
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      z-index: 1;
      border: none;
    }

    .continue-shopping-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--gradient-secondary);
      z-index: -1;
      opacity: 0;
      transition: opacity var(--transition-normal);
    }

    .continue-shopping-btn:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(59, 130, 246, 0.3);
      color: white;
    }

    .continue-shopping-btn:hover::before {
      opacity: 1;
    }

    /* Empty Cart Button */
    .empty-cart-btn {
      background-color: transparent;
      color: var(--error-color);
      border: 1px solid var(--error-color);
      padding: 0.5rem 1rem;
      border-radius: var(--border-radius);
      font-weight: 500;
      transition: all var(--transition-normal);
      margin-bottom: 1.5rem;
    }

    .empty-cart-btn:hover {
      background-color: var(--error-color);
      color: white;
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
    }

    /* Cart Items Container */
    .cart-items-container {
      margin-bottom: 2rem;
    }

    /* Cart Item */
    .cart-item {
      background-color: var(--card-bg);
      border-radius: var(--border-radius-lg);
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: var(--card-shadow);
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      transform: translateY(0);
    }

    .cart-item:hover {
      transform: translateY(-5px);
      box-shadow: var(--card-hover-shadow);
    }

    .cart-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 0;
      background: var(--gradient-primary);
      transition: height 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      z-index: 1;
    }

    .cart-item:hover::before {
      height: 100%;
    }

    /* Product Image */
    .product-image-container {
      position: relative;
      overflow: hidden;
      border-radius: var(--border-radius);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      transition: all var(--transition-normal);
      aspect-ratio: 1/1;
    }

    .cart-item:hover .product-image-container {
      transform: scale(1.05);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    .cart-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform var(--transition-normal);
    }

    .cart-item:hover .cart-img {
      transform: scale(1.1);
    }

    /* Product Details */
    .item-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: var(--text-primary);
      transition: color var(--transition-fast);
    }

    .cart-item:hover .item-title {
      color: var(--accent-color);
    }

    .product-details {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .product-attribute {
      font-size: 0.9rem;
      color: var(--text-secondary);
      margin: 0;
    }

    .product-attribute span {
      font-weight: 500;
      color: var(--text-primary);
    }

    /* Price Container */
    .price-container {
      margin-bottom: 1rem;
    }

    .price-wrapper {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .price-label {
      font-size: 0.9rem;
      color: var(--text-secondary);
    }

    .price-current {
      font-size: 1.1rem;
      font-weight: 600;
      color: var(--accent-color);
    }

    /* Quantity Control */
    .quantity-control {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      margin: 1rem 0;
    }

    .quantity-btn {
      width: 36px;
      height: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: var(--border-radius);
      transition: all var(--transition-fast);
      padding: 0;
      background-color: var(--secondary-color);
      color: var(--text-primary);
      border: none;
    }

    .quantity-btn:hover {
      background-color: var(--accent-color);
      color: white;
      transform: scale(1.1);
    }

    .quantity-btn.loading-btn {
      opacity: 0.7;
      pointer-events: none;
    }

    .quantity-input {
      width: 50px;
      height: 36px;
      text-align: center;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      background-color: var(--card-bg);
      color: var(--text-primary);
      font-weight: 500;
    }

    /* Remove Button */
    .remove-btn {
      background-color: transparent;
      color: var(--error-color);
      border: 1px solid var(--error-color);
      padding: 0.5rem 1rem;
      border-radius: var(--border-radius);
      font-weight: 500;
      transition: all var(--transition-normal);
    }

    .remove-btn:hover {
      background-color: var(--error-color);
      color: white;
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
    }

    .remove-btn.loading-btn {
      opacity: 0.7;
      pointer-events: none;
    }

    /* Cart Summary */
    .cart-summary {
      background-color: var(--card-bg);
      border-radius: var(--border-radius-lg);
      padding: 2rem;
      box-shadow: var(--card-shadow);
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
    }

    .cart-summary:hover {
      box-shadow: var(--card-hover-shadow);
    }

    .cart-summary::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: var(--gradient-primary);
      transition: height var(--transition-normal);
    }

    .cart-summary:hover::before {
      height: 8px;
    }

    .subtotal-row {
      padding-bottom: 1.5rem;
      margin-bottom: 1.5rem;
      border-bottom: 1px solid var(--border-color);
    }

    .subtotal-row h4 {
      font-size: 1.1rem;
      font-weight: 600;
      color: var(--text-primary);
      margin: 0;
    }

    .shipping-info {
      margin-bottom: 1.5rem;
    }

    .shipping-info p {
      font-size: 0.9rem;
      color: var(--text-secondary);
      margin: 0;
    }

    /* Checkout Actions */
    .checkout-actions {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .checkout-btn {
      background: var(--gradient-primary);
      color: white;
      padding: 1rem;
      border-radius: var(--border-radius);
      font-weight: 500;
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      z-index: 1;
      text-align: center;
    }

    .checkout-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--gradient-secondary);
      z-index: -1;
      opacity: 0;
      transition: opacity var(--transition-normal);
    }

    .checkout-btn:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(59, 130, 246, 0.3);
      color: white;
    }

    .checkout-btn:hover::before {
      opacity: 1;
    }

    .continue-btn {
      background-color: transparent;
      color: var(--accent-color);
      border: 1px solid var(--accent-color);
      padding: 1rem;
      border-radius: var(--border-radius);
      font-weight: 500;
      transition: all var(--transition-normal);
      text-align: center;
    }

    .continue-btn:hover {
      background-color: var(--accent-color);
      color: white;
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
    }

    /* Toast Container */
    .toast-container {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      z-index: 1050;
    }

    .toast {
      background-color: var(--card-bg);
      border-radius: var(--border-radius);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      border: none;
      min-width: 300px;
      overflow: hidden;
      margin-bottom: 1rem;
    }

    .toast-body {
      display: flex;
      align-items: center;
      padding: 1rem;
    }

    .toast-body i {
      margin-right: 0.75rem;
      font-size: 1.25rem;
    }

    .toast.bg-success .toast-body i {
      color: var(--success-color);
    }

    .toast.bg-danger .toast-body i {
      color: var(--error-color);
    }

    /* Preloader */
    .preloader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--primary-color);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      transition: opacity 0.5s ease, visibility 0.5s ease;
    }

    .preloader.fade-out {
      opacity: 0;
      visibility: hidden;
    }

    .loader {
      width: 80px;
      height: 80px;
      border: 4px solid rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      border-top-color: var(--accent-color);
      animation: spin 1s linear infinite;
      position: relative;
    }

    .loader::before {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      border: 4px solid transparent;
      border-top-color: var(--accent-secondary);
      border-radius: 50%;
      animation: spin 2s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    /* Dark Mode Toggle */
    .dark-mode-toggle {
      position: fixed;
      bottom: 2rem;
      left: 2rem;
      width: 50px;
      height: 50px;
      background-color: var(--card-bg);
      color: var(--text-primary);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      transition: all var(--transition-normal);
      border: none;
    }

    .dark-mode-toggle:hover {
      transform: translateY(-5px) rotate(45deg);
      box-shadow: 0 15px 25px rgba(0, 0, 0, 0.15);
    }

    /* Responsive Styles */
    @media (max-width: 991.98px) {
      .cart-header {
        font-size: 2rem;
      }
    }

    @media (max-width: 767.98px) {
      .cart-header {
        font-size: 1.75rem;
      }

      .cart-item {
        padding: 1.25rem;
      }

      .item-title {
        font-size: 1.1rem;
      }

      .empty-cart-icon {
        font-size: 4rem;
      }

      .empty-cart-container p {
        font-size: 1.1rem;
      }

      .dark-mode-toggle {
        width: 40px;
        height: 40px;
        bottom: 1rem;
        left: 1rem;
      }
    }

    @media (max-width: 575.98px) {
      .cart-header {
        font-size: 1.5rem;
      }

      .cart-item {
        padding: 1rem;
      }

      .item-title {
        font-size: 1rem;
        margin-top: 1rem;
      }

      .product-image-container {
        max-width: 100px;
        margin: 0 auto;
      }

      .quantity-control {
        margin: 0.5rem 0;
      }

      .remove-btn {
        padding: 0.4rem 0.75rem;
        font-size: 0.85rem;
      }

      .empty-cart-icon {
        font-size: 3rem;
      }

      .empty-cart-container {
        padding: 2rem 1rem;
      }

      .empty-cart-container p {
        font-size: 1rem;
      }

      .continue-shopping-btn,
      .checkout-btn,
      .continue-btn {
        padding: 0.75rem;
        font-size: 0.9rem;
      }
    }

    /* Animation for cart items */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .cart-item {
      animation: fadeInUp 0.6s ease-out forwards;
    }

    .cart-item:nth-child(1) {
      animation-delay: 0.1s;
    }

    .cart-item:nth-child(2) {
      animation-delay: 0.2s;
    }

    .cart-item:nth-child(3) {
      animation-delay: 0.3s;
    }

    .cart-item:nth-child(4) {
      animation-delay: 0.4s;
    }

    .cart-item:nth-child(5) {
      animation-delay: 0.5s;
    }

    /* Shimmer effect for cart items */
    .shimmer {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.1) 50%,
        rgba(255, 255, 255, 0) 100%
      );
      transform: rotate(30deg);
      animation: shimmer 6s infinite;
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 0;
    }

    .cart-item:hover .shimmer {
      opacity: 1;
    }

    @keyframes shimmer {
      0% {
        transform: translateX(-100%) rotate(30deg);
      }
      100% {
        transform: translateX(100%) rotate(30deg);
      }
    }

    /* Floating animation for remove icon */
    @keyframes float-icon {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-5px);
      }
      100% {
        transform: translateY(0);
      }
    }

    .remove-btn:hover i {
      animation: float-icon 1s ease-in-out infinite;
    }

    /* Pulse animation for checkout button */
    @keyframes pulse {
      0% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
      }
      70% {
        box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
      }
      100% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
      }
    }

    .checkout-btn {
      animation: pulse 2s infinite;
    }

    /* Quantity button animation */
    .quantity-btn:active {
      transform: scale(0.9);
    }

    /* SweetAlert Custom Styles */
    .swal-custom {
      font-family: var(--font-primary);
      border-radius: var(--border-radius-lg);
    }
  </style>
</head>
<body>
  <!-- Preloader -->
  <div class="preloader">
    <div class="loader"></div>
  </div>

  <!-- Scroll Indicator -->
  <div class="scroll-indicator"></div>

  <!-- Cursor Glow Effect -->
  <div class="cursor-glow"></div>

  <%- include("../partials/user/header") %>

  <div class="container my-5">
    <div class="row justify-content-center">
      <div class="col-lg-10">
        <div class="cart-header-wrapper" data-aos="fade-up">
          <h2 class="cart-header">YOUR SHOPPING CART</h2>
        </div>

        <% if (!cart || cart.items.length === 0) { %>
        <div class="empty-cart-container" data-aos="fade-up" data-aos-delay="200">
          <div class="empty-cart-icon">
            <i class="fas fa-shopping-cart"></i>
          </div>
          <p>Your cart is empty. Discover our latest collections and add something special!</p>
          <div class="mt-4">
            <a href="/allproduct" class="continue-shopping-btn">
              <i class="fas fa-arrow-left me-2"></i>Continue Shopping
            </a>
          </div>
        </div>
        <% } else { %>
        <div class="text-end mb-4" data-aos="fade-up" data-aos-delay="100">
          <button class="btn empty-cart-btn" onclick="emptyCart()">
            <i class="fas fa-trash-alt me-2"></i>Empty my Cart
          </button>
        </div>

        <div class="row">
          <div class="col-lg-8">
            <div class="cart-items-container">
              <% cart.items.forEach((item, index) => { %>
                <% if (item.productId) { %>
                <div class="cart-item" data-aos="fade-up" data-aos-delay="<%= index * 100 %>">
                  <div class="shimmer"></div>
                  <div class="row align-items-center">
                    <div class="col-md-3 col-4">
                      <div class="product-image-container">
                        <img
                          src="<%= item.productId.images && item.productId.images.length > 0 ? item.productId.images[0].url : '/placeholder.svg?height=300&width=300&query=fashion+product' %>"
                          alt="<%= item.productId.name || 'Product' %>"
                          class="cart-img"
                          onerror="this.onerror=null; this.src='/placeholder.svg?height=300&width=300&query=fashion+product';"
                        />
                      </div>
                    </div>
                    <div class="col-md-9 col-8">
                      <div class="row">
                        <div class="col-md-7">
                          <h3 class="item-title"><%= item.productId.name || 'Unknown Product' %></h3>
                          <div class="product-details">
                            <% if (item.size) { %>
                            <p class="product-attribute"><span>Size:</span> <%= item.size %></p>
                            <% } %>
                            <% if (item.color) { %>
                            <p class="product-attribute"><span>Color:</span> <%= item.color %></p>
                            <% } %>
                          </div>
                          <div class="price-container">
                            <% const variant = item.productId.variants && item.size
                              ? item.productId.variants.find(v => v.size === item.size)
                              : item.productId.variants && item.productId.variants[0] || { salePrice: item.productId.salePrice || 0 }; %>
                            <div class="price-wrapper">
                              <span class="price-label">Price:</span>
                              <span class="price-current">₹<%= (variant.salePrice || 0).toFixed(2) %></span>
                            </div>
                          </div>
                        </div>
                        <div class="col-md-5">
                          <div class="quantity-control">
                            <button
                              class="quantity-btn"
                              onclick="updateQuantity('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>', -1)"
                              data-action="decrement"
                              aria-label="Decrease quantity"
                            >
                              <i class="fas fa-minus"></i>
                            </button>
                            <input
                              type="text"
                              class="quantity-input"
                              value="<%= item.quantity %>"
                              readonly
                              aria-describedby="quantity-<%= item.productId._id %>"
                            />
                            <button
                              class="quantity-btn"
                              onclick="updateQuantity('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>', 1)"
                              data-action="increment"
                              aria-label="Increase quantity"
                            >
                              <i class="fas fa-plus"></i>
                            </button>
                          </div>
                          <div class="text-md-end mt-3">
                            <button
                              class="remove-btn"
                              onclick="removeItem('<%= item.productId._id %>', '<%= item.size || '' %>', '<%= item.color || '' %>')"
                              data-action="remove"
                              aria-label="Remove item"
                            >
                              <i class="fas fa-times me-1"></i> Remove
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <% } else { %>
                <p class="text-muted">Invalid product in cart</p>
                <% } %>
              <% }) %>
            </div>
          </div>

          <div class="col-lg-4">
            <div class="cart-summary" data-aos="fade-up" data-aos-delay="300">
              <div class="subtotal-row">
                <div class="row">
                  <div class="col-6">
                    <h4>SUBTOTAL</h4>
                  </div>
                  <div class="col-6 text-end">
                    <div class="price-current">₹<%= subtotal %></div>
                  </div>
                </div>
              </div>

              <div class="shipping-info">
                <p>
                  <i class="fas fa-info-circle me-2"></i>
                  Shipping, taxes, and discount codes calculated at checkout.
                </p>
              </div>

              <div class="checkout-actions">
                <a href="/checkOut" class="checkout-btn">
                  <i class="fas fa-lock me-2"></i>Proceed to checkout
                </a>
                <a href="/allproduct" class="continue-btn">
                  <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                </a>
              </div>
            </div>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>

  <div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

  <%- include("../partials/user/footer") %>

  <!-- Dark Mode Toggle -->
  <button class="dark-mode-toggle" id="darkModeToggle">
    <i class="fas fa-moon"></i>
  </button>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize AOS
      AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true
      });

      // Preloader
      const preloader = document.querySelector('.preloader');
      window.addEventListener('load', () => {
        setTimeout(() => {
          preloader.classList.add('fade-out');
        }, 500);
      });

      // Scroll Indicator
      const scrollIndicator = document.querySelector('.scroll-indicator');
      window.addEventListener('scroll', () => {
        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        scrollIndicator.style.width = scrolled + '%';
      });

      // Cursor Glow Effect
      const cursorGlow = document.querySelector('.cursor-glow');
      document.addEventListener('mousemove', (e) => {
        cursorGlow.style.left = e.clientX + 'px';
        cursorGlow.style.top = e.clientY + 'px';
      });

      document.addEventListener('mousedown', () => {
        cursorGlow.style.width = '30px';
        cursorGlow.style.height = '30px';
        cursorGlow.style.opacity = '0.8';
      });

      document.addEventListener('mouseup', () => {
        cursorGlow.style.width = '20px';
        cursorGlow.style.height = '20px';
        cursorGlow.style.opacity = '0.5';
      });

      // Dark mode toggle
      const darkModeToggle = document.getElementById('darkModeToggle');
      const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
      
      // Check for saved theme preference or use the system preference
      const savedTheme = localStorage.getItem('theme');
      
      if (savedTheme === 'dark' || (!savedTheme && prefersDarkScheme.matches)) {
        document.body.classList.add('dark-mode');
        darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
      }
      
      darkModeToggle.addEventListener('click', () => {
        if (document.body.classList.contains('dark-mode')) {
          document.body.classList.remove('dark-mode');
          localStorage.setItem('theme', 'light');
          darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
        } else {
          document.body.classList.add('dark-mode');
          localStorage.setItem('theme', 'dark');
          darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }
      });

      // Navbar scroll effect
      window.addEventListener('scroll', function () {
        const navbar = document.querySelector('.navbar');
        if (navbar) {
          if (window.scrollY > 50) {
            navbar.classList.add('navbar-scrolled');
          } else {
            navbar.classList.remove('navbar-scrolled');
          }
        }
      });

      // Add shimmer effect to cart items
      document.querySelectorAll('.cart-item').forEach(item => {
        item.addEventListener('mouseenter', () => {
          const shimmer = item.querySelector('.shimmer');
          if (shimmer) {
            shimmer.style.opacity = '1';
          }
        });

        item.addEventListener('mouseleave', () => {
          const shimmer = item.querySelector('.shimmer');
          if (shimmer) {
            shimmer.style.opacity = '0';
          }
        });
      });
    });

    function showToast(message, type = "success") {
      const toastContainer = document.querySelector(".toast-container");
      toastContainer.innerHTML = "";
      const toast = document.createElement("div");
      toast.className = `toast align-items-center text-white bg-${
        type === "success" ? "success" : "danger"
      } border-0`;
      toast.role = "alert";
      toast.ariaLive = "assertive";
      toast.ariaAtomic = "true";
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">
            <i class="fas fa-${type === "success" ? "check-circle" : "exclamation-circle"} me-2"></i>
            ${message}
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      `;
      toastContainer.appendChild(toast);
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
      setTimeout(() => toast.remove(), 3000);
    }

    async function updateQuantity(productId, size, color, change) {
      const buttons = document.querySelectorAll(
        `[data-action="increment"], [data-action="decrement"]`
      );
      buttons.forEach((btn) => btn.classList.add("loading-btn"));

      try {
        const response = await fetch("/cart/update", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, size, color, change }),
          credentials: "include",
        });
        const result = await response.json();

        if (result.success) {
          window.location.reload();
        } else {
          showToast(result.message, "danger");
          if (response.status === 401) {
            showToast("Please log in to update cart", "danger");
            setTimeout(() => (window.location.href = "/login"), 2000);
          }
        }
      } catch (error) {
        console.error("Error updating quantity:", error);
        showToast("Failed to update quantity", "danger");
      } finally {
        buttons.forEach((btn) => btn.classList.remove("loading-btn"));
      }
    }

    async function removeItem(productId, size, color) {
      const button = event.currentTarget;
      button.classList.add("loading-btn");

      try {
        const response = await fetch("/cart/remove", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, size, color }),
          credentials: "include",
        });
        const result = await response.json();

        if (result.success) {
          // Add a nice fade-out animation before reload
          const cartItem = button.closest('.cart-item');
          cartItem.style.transition = 'all 0.5s ease';
          cartItem.style.opacity = '0';
          cartItem.style.transform = 'translateX(50px)';
          
          setTimeout(() => {
            window.location.reload();
          }, 500);
        } else {
          showToast(result.message, "danger");
          if (response.status === 401) {
            showToast("Please log in to remove items", "danger");
            setTimeout(() => (window.location.href = "/login"), 2000);
          }
        }
      } catch (error) {
        console.error("Error removing item:", error);
        showToast("Failed to remove item", "danger");
      } finally {
        button.classList.remove("loading-btn");
      }
    }

    async function emptyCart() {
      if (!document.querySelector(".cart-item")) {
        showToast("Cart is already empty", "info");
        return;
      }
      
      const result = await Swal.fire({
        title: "ARE YOU SURE?",
        text: "Do you want to clear the cart?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, clear",
        confirmButtonColor: "#ef4444",
        cancelButtonText: "No",
        cancelButtonColor: "#64748b",
        customClass: {
          popup: "swal-custom",
        },
        background: document.body.classList.contains('dark-mode') ? '#1e293b' : '#ffffff',
        color: document.body.classList.contains('dark-mode') ? '#f1f5f9' : '#1e293b',
      });

      if (result.isConfirmed) {
        const button = event.currentTarget;
        button.classList.add("loading-btn");

        try {
          const response = await fetch("/cart/empty", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
          });
          const result = await response.json();

          if (result.success) {
            // Add a nice fade-out animation for all cart items
            const cartItems = document.querySelectorAll('.cart-item');
            cartItems.forEach((item, index) => {
              item.style.transition = 'all 0.5s ease';
              item.style.opacity = '0';
              item.style.transform = 'translateY(30px)';
              item.style.transitionDelay = `${index * 0.1}s`;
            });
            
            setTimeout(() => {
              window.location.reload();
            }, 800);
          } else {
            showToast(result.message, "danger");
            if (response.status === 401) {
              showToast("Please log in to clear cart", "danger");
              setTimeout(() => (window.location.href = "/login"), 2000);
            }
          }
        } catch (error) {
          console.error("Error clearing cart:", error);
          showToast("Failed to clear cart", "danger");
        } finally {
          button.classList.remove("loading-btn");
        }
      }
    }
  </script>
</body>
</html>
