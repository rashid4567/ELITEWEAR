<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ELITE WEAR - Order Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/userStyle/orderDetails.css">

</head>
<body>
    <div class="page-loader loader-active">
        <div class="spinner"></div>
    </div>

    <div class="toast-container">
        <div class="toast custom-toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
            <div class="toast-header">
                <strong class="me-auto">Order Action</strong>
                <small>Just now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>

    <%- include("../partials/user/header") %>
  
    <div class="main-content">
        <div class="container">
            <nav aria-label="breadcrumb" class="breadcrumb-custom my-3">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="/profile">Profile</a></li>
                    <li class="breadcrumb-item"><a href="/orders">Orders</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Order Details</li>
                </ol>
            </nav>
            <%- include("../partials/user/profileSidebar") %>
                <div class="col-lg-9">
                    <div class="order-details-card">
                        <h4 class="order-title">Order Details</h4>
                        <div class="order-layout">
                            <div class="order-image-container">
                                <% if (order.order_items.length > 0 && product) { %>
                                    <img 
                                        src="<%= product.images && product.images.length > 0 ? product.images[0].url : '/api/placeholder/300/300' %>" 
                                        alt="<%= order.order_items[0].productId.name %>" 
                                        class="product-img"
                                    >
                                <% } else { %>
                                    <img src="/Uploads/placeholder.jpg" alt="No Product" class="product-img">
                                <% } %>
                                <div class="mt-3">
                                    <div class="d-flex align-items-center">
                                        <span class="me-2">Status: </span>
                                        <span class="status-tag status-<%= order.status.toLowerCase().replace(' ', '-') %>">
                                            <%= order.status %>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="order-details-container">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <div class="details-section">
                                            <h5>Shipping Address</h5>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address.fullname %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address.address %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address.city %>, <%= order.address.district %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address.state %>, <%= order.address.pincode %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value">Contact: <%= order.address.contactNumber %></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <div class="details-section">
                                            <h5>Payment Method</h5>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.paymentMethod %></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="details-section">
                                            <h5>Order Summary</h5>
                                            <table class="order-summary-table">
                                                <tr>
                                                    <td>Items Total</td>
                                                    <td>₹<%= (order.total - (order.total > 8000 ? 0 : 200)).toFixed(2) %></td>
                                                </tr>
                                                <tr>
                                                    <td>Shipping Charge</td>
                                                    <td>₹<%= order.total > 8000 ? 0 : 200 %></td>
                                                </tr>
                                                <tr>
                                                    <td>Total</td>
                                                    <td>₹<%= (order.total - (order.total > 8000 ? 0 : 200) + (order.total > 8000 ? 0 : 200)).toFixed(2) %></td>
                                                </tr>
                                                <tr class="grand-total-row">
                                                    <td>Grand Total</td>
                                                    <td>₹<%= order.total.toFixed(2) %></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <div class="action-buttons">
                                    <% if (order.status === 'Delivered') { %>
                                        <button class="btn btn-outline-dark btn-action me-2" onclick="initiateReturn('<%= order._id %>')">
                                            <i class="bi bi-arrow-return-left"></i> Return Order
                                        </button>
                                        <button class="btn btn-outline-dark btn-action me-2" onclick="downloadInvoice('<%= order._id %>')">
                                            <i class="bi bi-file-earmark-text"></i> Download Invoice
                                        </button>
                                    <% } else if (order.status === 'Pending' || order.status === 'Processing') { %>
                                        <button class="btn btn-cancel btn-action me-2" onclick="cancelOrder('<%= order._id %>')">
                                            Cancel Order
                                        </button>
                                    <% } else if (order.status === 'Cancelled') { %>
                                        <button class="btn btn-outline-dark btn-action me-2" onclick="reOrder('<%= order._id %>')">
                                            <i class="bi bi-arrow-repeat"></i> Re Order
                                        </button>
                                    <% } %>
                                    <button class="btn btn-track btn-action" onclick="trackOrder()">
                                        Track Order
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                document.querySelector('.page-loader').classList.remove('loader-active');
            }, 800);

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        function showToast(message, isSuccess = true) {
            var toastEl = document.querySelector('.toast');
            var toastBody = toastEl.querySelector('.toast-body');
            toastBody.innerHTML = `<i class="bi ${isSuccess ? 'bi-check-circle-fill text-success' : 'bi-exclamation-triangle-fill text-danger'} me-2"></i>${message}`;
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        }

        function initiateReturn(orderId) {
            if (confirm("Are you sure you want to initiate a return for this order?")) {
                fetch(`/return-order/${orderId}`, { method: 'POST' })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            showToast("Return initiated successfully");
                            setTimeout(() => window.location.reload(), 2000);
                        } else {
                            showToast(data.message, false);
                        }
                    })
                    .catch(err => showToast("Error initiating return", false));
            }
        }

        function cancelOrder(orderId) {
            // Create modal overlay
            const modalOverlay = document.createElement('div');
            modalOverlay.style.position = 'fixed';
            modalOverlay.style.top = '0';
            modalOverlay.style.left = '0';
            modalOverlay.style.width = '100%';
            modalOverlay.style.height = '100%';
            modalOverlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
            modalOverlay.style.zIndex = '1000';
            modalOverlay.style.display = 'flex';
            modalOverlay.style.justifyContent = 'center';
            modalOverlay.style.alignItems = 'center';
            
            // Create modal content
            const modalContent = document.createElement('div');
            modalContent.style.backgroundColor = 'white';
            modalContent.style.borderRadius = '8px';
            modalContent.style.padding = '20px';
            modalContent.style.width = '350px';
            modalContent.style.maxWidth = '90%';
            modalContent.style.textAlign = 'center';
            modalContent.style.position = 'relative';
            
            // Add close button
            const closeButton = document.createElement('button');
            closeButton.innerHTML = '×';
            closeButton.style.position = 'absolute';
            closeButton.style.top = '10px';
            closeButton.style.right = '15px';
            closeButton.style.border = 'none';
            closeButton.style.background = 'none';
            closeButton.style.fontSize = '24px';
            closeButton.style.cursor = 'pointer';
            closeButton.style.fontWeight = 'bold';
            closeButton.onclick = function() {
                document.body.removeChild(modalOverlay);
            };
            
            // Add header
            const header = document.createElement('h5');
            header.textContent = 'ARE YOU SURE!!';
            header.style.marginBottom = '20px';
            header.style.fontWeight = 'bold';
            
            // Add message
            const message = document.createElement('p');
            message.textContent = 'Do you want to Cancel the order?';
            message.style.marginBottom = '20px';
            
            // Add buttons container
            const buttonsContainer = document.createElement('div');
            buttonsContainer.style.display = 'flex';
            buttonsContainer.style.justifyContent = 'center';
            buttonsContainer.style.gap = '10px';
            
            // Add "Yes, cancel" button
            const yesButton = document.createElement('button');
            yesButton.textContent = 'Yes, cancel';
            yesButton.className = 'btn btn-dark';
            yesButton.style.minWidth = '100px';
            yesButton.onclick = function() {
                document.body.removeChild(modalOverlay);
                
                fetch(`/cancel-order/${orderId}`, { method: 'POST' })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            showToast("Order cancelled successfully");
                            setTimeout(() => window.location.reload(), 2000);
                        } else {
                            showToast(data.message, false);
                        }
                    })
                    .catch(err => showToast("Error cancelling order", false));
            };
            
            // Add "No" button
            const noButton = document.createElement('button');
            noButton.textContent = 'No';
            noButton.className = 'btn btn-outline-dark';
            noButton.style.minWidth = '100px';
            noButton.onclick = function() {
                document.body.removeChild(modalOverlay);
            };
            
            // Assemble the modal
            buttonsContainer.appendChild(yesButton);
            buttonsContainer.appendChild(noButton);
            
            modalContent.appendChild(closeButton);
            modalContent.appendChild(header);
            modalContent.appendChild(message);
            modalContent.appendChild(buttonsContainer);
            
            modalOverlay.appendChild(modalContent);
            
            // Add to document
            document.body.appendChild(modalOverlay);
        }

        function reOrder(orderId) {
            // Create modal overlay
            const modalOverlay = document.createElement('div');
            modalOverlay.style.position = 'fixed';
            modalOverlay.style.top = '0';
            modalOverlay.style.left = '0';
            modalOverlay.style.width = '100%';
            modalOverlay.style.height = '100%';
            modalOverlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
            modalOverlay.style.zIndex = '1000';
            modalOverlay.style.display = 'flex';
            modalOverlay.style.justifyContent = 'center';
            modalOverlay.style.alignItems = 'center';
            
            // Create modal content
            const modalContent = document.createElement('div');
            modalContent.style.backgroundColor = 'white';
            modalContent.style.borderRadius = '8px';
            modalContent.style.padding = '20px';
            modalContent.style.width = '350px';
            modalContent.style.maxWidth = '90%';
            modalContent.style.textAlign = 'center';
            modalContent.style.position = 'relative';
            
            // Add close button
            const closeButton = document.createElement('button');
            closeButton.innerHTML = '×';
            closeButton.style.position = 'absolute';
            closeButton.style.top = '10px';
            closeButton.style.right = '15px';
            closeButton.style.border = 'none';
            closeButton.style.background = 'none';
            closeButton.style.fontSize = '24px';
            closeButton.style.cursor = 'pointer';
            closeButton.style.fontWeight = 'bold';
            closeButton.onclick = function() {
                document.body.removeChild(modalOverlay);
            };
            
            // Add header
            const header = document.createElement('h5');
            header.textContent = 'ARE YOU SURE!!';
            header.style.marginBottom = '20px';
            header.style.fontWeight = 'bold';
            
            // Add message
            const message = document.createElement('p');
            message.textContent = 'Do you want to reorder this order?';
            message.style.marginBottom = '20px';
            
            // Add buttons container
            const buttonsContainer = document.createElement('div');
            buttonsContainer.style.display = 'flex';
            buttonsContainer.style.justifyContent = 'center';
            buttonsContainer.style.gap = '10px';
            
            // Add "Yes, reorder" button
            const yesButton = document.createElement('button');
            yesButton.textContent = 'Yes, reorder';
            yesButton.className = 'btn btn-dark';
            yesButton.style.minWidth = '100px';
            yesButton.onclick = function() {
                document.body.removeChild(modalOverlay);
                
                fetch(`/reorder/${orderId}`, { method: 'POST' })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = data.redirect;
                        } else {
                            showToast(data.message, false);
                        }
                    })
                    .catch(err => showToast("Error reordering", false));
            };
            
            // Add "No" button
            const noButton = document.createElement('button');
            noButton.textContent = 'No';
            noButton.className = 'btn btn-outline-dark';
            noButton.style.minWidth = '100px';
            noButton.onclick = function() {
                document.body.removeChild(modalOverlay);
            };
            
            // Assemble the modal
            buttonsContainer.appendChild(yesButton);
            buttonsContainer.appendChild(noButton);
            
            modalContent.appendChild(closeButton);
            modalContent.appendChild(header);
            modalContent.appendChild(message);
            modalContent.appendChild(buttonsContainer);
            
            modalOverlay.appendChild(modalContent);
            
            // Add to document
            document.body.appendChild(modalOverlay);
        }

        function downloadInvoice(orderId) {
            window.location.href = `/invoice/${orderId}`;
        }

        function trackOrder() {
            showToast("Tracking not fully implemented. Check back soon!");
        }
    </script>
</body>
</html>