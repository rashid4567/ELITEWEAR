<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ELITE WEAR - Order Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/userStyle/orderDetails.css">
    <style>
        .status-return-rejected { color: #dc3545; }
        .status-returned { color: #28a745; }
        .status-return-approved { color: #28a745; }
        .status-return-requested { color: #fd7e14; }
        .refund-info { background-color: #e9f7ef; padding: 10px; border-radius: 5px; }
        .btn-loading { pointer-events: none; opacity: 0.7; }
    </style>
</head>
<body>
    <div class="page-loader loader-active">
        <div class="spinner"></div>
    </div>

    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div id="orderToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
            <div class="toast-header">
                <strong class="me-auto">Order Action</strong>
                <small>Just now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>

    <%- include("../partials/user/header") %>
  
    <div class="main-content">
        <div class="container">
            <nav aria-label="breadcrumb" class="breadcrumb-custom my-3">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="/profile">Profile</a></li>
                    <li class="breadcrumb-item"><a href="/orders">Orders</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Order Details</li>
                </ol>
            </nav>
            <div class="row">
                <%- include("../partials/user/profileSidebar") %>
<<<<<<< Updated upstream
                <div class="col-lg-9 mainOne">
                    <div class="order-details-card mainOne">
                        <h4 class="order-title">Order Details</h4>
                        <div class="order-layout">
                            <div class="order-items-container">
                                <h5>Ordered Items</h5>
                                <% if (order.order_items.length > 0) { %>
                                    <% order.order_items.forEach(item => { %>
                                        <div class="order-item mb-3">
                                            <div class="row align-items-center">
                                                <div class="col-4 col-md-2">
                                                    <img 
                                                        src="<%= item.productId && item.productId.images && item.productId.images.length > 0 ? item.productId.images[0].url : '/api/placeholder/300/300' %>" 
                                                        alt="<%= item.productId && item.productId.name ? item.productId.name : 'Unnamed Product' %>" 
                                                        class="product-img img-fluid rounded"
                                                    >
                                                </div>
                                                <div class="col-8 col-md-10">
                                                    <h6><%= item.productId && item.productId.name ? item.productId.name : 'Unnamed Product' %></h6>
                                                    <p class="mb-1">Price: ₹<%= item.price ? item.price.toFixed(2) : '0.00' %></p>
                                                    <p class="mb-1">Quantity: <%= item.quantity || 1 %></p>
                                                    <p class="mb-1">Size: <%= item.size || 'N/A' %></p>
                                                    <p class="mb-0">Total: ₹<%= item.total_amount ? item.total_amount.toFixed(2) : '0.00' %></p>
                                                </div>
=======
            </div>
     
            <!-- Main Content -->
            <div class="col-md-9 col-lg-10 p-0">
                <!-- Breadcrumb -->
                <div class="breadcrumb-container bg-light py-2 px-4">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="/profile">Profile</a></li>
                            <li class="breadcrumb-item"><a href="/orders">Orders</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Order Details</li>
                        </ol>
                    </nav>
                </div>
    
                <!-- Order Details Card -->
                <div class="container py-4">
                    <div class="card border-0 shadow-sm rounded-3">
                        <div class="card-body p-4">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h2 class="card-title fw-bold m-0">Order #<%= order.orderNumber %></h2>
                                <span class="badge bg-<%= 
                                    order.status === 'Processing' ? 'success' : 
                                    order.status === 'Pending' ? 'warning' : 
                                    order.status === 'Shipped' ? 'info' : 
                                    order.status === 'Delivered' ? 'success' : 
                                    order.status === 'Cancelled' ? 'danger' : 
                                    order.status.includes('Return') ? 'primary' : 'secondary' 
                                %> fs-6 text-uppercase">
                                    <%= order.status %>
                                </span>
                            </div>
                            
                            <div class="row">
                                <!-- Order Date and Payment Status -->
                                <div class="col-md-12 mb-4">
                                    <div class="d-flex flex-wrap gap-4">
                                        <div>
                                            <span class="text-muted">Order Date:</span>
                                            <strong><%= new Date(order.orderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></strong>
                                        </div>
                                        <div>
                                            <span class="text-muted">Payment Method:</span>
                                            <strong><%= order.paymentMethod === 'COD' ? 'Cash On Delivery' : order.paymentMethod %></strong>
                                        </div>
                                        <div>
                                            <span class="text-muted">Payment Status:</span>
                                            <strong class="<%= order.paymentStatus === 'Pending' || order.paymentStatus === 'Failed' ? 'text-danger' : '' %>">
                                                <%= order.paymentStatus %>
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Shipping Address -->
                                <div class="col-md-4 mb-4">
                                    <div class="shipping-info">
                                        <h5 class="fw-bold mb-3">Shipping Address</h5>
                                        <% if (order.address) { %>
                                            <p class="mb-1"><%= order.address.fullname %></p>
                                            <p class="mb-1"><%= order.address.address %></p>
                                            <p class="mb-1"><%= order.address.city %>, <%= order.address.district %></p>
                                            <p class="mb-1"><%= order.address.state %> - <%= order.address.pincode %></p>
                                            <p class="mb-1">Contact: <%= order.address.mobile %></p>
                                        <% } else { %>
                                            <p class="text-muted">Address information not available</p>
                                        <% } %>
                                    </div>
                                </div>
    
                                <!-- Order Summary -->
                                <div class="col-md-4 mb-4">
                                    <div class="order-summary">
                                        <h5 class="fw-bold mb-3">Order Summary</h5>
                                        <div class="summary-row">
                                            <span>Items Total</span>
                                            <span>₹<%= ((order.total || 0) - ((order.total || 0) > 8000 ? 0 : 200) + (order.discount || 0)).toFixed(2) %>
                                            </span>
                                        </div>
                                        <div class="summary-row">
                                            <span>Shipping Charge</span>
                                            <span>₹<%= (order.total > 8000 ? 0 : 200).toFixed(2) %></span>
                                        </div>
                                        <% if (order.discount > 0) { %>
                                            <div class="summary-row">
                                                <span>Discount</span>
                                                <span>-₹<%= order.discount.toFixed(2) %></span>
>>>>>>> Stashed changes
                                            </div>
                                        </div>
                                    <% }) %>
                                <% } else { %>
                                    <p>No items found in this order.</p>
                                <% } %>
                                <div class="mt-3">
                                    <div class="d-flex align-items-center">
                                        <span class="me-2">Status: </span>
                                        <span class="status-tag status-<%= order.status ? order.status.toLowerCase().replace(/\s+/g, '-') : 'pending' %>">
                                            <%= order.status || 'Pending' %>
                                        </span>
                                    </div>
                                    <% if (order.returnReason) { %>
                                        <p class="mt-2"><strong>Return Reason:</strong> <%= order.returnReason %></p>
                                    <% } %>
                                    <% if (order.returnRejectionReason) { %>
                                        <p class="mt-2"><strong>Rejection Reason:</strong> <%= order.returnRejectionReason %></p>
                                    <% } %>
                                    <% if (order.refunded && order.status === 'Returned') { %>
                                        <div class="refund-info mt-2">
                                            <p><strong>Refund Processed:</strong> ₹<%= order.total ? order.total.toFixed(2) : '0.00' %> credited to your wallet.</p>
                                            <a href="/wallet" class="btn btn-sm btn-outline-success">View Wallet</a>
                                        </div>
                                    <% } %>
                                </div>
                            </div>

                            <div class="order-details-container">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <div class="details-section">
                                            <h5>Shipping Address</h5>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address && order.address.fullname ? order.address.fullname : 'N/A' %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.address && order.address.address ? order.address.address : 'N/A' %></div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value">
                                                    <%= order.address && order.address.city ? order.address.city : 'N/A' %>, 
                                                    <%= order.address && order.address.district ? order.address.district : 'N/A' %>
                                                </div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value">
                                                    <%= order.address && order.address.state ? order.address.state : 'N/A' %>, 
                                                    <%= order.address && order.address.pincode ? order.address.pincode : 'N/A' %>
                                                </div>
                                            </div>
                                            <div class="details-row">
                                                <div class="details-value">
                                                    Contact: <%= order.address && order.address.contactNumber ? order.address.contactNumber : 'N/A' %>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <div class="details-section">
                                            <h5>Payment Method</h5>
                                            <div class="details-row">
                                                <div class="details-value"><%= order.paymentMethod || 'N/A' %></div>
                                            </div>
                                        </div><div class="col-md-6 mb-3">
                                            <div class="details-section">
                                              <!-- <h5>Shipping Address</h5>
                                              <% if (order.address) { %>
                                                <div class="details-row">
                                                  <div class="details-value"><%= order.address.fullname || 'N/A' %></div>
                                                </div>
                                                <div class="details-row">
                                                  <div class="details-value"><%= order.address.address || 'N/A' %></div>
                                                </div>
                                                <div class="details-row">
                                                  <div class="details-value">
                                                    <%= order.address.city || 'N/A' %>, <%= order.address.district || 'N/A' %>
                                                  </div>
                                                </div>
                                                <div class="details-row">
                                                  <div class="details-value">
                                                    <%= order.address.state || 'N/A' %>, <%= order.address.pincode || 'N/A' %>
                                                  </div>
                                                </div>
                                                <div class="details-row">
                                                  <div class="details-value">
                                                    Contact: <%= order.address.mobile || 'N/A' %>
                                                  </div>
                                                </div>
                                              <% } else { %>
                                                <p class="text-danger">No address information available for this order.</p>
                                              <% } %>
                                            </div> -->
                                          </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="details-section">
                                            <h5>Order Summary</h5>
                                            <table class="order-summary-table">
                                                <tr>
                                                    <td>Items Total</td>
                                                    <td>₹<%= order.total ? (order.total - (order.total > 8000 ? 0 : 200)).toFixed(2) : '0.00' %></td>
                                                </tr>
                                                <tr>
                                                    <td>Shipping Charge</td>
                                                    <td>₹<%= order.total > 8000 ? 0 : 200 %></td>
                                                </tr>
                                                <tr>
                                                    <td>Total</td>
                                                    <td>₹<%= order.total ? (order.total - (order.total > 8000 ? 0 : 200) + (order.total > 8000 ? 0 : 200)).toFixed(2) : '0.00' %></td>
                                                </tr>
                                                <tr class="grand-total-row">
                                                    <td>Grand Total</td>
                                                    <td>₹<%= order.total ? order.total.toFixed(2) : '0.00' %></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
<<<<<<< Updated upstream

                                <div class="action-buttons">
                                    <% if (order.status === 'Delivered' && !order.refunded) { %>
                                        <button class="btn btn-outline-dark btn-action me-2" data-bs-toggle="modal" data-bs-target="#returnModal" data-order-id="<%= order._id %>">
                                            <i class="bi bi-arrow-return-left"></i> Return Order
                                        </button>
                                        <button class="btn btn-outline-dark btn-action me-2" onclick="downloadInvoice('<%= order._id %>')">
                                            <i class="bi bi-file-earmark-text"></i> Download Invoice
                                        </button>
                                    <% } else if (order.status === 'Pending' || order.status === 'Processing') { %>
                                        <button class="btn btn-cancel btn-action me-2" data-bs-toggle="modal" data-bs-target="#cancelModal" data-order-id="<%= order._id %>">
                                            Cancel Order
                                        </button>
                                    <% } else if (order.status === 'Cancelled' || order.status === 'Return Rejected') { %>
                                        <button class="btn btn-outline-dark btn-action me-2" data-bs-toggle="modal" data-bs-target="#reorderModal" data-order-id="<%= order._id %>">
                                            <i class="bi bi-arrow-repeat"></i> Re Order
                                        </button>
                                    <% } %>
                                    <button class="btn btn-track btn-action" onclick="trackOrder('<%= order._id %>')">
                                        Track Order
                                    </button>
=======
                                
                                <!-- Action Buttons -->
                                <div class="col-md-4 mb-4">
                                    <div class="d-flex flex-column gap-2">
                                        <% if (order.paymentMethod === 'Online' && (order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending')) { %>
                                            <!-- Show only retry button for pending/failed payments -->
                                            <button type="button" class="btn btn-primary btn-action" onclick="retryPayment('<%= order._id %>')">
                                                <i class="bi bi-arrow-repeat me-2"></i> Retry Payment
                                            </button>
                                        <% } else { %>
                                            <!-- Show normal action buttons for other orders -->
                                            <% if (['Pending', 'Processing'].includes(order.status)) { %>
                                                <button type="button" class="btn btn-danger btn-action" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
                                                    <i class="bi bi-x-circle me-2"></i> Cancel Order
                                                </button>
                                            <% } %>
                                            <% if (order.status === 'Delivered') { %>
                                                <button type="button" class="btn btn-primary btn-action btn-return" data-bs-toggle="modal" data-bs-target="#returnOrderModal">
                                                    <i class="bi bi-arrow-return-left me-2"></i> Return Order
                                                </button>
                                            <% } %>
                                            <a href="/orders/track/<%= order._id %>" class="btn btn-dark btn-action btn-track">
                                                <i class="bi bi-truck me-2"></i> Track Order
                                            </a>
                                            
                                            <a href="/invoice/<%= order._id %>" id="downloadInvoice" class="btn btn-secondary btn-action btn-invoice">
                                                <i class="bi bi-file-earmark-text me-2"></i> <span>Download Invoice</span>
                                            </a>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
    
                            <!-- Order Items -->
                            <div class="order-items-table mt-4">
                                <h4 class="fw-bold mb-3">Order Items</h4>
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th scope="col">Product</th>
                                                <th scope="col">Size</th>
                                                <th scope="col">Price</th>
                                                <th scope="col">Quantity</th>
                                                <th scope="col">Total</th>
                                                <th scope="col">Status</th>
                                                <th scope="col">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if (orderItems && orderItems.length > 0) { %>
                                                <% orderItems.forEach(item => { %>
                                                    <tr>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                <div class="item-image-container me-3">
                                                                    <% if (item.itemImage || (item.productId && item.productId.images && item.productId.images.length > 0)) { %>
                                                                        <img src="<%= item.itemImage || (item.productId.images[0].url) %>" alt="<%= item.product_name %>" class="item-image">
                                                                    <% } else { %>
                                                                        <div class="placeholder-image bg-light d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                                            <i class="bi bi-image text-muted"></i>
                                                                        </div>
                                                                    <% } %>
                                                                </div>
                                                                <span class="fw-medium"><%= item.product_name %></span>
                                                            </div>
                                                        </td>
                                                        <td><%= item.size %></td>
                                                        <td>₹<%= item.price.toFixed(2) %></td>
                                                        <td><%= item.quantity %></td>
                                                        <td>₹<%= item.total_amount.toFixed(2) %></td>
                                                        <td>
                                                            <span class="badge bg-<%= 
                                                                item.status === 'Processing' ? 'success' : 
                                                                item.status === 'Pending' ? 'warning' : 
                                                                item.status === 'Shipped' ? 'info' : 
                                                                item.status === 'Delivered' ? 'success' : 
                                                                item.status === 'Cancelled' ? 'danger' : 
                                                                item.status.includes('Return') ? 'primary' : 'secondary' 
                                                            %>">
                                                                <%= item.status %>
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <% if (order.paymentMethod === 'Online' && (order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending')) { %>
                                                                <!-- No actions for pending/failed payment items -->
                                                                <span class="text-muted">Awaiting payment</span>
                                                            <% } else { %>
                                                                <div class="dropdown">
                                                                    <button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton<%= item._id %>" data-bs-toggle="dropdown" aria-expanded="false">
                                                                        Actions
                                                                    </button>
                                                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton<%= item._id %>">
                                                                        <% if (item.status === 'Delivered') { %>
                                                                            <li>
                                                                                <button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#returnItemModal<%= item._id %>">
                                                                                    <i class="bi bi-arrow-return-left me-2"></i> Return Item
                                                                                </button>
                                                                            </li>
                                                                        <% } else if (['Processing', 'Pending'].includes(item.status)) { %>
                                                                            <li>
                                                                                <button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#cancelItemModal<%= item._id %>">
                                                                                    <i class="bi bi-x-circle me-2"></i> Cancel Item
                                                                                </button>
                                                                            </li>
                                                                        <% } %>
                                                                    </ul>
                                                                </div>
                                                            <% } %>
                                                        </td>
                                                    </tr>
                                                <% }); %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="7" class="text-center">No items found</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
>>>>>>> Stashed changes
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cancel Order Modal -->
    <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">Cancel Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to cancel this order?</p>
                    <div class="mb-3">
                        <label for="cancelReason" class="form-label">Reason for cancellation (optional)</label>
                        <textarea class="form-control" id="cancelReason" rows="3" maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-dark" id="confirmCancelBtn">Yes, cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Return Order Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="returnModalLabel">Return Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to initiate a return for this order?</p>
                    <div class="mb-3">
                        <label for="returnReason" class="form-label">Reason for return (required)</label>
                        <textarea class="form-control" id="returnReason" rows="3" maxlength="500" required></textarea>
                        <div class="invalid-feedback">Please provide a reason for the return.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-dark" id="confirmReturnBtn">Yes, return</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Reorder Modal -->
    <div class="modal fade" id="reorderModal" tabindex="-1" aria-labelledby="reorderModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reorderModalLabel">Confirm Reorder</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Do you want to place this order again?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-dark" id="confirmReorderBtn">Yes, reorder</button>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<<<<<<< Updated upstream
=======
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.12/dist/sweetalert2.all.min.js"></script>
    <!-- Razorpay JS -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
    <!-- JavaScript for handling actions -->
>>>>>>> Stashed changes
    <script>
        // Debounce utility to prevent multiple rapid clicks
        function debounce(func, wait) {
            let timeout;
            return function (...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), wait);
            };
        }

        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                document.querySelector('.page-loader').classList.remove('loader-active');
            }, 800);

<<<<<<< Updated upstream
            const cancelModal = document.getElementById('cancelModal');
            cancelModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-order-id');
                const confirmBtn = cancelModal.querySelector('#confirmCancelBtn');
                const reasonInput = cancelModal.querySelector('#cancelReason');
                confirmBtn.onclick = () => cancelOrder(orderId, reasonInput.value.trim());
            });

            const returnModal = document.getElementById('returnModal');
            returnModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-order-id');
                const confirmBtn = returnModal.querySelector('#confirmReturnBtn');
                const reasonInput = returnModal.querySelector('#returnReason');
                confirmBtn.onclick = debounce(() => {
                    if (!reasonInput.value.trim()) {
                        reasonInput.classList.add('is-invalid');
=======
            if (downloadInvoiceBtn) {
                downloadInvoiceBtn.addEventListener('click', function() {
                    const orderId = this.getAttribute('data-order-id');
                    console.log(`[DEBUG] Download invoice clicked for order: ${orderId}`);

                    Swal.fire({
                        title: 'Generating Invoice',
                        text: 'Please wait while we generate your invoice...',
                        allowOutsideClick: false,
                        didOpen: async () => {
                            Swal.showLoading();

                            try {
                       
                                const iframe = document.createElement('iframe');
                                iframe.style.display = 'none';
                                iframe.src = `/invoice/<%= order._id %>/${orderId}`;

                                document.body.appendChild(iframe);

                         
                                await new Promise(resolve => setTimeout(resolve, 2000));

                           
                                document.body.removeChild(iframe);

                                Swal.fire({
                                    icon: 'success',
                                    title: 'Invoice Downloaded!',
                                    text: 'Your invoice has been downloaded successfully.',
                                    timer: 2000,
                                    showConfirmButton: false
                                });
                            } catch (error) {
                                console.error('Invoice download failed:', error);

                                Swal.fire({
                                    icon: 'error',
                                    title: 'Download Failed',
                                    text: 'Something went wrong while downloading your invoice. Please try again later!',
                                    confirmButtonColor: '#d33',
                                });
                            }
                        }
                    });
                });
            }

            // Function to retry payment
            window.retryPayment = function(orderId) {
                console.log(`[DEBUG] Retry payment clicked for order: ${orderId}`);
                
                Swal.fire({
                    title: 'Retry Payment',
                    text: 'You will be redirected to the payment gateway to complete your payment.',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Proceed to Payment'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Show loading
                        Swal.fire({
                            title: 'Processing',
                            text: 'Preparing payment gateway...',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        // Call the retry payment endpoint
                        fetch(`/retry-payment/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            console.log(`[DEBUG] Retry payment response status: ${response.status}`);
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log(`[DEBUG] Retry payment response data:`, data);
                            if (data.success) {
                                // Initialize Razorpay payment
                                const options = {
                                    key: data.key,
                                    amount: data.order.amount,
                                    currency: "INR",
                                    name: "ELITE WEAR",
                                    description: "Order Payment",
                                    order_id: data.order.id,
                                    handler: function (response) {
                                        // Verify payment
                                        fetch("/verify-payment", {
                                            method: "POST",
                                            headers: { "Content-Type": "application/json" },
                                            body: JSON.stringify({
                                                razorpay_order_id: response.razorpay_order_id,
                                                razorpay_payment_id: response.razorpay_payment_id,
                                                razorpay_signature: response.razorpay_signature,
                                            }),
                                        })
                                        .then((res) => res.json())
                                        .then((verifyData) => {
                                            if (verifyData.success) {
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: 'Payment Successful',
                                                    text: 'Your payment has been processed successfully!',
                                                    timer: 2000,
                                                    showConfirmButton: false
                                                }).then(() => {
                                                    window.location.href = verifyData.redirect || `/order-details/${orderId}`;
                                                });
                                            } else {
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Payment Verification Failed',
                                                    text: verifyData.message || 'Failed to verify payment',
                                                });
                                            }
                                        })
                                        .catch((err) => {
                                            console.error('[ERROR] Error verifying payment:', err);
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Error',
                                                text: 'Failed to verify payment. Please contact support.',
                                            });
                                        });
                                    },
                                    prefill: {
                                        name: data.user.name,
                                        email: data.user.email,
                                        contact: data.user.contact,
                                    },
                                    theme: {
                                        color: "#2c3e50",
                                    },
                                    modal: {
                                        ondismiss: function() {
                                            console.log("Payment modal dismissed");
                                            // Handle failed payment
                                            fetch("/handle-failed-payment", {
                                                method: "POST",
                                                headers: { "Content-Type": "application/json" },
                                                body: JSON.stringify({
                                                    razorpay_order_id: data.order.id
                                                }),
                                            })
                                            .then(res => res.json())
                                            .then(data => {
                                                if (data.success) {
                                                    Swal.fire({
                                                        icon: 'warning',
                                                        title: 'Payment Cancelled',
                                                        text: 'You can retry the payment later from your orders page.',
                                                    });
                                                }
                                            })
                                            .catch(err => {
                                                console.error("Error handling failed payment:", err);
                                            });
                                        }
                                    }
                                };
                                const rzp = new Razorpay(options);
                                rzp.open();
                                
                                // Close the loading dialog
                                Swal.close();
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message || 'Failed to initiate payment',
                                });
                            }
                        })
                        .catch(error => {
                            console.error('[ERROR] Error retrying payment:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred. Please try again.',
                            });
                        });
                    }
                });
            };
    
            const confirmCancelOrderBtn = document.getElementById('confirmCancelOrder');
            if (confirmCancelOrderBtn) {
                console.log('[DEBUG] Cancel order button found');
                confirmCancelOrderBtn.addEventListener('click', function() {
                    const orderId = this.getAttribute('data-order-id');
                    const cancelReason = document.getElementById('cancelReason').value;
                    console.log(`[DEBUG] Cancel order clicked for order: ${orderId}, reason: ${cancelReason}`);
                    
                    if (!cancelReason) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Please select a reason for cancellation'
                        });
>>>>>>> Stashed changes
                        return;
                    }
                    console.log(`Frontend: Initiating return for order ${orderId} with reason: ${reasonInput.value.trim()}`);
                    initiateReturn(orderId, reasonInput.value.trim());
                }, 1000);
                reasonInput.addEventListener('input', () => {
                    reasonInput.classList.remove('is-invalid');
                });
            });

            const reorderModal = document.getElementById('reorderModal');
            reorderModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-order-id');
                const confirmBtn = reorderModal.querySelector('#confirmReorderBtn');
                confirmBtn.onclick = debounce(() => {
                    confirmBtn.classList.add('btn-loading');
                    confirmBtn.innerHTML = '<i class="bi bi-arrow-repeat"></i> Reordering...';
                    reOrder(orderId, confirmBtn);
                }, 1000);
            });
        });

        function showToast(message, isSuccess = true) {
            const toastEl = document.getElementById('orderToast');
            const toastBody = toastEl.querySelector('.toast-body');
            toastBody.innerHTML = `<i class="bi ${isSuccess ? 'bi-check-circle-fill text-success' : 'bi-exclamation-triangle-fill text-danger'} me-2"></i>${message}`;
            const toast = new bootstrap.Toast(toastEl);
            toast.show();
        }

        function initiateReturn(orderId, returnReason) {
            fetch(`/return-order/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ returnReason })
            })
                .then(res => {
                    if (!res.ok) {
                        throw new Error(`HTTP error! Status: ${res.status}`);
                    }
                    return res.json();
                })
                .then(data => {
                    if (data.success) {
                        showToast("Return initiated successfully. Await admin approval.");
                        setTimeout(() => window.location.reload(), 2000);
                    } else {
                        showToast(`Failed to initiate return: ${data.message}`, false);
                    }
                })
                .catch(err => {
                    console.error(`Frontend: Fetch error:`, err);
                    showToast(`Error initiating return: ${err.message}`, false);
                });
        }

        function cancelOrder(orderId, cancelReason) {
            fetch(`/orders/cancel/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ cancelReason })
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        showToast("Order cancelled successfully");
                        setTimeout(() => window.location.reload(), 2000);
                    } else {
                        showToast(data.message, false);
                    }
                })
                .catch(err => showToast("Error cancelling order", false));
        }

        function reOrder(orderId, button) {
            console.log(`Frontend: Initiating reorder for order ${orderId}`);
            fetch(`/reorder/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(res => {
                    if (!res.ok) {
                        throw new Error(`HTTP error! Status: ${res.status}`);
                    }
                    return res.json();
                })
                .then(data => {
                    button.classList.remove('btn-loading');
                    button.innerHTML = '<i class="bi bi-arrow-repeat"></i> Yes, reorder';
                    if (data.success) {
                        showToast("Order placed successfully!");
                        setTimeout(() => window.location.href = data.redirect, 2000);
                    } else {
                        showToast(data.message || "Failed to reorder", false);
                    }
                })
                .catch(err => {
                    button.classList.remove('btn-loading');
                    button.innerHTML = '<i class="bi bi-arrow-repeat"></i> Yes, reorder';
                    console.error(`Frontend: Reorder error:`, err);
                    showToast("Error reordering: Please try again", false);
                });
        }

        function downloadInvoice(orderId) {
            window.location.href = `/invoice/${orderId}`;
        }

        function trackOrder(orderId) {
            window.location.href = `/orders/track/${orderId}`;
        }
    </script>
</body>
</html>