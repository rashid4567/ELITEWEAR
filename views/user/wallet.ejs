<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Elite Wear | My Wallet</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
      :root {
        --primary-color: #0f172a;
        --secondary-color: #f8fafc;
        --accent-color: #3b82f6;
        --accent-hover: #2563eb;
        --accent-secondary: #8b5cf6;
        --accent-tertiary: #ec4899;
        --text-primary: #1e293b;
        --text-secondary: #64748b;
        --text-light: #94a3b8;
        --border-color: #e2e8f0;
        --card-bg: #ffffff;
        --sidebar-bg: #ffffff;
        --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05);
        --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.1);
        --gradient-primary: linear-gradient(135deg, #3b82f6, #8b5cf6);
        --gradient-secondary: linear-gradient(135deg, #8b5cf6, #ec4899);
        --gradient-accent: linear-gradient(135deg, #3b82f6, #10b981);
        --success-color: #10b981;
        --error-color: #ef4444;
        --warning-color: #f59e0b;
        --transition-fast: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        --border-radius-sm: 0.375rem;
        --border-radius: 0.5rem;
        --border-radius-lg: 0.75rem;
        --border-radius-xl: 1rem;
        --border-radius-full: 9999px;
        --font-primary: 'Outfit', sans-serif;
        --font-secondary: 'Playfair Display', serif;
      }

      /* Dark mode variables */
      [data-theme="dark"] {
        --primary-color: #f8fafc;
        --secondary-color: #0f172a;
        --text-primary: #f1f5f9;
        --text-secondary: #cbd5e1;
        --text-light: #94a3b8;
        --border-color: #334155;
        --card-bg: #1e293b;
        --sidebar-bg: #0f172a;
        --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
        --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.3);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: var(--font-primary);
        color: var(--text-primary);
        background-color: var(--secondary-color);
        overflow-x: hidden;
        transition: background-color var(--transition-normal), color var(--transition-normal);
      }

      /* Scrollbar styling */
      ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
      }

      ::-webkit-scrollbar-track {
        background: var(--secondary-color);
      }

      ::-webkit-scrollbar-thumb {
        background: var(--text-light);
        border-radius: var(--border-radius-full);
      }

      ::-webkit-scrollbar-thumb:hover {
        background: var(--text-secondary);
      }

      /* Page Wrapper */
      .page-wrapper {
        padding: 2rem 0;
        min-height: calc(100vh - 150px);
      }

      /* Content Container */
      .content-container {
        background-color: var(--card-bg);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--card-shadow);
        overflow: hidden;
        transition: all var(--transition-normal);
      }

      /* Page Header */
      .page-header {
        padding: 1.5rem 2rem;
        border-bottom: 1px solid var(--border-color);
        background: linear-gradient(to right, rgba(59, 130, 246, 0.05), rgba(139, 92, 246, 0.05));
      }

      .header-content {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .breadcrumb-nav {
        margin-bottom: 0.5rem;
      }

      .breadcrumb {
        margin-bottom: 0;
        padding: 0;
        background: transparent;
      }

      .breadcrumb-item a {
        color: var(--text-secondary);
        text-decoration: none;
        transition: color var(--transition-fast);
      }

      .breadcrumb-item a:hover {
        color: var(--accent-color);
      }

      .breadcrumb-item.active {
        color: var(--text-primary);
      }

      .breadcrumb-item + .breadcrumb-item::before {
        color: var(--text-light);
      }

      .header-title {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
      }

      .header-title h1 {
        font-size: 1.75rem;
        font-weight: 700;
        margin: 0;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-fill-color: transparent;
        display: inline-block;
      }

      .header-title p {
        color: var(--text-secondary);
        margin: 0;
        font-size: 0.95rem;
      }

      /* Wallet Dashboard */
      .wallet-dashboard {
        padding: 2rem;
      }

      /* Balance Card */
      .balance-card {
        position: relative;
        height: 100%;
        min-height: 200px;
        perspective: 1000px;
        transform-style: preserve-3d;
        transition: transform var(--transition-normal);
      }

      .balance-card:hover .balance-card-inner {
        transform: rotateY(5deg);
      }

      .balance-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        min-height: 200px;
        background: var(--gradient-primary);
        border-radius: var(--border-radius-lg);
        padding: 1.5rem;
        box-shadow: 0 15px 30px -10px rgba(59, 130, 246, 0.3);
        overflow: hidden;
        transition: all var(--transition-normal), transform var(--transition-normal);
        transform-style: preserve-3d;
      }

      .card-pattern {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
        opacity: 0.5;
        z-index: 0;
      }

      .card-content {
        position: relative;
        z-index: 1;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        height: 100%;
      }

      .card-label {
        font-size: 0.9rem;
        font-weight: 500;
        color: rgba(255, 255, 255, 0.8);
        text-transform: uppercase;
        letter-spacing: 1px;
      }

      .card-amount {
        font-size: 2.5rem;
        font-weight: 700;
        color: white;
        margin-top: 0.5rem;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .card-actions {
        margin-top: auto;
      }

      .btn-add-money {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        padding: 0.75rem 1.25rem;
        font-weight: 500;
        cursor: pointer;
        transition: all var(--transition-fast);
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
      }

      .btn-add-money:hover {
        background-color: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
      }

      .btn-add-money:active {
        transform: translateY(0);
      }

      .card-brand {
        position: absolute;
        bottom: 1.5rem;
        right: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        z-index: 1;
      }

      .brand-logo {
        font-size: 0.85rem;
        font-weight: 600;
        color: white;
        display: flex;
        align-items: center;
        gap: 0.35rem;
      }

      .card-chip {
        width: 35px;
        height: 25px;
        background: linear-gradient(135deg, #f0f0f0, #d0d0d0);
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #888;
        font-size: 0.7rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      /* Stats Container */
      .stats-container {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      .stat-card {
        flex: 1;
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        padding: 1rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        box-shadow: var(--card-shadow);
        transition: all var(--transition-normal);
        border: 1px solid var(--border-color);
      }

      .stat-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--card-hover-shadow);
      }

      .stat-icon {
        width: 40px;
        height: 40px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1rem;
      }

      .stat-icon.credit {
        background: linear-gradient(135deg, #10b981, #059669);
      }

      .stat-icon.debit {
        background: linear-gradient(135deg, #f59e0b, #d97706);
      }

      .stat-content {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
      }

      .stat-value {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
      }

      .stat-label {
        font-size: 0.85rem;
        color: var(--text-secondary);
      }

      /* Transaction Summary */
      .transaction-summary {
        background-color: var(--card-bg);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--card-shadow);
        height: 100%;
        display: flex;
        flex-direction: column;
        border: 1px solid var(--border-color);
        overflow: hidden;
      }

      .summary-header {
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .summary-header h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin: 0;
        color: var(--text-primary);
      }

      .summary-filters {
        display: flex;
        gap: 0.75rem;
      }

      .btn-filter {
        background-color: transparent;
        color: var(--text-secondary);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 0.5rem 0.75rem;
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all var(--transition-fast);
      }

      .btn-filter:hover {
        background-color: rgba(59, 130, 246, 0.05);
        color: var(--accent-color);
        border-color: var(--accent-color);
      }

      .summary-body {
        flex: 1;
        padding: 1rem 0;
        overflow-y: auto;
      }

      .transaction-list {
        display: flex;
        flex-direction: column;
      }

      .transaction-item {
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        border-bottom: 1px solid var(--border-color);
        transition: all var(--transition-fast);
        position: relative;
        overflow: hidden;
      }

      .transaction-item:last-child {
        border-bottom: none;
      }

      .transaction-item:hover {
        background-color: rgba(59, 130, 246, 0.05);
      }

      .transaction-item::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 3px;
        background: transparent;
        transition: all var(--transition-fast);
      }

      .transaction-item:hover::before {
        background: var(--gradient-primary);
      }

      .transaction-icon {
        width: 40px;
        height: 40px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1rem;
        flex-shrink: 0;
      }

      .transaction-icon.credit {
        background: linear-gradient(135deg, #10b981, #059669);
      }

      .transaction-icon.debit {
        background: linear-gradient(135deg, #f59e0b, #d97706);
      }

      .transaction-details {
        flex: 1;
        min-width: 0;
      }

      .transaction-title {
        font-size: 0.95rem;
        font-weight: 500;
        color: var(--text-primary);
        margin-bottom: 0.25rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .transaction-meta {
        display: flex;
        gap: 1rem;
        font-size: 0.8rem;
        color: var(--text-secondary);
      }

      .transaction-date, .transaction-id {
        display: flex;
        align-items: center;
        gap: 0.35rem;
      }

      .transaction-amount {
        font-size: 1.1rem;
        font-weight: 600;
        white-space: nowrap;
      }

      .transaction-amount.credit {
        color: #10b981;
      }

      .transaction-amount.debit {
        color: #f59e0b;
      }

      .summary-footer {
        padding: 1rem 1.5rem;
        border-top: 1px solid var(--border-color);
        text-align: center;
      }

      .btn-view-all {
        color: var(--accent-color);
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all var(--transition-fast);
      }

      .btn-view-all:hover {
        color: var(--accent-hover);
        text-decoration: underline;
      }

      .empty-summary {
        padding: 3rem 1.5rem;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
      }

      .empty-icon {
        font-size: 2.5rem;
        color: var(--text-light);
        opacity: 0.5;
      }

      .empty-summary h4 {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
      }

      .empty-summary p {
        color: var(--text-secondary);
        margin: 0;
      }

      /* Transaction History */
      .transaction-history {
        padding: 2rem;
        border-top: 1px solid var(--border-color);
      }

      .section-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
      }

      .section-header h2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
        color: var(--text-primary);
      }

      .section-actions {
        display: flex;
        gap: 0.75rem;
      }

      .btn-export {
        background-color: transparent;
        color: var(--text-secondary);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 0.5rem 0.75rem;
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all var(--transition-fast);
      }

      .btn-export:hover {
        background-color: rgba(59, 130, 246, 0.05);
        color: var(--accent-color);
        border-color: var(--accent-color);
      }

      /* Transaction Table */
      .transaction-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
      }

      .transaction-table th {
        background-color: rgba(59, 130, 246, 0.05);
        color: var(--text-secondary);
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
        padding: 0.75rem 1rem;
        border-bottom: 1px solid var(--border-color);
      }

      .transaction-table th:first-child {
        border-top-left-radius: var(--border-radius);
      }

      .transaction-table th:last-child {
        border-top-right-radius: var(--border-radius);
      }

      .transaction-table td {
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        color: var(--text-primary);
        font-size: 0.9rem;
        vertical-align: middle;
      }

      .transaction-table tr:last-child td {
        border-bottom: none;
      }

      .transaction-table tr:last-child td:first-child {
        border-bottom-left-radius: var(--border-radius);
      }

      .transaction-table tr:last-child td:last-child {
        border-bottom-right-radius: var(--border-radius);
      }

      .transaction-table tr {
        transition: all var(--transition-fast);
      }

      .transaction-table tr:hover {
        background-color: rgba(59, 130, 246, 0.05);
      }

      .transaction-id-cell {
        max-width: 150px;
      }

      .transaction-id-text {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 150px;
      }

      .amount-cell {
        font-weight: 600;
      }

      .transaction-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: var(--border-radius-full);
        font-size: 0.75rem;
        font-weight: 500;
        text-transform: uppercase;
      }

      .transaction-badge.credit {
        background-color: rgba(16, 185, 129, 0.1);
        color: #10b981;
      }

      .transaction-badge.debit {
        background-color: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
      }

      /* Pagination */
      .pagination-wrapper {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
      }

      .pagination {
        margin: 0;
      }

      .page-item .page-link {
        color: var(--text-secondary);
        border-color: var(--border-color);
        background-color: var(--card-bg);
        transition: all var(--transition-fast);
      }

      .page-item.active .page-link {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
      }

      .page-item .page-link:hover {
        background-color: rgba(59, 130, 246, 0.05);
        color: var(--accent-color);
        border-color: var(--accent-color);
      }

      .page-item.disabled .page-link {
        color: var(--text-light);
        background-color: var(--card-bg);
        border-color: var(--border-color);
      }

      .pagination-info {
        color: var(--text-secondary);
        font-size: 0.9rem;
      }

      /* Empty State */
      .empty-state {
        padding: 3rem 1.5rem;
        text-align: center;
      }

      .empty-state-content {
        max-width: 400px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
      }

      .empty-state-icon {
        font-size: 3.5rem;
        color: var(--text-light);
        opacity: 0.5;
      }

      .empty-state h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
      }

      .empty-state p {
        color: var(--text-secondary);
        margin: 0;
      }

      .btn-primary {
        background: var(--gradient-primary);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        cursor: pointer;
        transition: all var(--transition-fast);
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
      }

      .btn-primary:active {
        transform: translateY(0);
      }

      /* Add Money Modal */
      .modal-content {
        background-color: var(--card-bg);
        border: none;
        border-radius: var(--border-radius-lg);
        box-shadow: var(--card-shadow);
      }

      .modal-header {
        border-bottom: 1px solid var(--border-color);
        padding: 1.25rem 1.5rem;
      }

      .modal-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .modal-body {
        padding: 1.5rem;
      }

      .form-label {
        color: var(--text-primary);
        font-weight: 500;
        margin-bottom: 0.5rem;
      }

      .form-control {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        border-radius: var(--border-radius);
        padding: 0.75rem 1rem;
        transition: all var(--transition-fast);
      }

      .form-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
      }

      .input-group-text {
        background-color: rgba(59, 130, 246, 0.05);
        border: 1px solid var(--border-color);
        color: var(--text-secondary);
      }

      .form-text {
        color: var(--text-secondary);
        font-size: 0.85rem;
        margin-top: 0.5rem;
      }

      /* Quick Amounts */
      .quick-amounts {
        margin-bottom: 1.5rem;
      }

      .amount-options {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin-top: 0.5rem;
      }

      .amount-option {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        border-radius: var(--border-radius);
        padding: 0.5rem 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all var(--transition-fast);
      }

      .amount-option:hover {
        background-color: rgba(59, 130, 246, 0.05);
        border-color: var(--accent-color);
        color: var(--accent-color);
      }

      .amount-option.active {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
      }

      /* Payment Methods */
      .payment-methods {
        margin-bottom: 1.5rem;
      }

      .payment-options {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        margin-top: 0.5rem;
      }

      .payment-option {
        margin: 0;
        padding: 0;
      }

      .form-check-input {
        margin-top: 0.25rem;
      }

      .form-check-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-primary);
        font-weight: 500;
        cursor: pointer;
      }

      .form-check-input:checked {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
      }

      /* Submit Button */
      .btn-submit {
        background: var(--gradient-primary);
        color: white;
        border: none;
        border-radius: var(--border-radius);
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        cursor: pointer;
        transition: all var(--transition-fast);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        width: 100%;
      }

      .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
      }

      .btn-submit:active {
        transform: translateY(0);
      }

      .btn-text {
        flex: 1;
        text-align: center;
      }

      .btn-icon {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      /* Loading Overlay */
      .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(15, 23, 42, 0.7);
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        visibility: hidden;
        transition: all var(--transition-normal);
      }

      .loading-overlay.active {
        opacity: 1;
        visibility: visible;
      }

      .spinner-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
      }

      .spinner {
        width: 50px;
        height: 50px;
        border: 3px solid rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        border-top-color: var(--accent-color);
        animation: spin 1s ease-in-out infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      .spinner-container p {
        color: white;
        font-size: 1rem;
        font-weight: 500;
        margin: 0;
      }

      /* Toast Notification */
      .toast-container {
        z-index: 9999;
      }

      .toast {
        background-color: var(--card-bg);
        border: none;
        border-radius: var(--border-radius);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 350px;
        max-width: 100%;
        position: relative;
      }

      .toast::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 4px;
      }

      .toast.success::before {
        background: var(--success-color);
      }

      .toast.error::before {
        background: var(--error-color);
      }

      .toast.warning::before {
        background: var(--warning-color);
      }

      .toast-header {
        background-color: transparent;
        border-bottom: 1px solid var(--border-color);
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
      }

      .toast-header .me-auto {
        font-weight: 600;
        color: var(--text-primary);
      }

      .toast-body {
        padding: 1rem;
        color: var(--text-secondary);
      }

      .toast-progress {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 3px;
        background: var(--gradient-primary);
        width: 100%;
        transform-origin: left;
        animation: progress 5s linear forwards;
      }

      @keyframes progress {
        to {
          transform: scaleX(0);
        }
      }

      /* Animations */
      .fade-in {
        opacity: 0;
        transform: translateY(20px);
        animation: fadeIn 0.5s forwards;
      }

      @keyframes fadeIn {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Responsive Adjustments */
      @media (max-width: 991.98px) {
        .wallet-dashboard {
          padding: 1.5rem;
        }

        .transaction-history {
          padding: 1.5rem;
        }

        .stats-container {
          flex-direction: row;
        }

        .balance-card-inner {
          min-height: 180px;
        }
      }

      @media (max-width: 767.98px) {
        .page-wrapper {
          padding: 1rem 0;
        }

        .page-header {
          padding: 1.25rem 1.5rem;
        }

        .header-title h1 {
          font-size: 1.5rem;
        }

        .wallet-dashboard {
          padding: 1.25rem;
        }

        .transaction-history {
          padding: 1.25rem;
        }

        .card-amount {
          font-size: 2rem;
        }

        .stats-container {
          flex-direction: column;
        }

        .transaction-meta {
          flex-direction: column;
          gap: 0.25rem;
        }

        .pagination-wrapper {
          flex-direction: column;
          align-items: center;
        }
      }

      @media (max-width: 575.98px) {
        .wallet-dashboard {
          padding: 1rem;
        }

        .transaction-history {
          padding: 1rem;
        }

        .transaction-item {
          padding: 0.75rem 1rem;
        }

        .transaction-icon {
          width: 35px;
          height: 35px;
          font-size: 0.85rem;
        }

        .transaction-amount {
          font-size: 1rem;
        }

        .amount-options {
          gap: 0.5rem;
        }

        .amount-option {
          padding: 0.5rem 0.75rem;
          font-size: 0.85rem;
        }
      }

      /* Ripple Effect */
      .ripple {
        position: absolute;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.4);
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
      }

      @keyframes ripple {
        to {
          transform: scale(4);
          opacity: 0;
        }
      }

      /* Enhanced Toast Styling */
      .toast-notification {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: var(--card-bg);
        border-radius: var(--border-radius-lg);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        width: 350px;
        max-width: calc(100% - 40px);
        overflow: hidden;
        z-index: 9999;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s ease;
      }

      .toast-notification.show {
        opacity: 1;
        transform: translateY(0);
      }

      .toast-notification.success {
        border-left: 4px solid var(--success-color);
      }

      .toast-notification.error {
        border-left: 4px solid var(--error-color);
      }

      .toast-notification.warning {
        border-left: 4px solid var(--warning-color);
      }

      .toast-notification.info {
        border-left: 4px solid var(--accent-color);
      }

      .toast-header {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        background-color: rgba(0, 0, 0, 0.02);
        border-bottom: 1px solid var(--border-color);
      }

      .toast-icon {
        margin-right: 10px;
        font-size: 18px;
      }

      .toast-notification.success .toast-icon {
        color: var(--success-color);
      }

      .toast-notification.error .toast-icon {
        color: var(--error-color);
      }

      .toast-notification.warning .toast-icon {
        color: var(--warning-color);
      }

      .toast-notification.info .toast-icon {
        color: var(--accent-color);
      }

      .toast-title {
        font-weight: 600;
        flex: 1;
        color: var(--text-primary);
      }

      .toast-close {
        background: transparent;
        border: none;
        color: var(--text-secondary);
        font-size: 16px;
        cursor: pointer;
        padding: 0;
        margin-left: 10px;
      }

      .toast-body {
        padding: 15px;
        color: var(--text-secondary);
      }

      .toast-progress {
        height: 3px;
        background: linear-gradient(to right, var(--accent-color), var(--accent-secondary));
        width: 100%;
        transform-origin: left;
        animation: progress 5s linear forwards;
      }

      @keyframes progress {
        to {
          transform: scaleX(0);
        }
      }
    </style>
  </head>
  <body>
    <%- include("../partials/user/header") %>
    
    <div class="page-wrapper">
      <div class="container">
        <div class="row g-4">
          <!-- Sidebar Column -->
          <div class="col-lg-3 col-md-4">
            <%- include("../partials/user/profileSidebar") %>
          </div>
          
          <!-- Main Content Column -->
          <div class="col-lg-9 col-md-8">
            <div class="content-container">
              <!-- Page Header -->
              <div class="page-header">
                <div class="header-content">
                  <div class="breadcrumb-nav">
                    <nav aria-label="breadcrumb">
                      <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/"><i class="fas fa-home"></i></a></li>
                        <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Wallet</li>
                      </ol>
                    </nav>
                  </div>
                  <div class="header-title">
                    <h1><i class="fas fa-wallet me-2"></i> My Wallet</h1>
                    <p>Manage your funds and view transaction history</p>
                  </div>
                </div>
              </div>
              
              <!-- Wallet Dashboard -->
              <div class="wallet-dashboard">
                <div class="row g-4">
                  <!-- Balance Card -->
                  <div class="col-lg-5">
                    <div class="balance-card">
                      <div class="balance-card-inner">
                        <div class="card-pattern"></div>
                        <div class="card-content">
                          <div class="card-label">Available Balance</div>
                          <div class="card-amount">₹<%= wallet.amount.toFixed(2) %></div>
                          <div class="card-actions">
                            <button class="btn-add-money" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                              <i class="fas fa-plus"></i> Add Money
                            </button>
                          </div>
                        </div>
                        <div class="card-brand">
                          <div class="brand-logo">
                            <i class="fas fa-wallet"></i> Elite Wallet
                          </div>
                          <div class="card-chip">
                            <i class="fas fa-credit-card"></i>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <!-- Quick Stats -->
                    <div class="stats-container">
                      
                      
                      
                    </div>
                  </div>
                  
                  <!-- Transaction Summary -->
                  <div class="col-lg-7">
                    <div class="transaction-summary">
                      <div class="summary-header">
                        <h3><i class="fas fa-history me-2"></i> Recent Activity</h3>
                        <div class="summary-filters">
                          <div class="dropdown">
                            <button class="btn-filter dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                              
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="filterDropdown">
                              <li><a class="dropdown-item" href="/wallet?filter=all">All Transactions</a></li>
                              <li><a class="dropdown-item" href="/wallet?filter=credit">Money Added</a></li>
                              <li><a class="dropdown-item" href="/wallet?filter=debit">Money Spent</a></li>
                            </ul>
                          </div>
                        </div>
                      </div>
                      
                      <div class="summary-body">
                        <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                          <div class="transaction-list">
                            <% wallet.transactions.slice(0, 5).forEach(transaction => { %>
                              <div class="transaction-item">
                                <div class="transaction-icon <%= transaction.type === 'credit' ? 'credit' : 'debit' %>">
                                  <i class="fas <%= transaction.type === 'credit' ? 'fa-arrow-down' : 'fa-arrow-up' %>"></i>
                                </div>
                                <div class="transaction-details">
                                  <div class="transaction-title"><%= transaction.description %></div>
                                  <div class="transaction-meta">
                                    <span class="transaction-date"><i class="far fa-calendar-alt"></i> <%= transaction.formattedDate %></span>
                                    <span class="transaction-id"><i class="fas fa-hashtag"></i> <%= transaction.transactionRef %></span>
                                  </div>
                                </div>
                                <div class="transaction-amount <%= transaction.type === 'credit' ? 'credit' : 'debit' %>">
                                  <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                                </div>
                              </div>
                            <% }) %>
                          </div>
                          
                          <div class="summary-footer">
                            <a href="#transaction-history" class="btn-view-all">
                              View All Transactions <i class="fas fa-chevron-right"></i>
                            </a>
                          </div>
                        <% } else { %>
                          <div class="empty-summary">
                            <div class="empty-icon">
                              <i class="fas fa-receipt"></i>
                            </div>
                            <h4>No Recent Activity</h4>
                            <p>Your recent transactions will appear here</p>
                          </div>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Transaction History -->
              <div id="transaction-history" class="transaction-history">
                <div class="section-header">
                  <h2><i class="fas fa-list-alt me-2"></i> Transaction History</h2>
                  <div class="section-actions">
                    <div class="dropdown">
                      <button class="btn-export dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-download"></i> Export
                      </button>
                      <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="exportDropdown">
                        <li><a class="dropdown-item" href="/wallet/export?format=pdf"><i class="far fa-file-pdf"></i> Export as PDF</a></li>
                        <li><a class="dropdown-item" href="/wallet/export?format=csv"><i class="far fa-file-excel"></i> Export as CSV</a></li>
                      </ul>
                    </div>
                  </div>
                </div>
                
                <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                  <div class="table-responsive">
                    <table class="table transaction-table">
                      <thead>
                        <tr>
                          <th>Transaction ID</th>
                          <th>Date & Time</th>
                          <th>Description</th>
                          <th>Amount</th>
                          <th>Type</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% wallet.transactions.forEach(transaction => { %>
                          <tr>
                            <td class="transaction-id-cell">
                              <span class="transaction-id-text"><%= transaction.transactionRef %></span>
                            </td>
                            <td><%= transaction.formattedDate %></td>
                            <td><%= transaction.description %></td>
                            <td class="amount-cell">₹<%= transaction.amount.toFixed(2) %></td>
                            <td>
                              <span class="transaction-badge <%= transaction.type === 'credit' ? 'credit' : 'debit' %>">
                                <%= transaction.type === 'credit' ? 'Credit' : 'Debit' %>
                              </span>
                            </td>
                          </tr>
                        <% }) %>
                      </tbody>
                    </table>
                  </div>
                  
                  <!-- Pagination -->
                  <% if (totalPages > 1) { %>
                    <div class="pagination-wrapper">
                      <nav aria-label="Transaction history pagination">
                        <ul class="pagination">
                          <!-- Previous Page -->
                          <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="/wallet?page=<%= currentPage - 1 %>" aria-label="Previous" <%= currentPage === 1 ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                              <i class="fas fa-chevron-left"></i>
                            </a>
                          </li>
                          
                          <!-- First Page -->
                          <% if (currentPage > 3) { %>
                            <li class="page-item">
                              <a class="page-link" href="/wallet?page=1">1</a>
                            </li>
                            <% if (currentPage > 4) { %>
                              <li class="page-item disabled">
                                <span class="page-link">...</span>
                              </li>
                            <% } %>
                          <% } %>
                          
                          <!-- Page Numbers -->
                          <% 
                            let startPage = Math.max(1, currentPage - 1);
                            let endPage = Math.min(totalPages, currentPage + 1);
                            
                            if (endPage - startPage + 1 < 3) {
                              if (currentPage < totalPages) {
                                endPage = Math.min(totalPages, currentPage + 2);
                              } else {
                                startPage = Math.max(1, totalPages - 2);
                              }
                            }
                            
                            for (let i = startPage; i <= endPage; i++) {
                          %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                              <a class="page-link" href="/wallet?page=<%= i %>"><%= i %></a>
                            </li>
                          <% } %>
                          
                          <!-- Last Page -->
                          <% if (currentPage < totalPages - 2) { %>
                            <% if (currentPage < totalPages - 3) { %>
                              <li class="page-item disabled">
                                <span class="page-link">...</span>
                              </li>
                            <% } %>
                            <li class="page-item">
                              <a class="page-link" href="/wallet?page=<%= totalPages %>"><%= totalPages %></a>
                            </li>
                          <% } %>
                          
                          <!-- Next Page -->
                          <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                            <a class="page-link" href="/wallet?page=<%= currentPage + 1 %>" aria-label="Next" <%= currentPage === totalPages ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                              <i class="fas fa-chevron-right"></i>
                            </a>
                          </li>
                        </ul>
                      </nav>
                      
                      <div class="pagination-info">
                        Showing page <%= currentPage %> of <%= totalPages %>
                      </div>
                    </div>
                  <% } %>
                <% } else { %>
                  <div class="empty-state">
                    <div class="empty-state-content">
                      <div class="empty-state-icon">
                        <i class="fas fa-receipt"></i>
                      </div>
                      <h3>No Transactions Yet</h3>
                      <p>Your transaction history will appear here once you start using your wallet.</p>
                      <button class="btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                        <i class="fas fa-plus"></i> Add Your First Funds
                      </button>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Add Money Modal -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addMoneyModalLabel">
              <i class="fas fa-wallet me-2"></i> Add Money to Wallet
            </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="addMoneyForm">
              <div class="form-group mb-4">
                <label for="amount" class="form-label">Amount (₹)</label>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <input
                    type="number"
                    class="form-control form-control-lg"
                    id="amount"
                    name="amount"
                    min="1"
                    placeholder="Enter amount"
                    required
                  />
                </div>
                <div class="form-text">Minimum amount: ₹1</div>
              </div>
              
              <div class="form-group mb-4">
                <label for="description" class="form-label">Description</label>
                <input
                  type="text"
                  class="form-control"
                  id="description"
                  name="description"
                  value="Added money to wallet"
                  placeholder="Enter a description for this transaction"
                  required
                />
              </div>
              
              <div class="quick-amounts mb-4">
                <label class="form-label">Quick Select</label>
                <div class="amount-options">
                  <button type="button" class="amount-option" data-amount="100">₹100</button>
                  <button type="button" class="amount-option" data-amount="500">₹500</button>
                  <button type="button" class="amount-option" data-amount="1000">₹1000</button>
                  <button type="button" class="amount-option" data-amount="2000">₹2000</button>
                </div>
              </div>
              
              <div class="payment-methods mb-4">
                <label class="form-label">Payment Method</label>
                <div class="payment-options">
                  <div class="form-check payment-option">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="methodCard" value="card" checked>
                    <label class="form-check-label" for="methodCard">
                      <i class="fas fa-credit-card"></i> Credit/Debit Card
                    </label>
                  </div>
                  <div class="form-check payment-option">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="methodUPI" value="upi">
                    <label class="form-check-label" for="methodUPI">
                      <i class="fas fa-mobile-alt"></i> UPI
                    </label>
                  </div>
                  <div class="form-check payment-option">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="methodNetBanking" value="netbanking">
                    <label class="form-check-label" for="methodNetBanking">
                      <i class="fas fa-university"></i> Net Banking
                    </label>
                  </div>
                </div>
              </div>
              
              <button type="submit" class="btn-submit" id="addMoneyBtn">
                <span class="btn-text">Add Money</span>
                <span class="btn-icon"><i class="fas fa-arrow-right"></i></span>
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
      <div class="spinner-container">
        <div class="spinner"></div>
        <p>Processing your request...</p>
      </div>
    </div>

    <!-- Enhanced Toast Notification -->
    <div id="toastContainer" class="toast-container"></div>

    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Enhanced Toast Notification System
        function showToast(title, message, type = 'success', duration = 5000) {
          const toastContainer = document.getElementById('toastContainer');
          
          // Create toast elements
          const toast = document.createElement('div');
          toast.className = `toast-notification ${type}`;
          
          // Set icon based on type
          let iconClass = 'fa-check-circle';
          if (type === 'error') iconClass = 'fa-exclamation-circle';
          if (type === 'warning') iconClass = 'fa-exclamation-triangle';
          if (type === 'info') iconClass = 'fa-info-circle';
          
          // Create toast content
          toast.innerHTML = `
            <div class="toast-header">
              <i class="fas ${iconClass} toast-icon"></i>
              <div class="toast-title">${title}</div>
              <button type="button" class="toast-close" aria-label="Close">
                <i class="fas fa-times"></i>
              </button>
            </div>
            <div class="toast-body">${message}</div>
            <div class="toast-progress"></div>
          `;
          
          // Add to container
          toastContainer.appendChild(toast);
          
          // Show toast with animation
          setTimeout(() => {
            toast.classList.add('show');
          }, 10);
          
          // Add close button functionality
          const closeBtn = toast.querySelector('.toast-close');
          closeBtn.addEventListener('click', () => {
            toast.classList.remove('show');
            setTimeout(() => {
              toast.remove();
            }, 300);
          });
          
          // Auto remove after duration
          setTimeout(() => {
            if (toast.parentNode) {
              toast.classList.remove('show');
              setTimeout(() => {
                toast.remove();
              }, 300);
            }
          }, duration);
        }
        
        // Loading overlay
        const loadingOverlay = document.getElementById('loadingOverlay');
        
        function showLoading() {
          loadingOverlay.classList.add('active');
        }
        
        function hideLoading() {
          loadingOverlay.classList.remove('active');
        }
        
        // Quick amount selection
        const amountOptions = document.querySelectorAll('.amount-option');
        const amountInput = document.getElementById('amount');
        
        amountOptions.forEach(option => {
          option.addEventListener('click', function() {
            const amount = this.getAttribute('data-amount');
            amountInput.value = amount;
            
            // Remove active class from all options
            amountOptions.forEach(opt => opt.classList.remove('active'));
            
            // Add active class to selected option
            this.classList.add('active');
            
            // Add ripple effect
            createRippleEffect(event);
          });
        });
        
        // Add money form submission
        const addMoneyForm = document.getElementById('addMoneyForm');
        const addMoneyBtn = document.getElementById('addMoneyBtn');
        const addMoneyModal = new bootstrap.Modal(document.getElementById('addMoneyModal'));
        
        addMoneyForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const amount = document.getElementById('amount').value;
          const description = document.getElementById('description').value;
          const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
          
          // Validate amount
          if (amount <= 0) {
            showToast('Invalid Amount', 'Please enter a valid amount greater than 0', 'error');
            return;
          }
          
          // Show loading state
          addMoneyBtn.disabled = true;
          addMoneyBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
          
          try {
            showLoading();
            
            const response = await fetch('/wallet/credit', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ 
                amount, 
                description,
                paymentMethod
              })
            });
            
            const result = await response.json();
            
            hideLoading();
            addMoneyModal.hide();
            
            if (result.success) {
              showToast('Transaction Successful', `₹${amount} has been added to your wallet successfully!`, 'success');
              
              // Reload the page after a short delay
              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } else {
              showToast('Transaction Failed', result.message || 'Failed to add money to your wallet', 'error');
              
              // Reset button state
              addMoneyBtn.disabled = false;
              addMoneyBtn.innerHTML = '<span class="btn-text">Add Money</span><span class="btn-icon"><i class="fas fa-arrow-right"></i></span>';
            }
          } catch (error) {
            console.error('Error adding money:', error);
            
            hideLoading();
            addMoneyModal.hide();
            
            showToast('Error', 'An unexpected error occurred. Please try again later.', 'error');
            
            // Reset button state
            addMoneyBtn.disabled = false;
            addMoneyBtn.innerHTML = '<span class="btn-text">Add Money</span><span class="btn-icon"><i class="fas fa-arrow-right"></i></span>';
          }
        });
        
        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            if (targetElement) {
              window.scrollTo({
                top: targetElement.offsetTop - 100,
                behavior: 'smooth'
              });
            }
          });
        });
        
        // Add animation classes on page load
        const balanceCard = document.querySelector('.balance-card');
        const statCards = document.querySelectorAll('.stat-card');
        const transactionItems = document.querySelectorAll('.transaction-item');
        
        if (balanceCard) {
          balanceCard.classList.add('fade-in');
        }
        
        statCards.forEach((card, index) => {
          card.style.animationDelay = `${0.2 + (index * 0.1)}s`;
          card.classList.add('fade-in');
        });
        
        transactionItems.forEach((item, index) => {
          item.style.animationDelay = `${0.4 + (index * 0.1)}s`;
          item.classList.add('fade-in');
        });
        
        // Ripple effect function
        function createRippleEffect(event) {
          const button = event.currentTarget;
          const ripple = document.createElement('span');
          ripple.classList.add('ripple');
          
          const rect = button.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height) * 2;
          const x = event.clientX - rect.left - (size / 2);
          const y = event.clientY - rect.top - (size / 2);
          
          ripple.style.width = ripple.style.height = `${size}px`;
          ripple.style.left = `${x}px`;
          ripple.style.top = `${y}px`;
          
          button.appendChild(ripple);
          
          setTimeout(() => {
            ripple.remove();
          }, 600);
        }
        
        // Add ripple effect to buttons
        document.querySelectorAll('.btn-add-money, .btn-submit, .amount-option, .btn-primary').forEach(button => {
          button.addEventListener('mousedown', createRippleEffect);
        });
        
        // Show welcome toast on page load
        setTimeout(() => {
          showToast('Welcome to Your Wallet', 'Manage your funds and track your transactions easily', 'info');
        }, 1000);
      });
    </script>
  </body>
</html>
