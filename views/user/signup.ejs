<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <link rel="stylesheet" href="/css/signup.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        html, body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 15px;
            box-sizing: border-box;
        }
        .signup-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            padding: 25px;
            width: 100%;
            max-width: 420px; /* Reduced from 500px */
            margin: auto;
        }
        h1 {
            text-align: center;
            margin-bottom: 20px; /* Reduced from 30px */
            color: #333;
            font-weight: 600;
            font-size: 24px; /* Reduced from default */
        }
        .form-group {
            margin-bottom: 15px; /* Reduced from 20px */
        }
        label {
            display: block;
            margin-bottom: 5px; /* Reduced from 8px */
            font-weight: 500;
            color: #555;
            font-size: 14px; /* Reduced from default */
        }
        .input-wrapper {
            position: relative;
        }
        input {
            width: 100%;
            padding: 10px 12px; /* Reduced from 12px 15px */
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px; /* Reduced from 16px */
            transition: border-color 0.3s;
        }
        input:focus {
            border-color:rgb(0, 2, 3);
            outline: none;
        }
        .icon {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #777;
            width: 14px; /* Reduced from 16px */
            height: 14px; /* Reduced from 16px */
        }
        .signup-button {
            width: 100%;
            padding: 10px; /* Reduced from 12px */
            background-color:rgb(0, 1, 2);
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 15px; /* Reduced from 16px */
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-top: 8px; /* Reduced from 10px */
        }
        .signup-button:hover {
            background-color:rgb(0, 0, 0);
        }
        .login-text {
            text-align: center;
            margin-top: 15px; /* Reduced from 20px */
            color: #666;
            font-size: 13px; /* Reduced from default */
        }
        .login-text a {
            color:rgb(0, 0, 0);
            text-decoration: none;
        }
        .login-text a:hover {
            text-decoration: underline;
        }
        .divider {
            display: flex;
            align-items: center;
            margin: 20px 0; /* Reduced from 30px 0 */
        }
        .divider::before, .divider::after {
            content: "";
            flex: 1;
            border-bottom: 1px solid #ddd;
        }
        .divider span {
            padding: 0 8px; /* Reduced from 10px */
            color: #777;
            font-size: 13px; /* Reduced from 14px */
        }
        .google-button {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            padding: 10px; /* Reduced from 12px */
            background-color: white;
            color: #333;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px; /* Reduced from 16px */
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.3s;
            text-decoration: none;
        }
        .google-button:hover {
            background-color: #f1f1f1;
        }
        .google-icon {
            margin-right: 8px; /* Reduced from 10px */
            width: 16px; /* Reduced from 18px */
            height: 16px; /* Reduced from 18px */
        }
        .error-message {
            color: #dc3545;
            font-size: 12px; /* Reduced from 14px */
            margin-top: 3px; /* Reduced from 5px */
            display: none;
        }
        .referral-section {
            text-align: center;
            margin-bottom: 15px; /* Reduced from 20px */
            font-size: 13px; /* Reduced from default */
        }
        .referral-btn {
            background-color:rgb(0, 0, 0);
            color: white;
            border: none;
            padding: 8px 16px; /* Reduced from 10px 20px */
            border-radius: 5px;
            font-size: 14px; /* Reduced from 16px */
            cursor: pointer;
        }
        .referral-btn:hover {
            background-color:rgb(0, 0, 0);
        }
        .referral-applied {
            color: #28a745;
            font-size: 12px; /* Reduced from 14px */
            margin-top: 8px; /* Reduced from 10px */
        }
        input.error {
            border-color: #dc3545;
        }
        @media (max-height: 700px) {
            body {
                align-items: flex-start;
                padding-top: 30px;
                padding-bottom: 30px;
            }
        }
    </style>
</head>
<body>
    <form class="signup-container" id="signupForm" method="post" action="/signup">
        <h1>Sign up</h1>

        <% if (typeof message !== 'undefined' && message) { %>
            <div class="alert alert-danger text-center">
                <%= message %>
            </div>
        <% } %>

        <div class="form-group">
            <label for="fullname">Full Name</label>
            <div class="input-wrapper">
                <input type="text" id="fullname" name="fullname" placeholder="Enter your full name" value="<%= typeof formData !== 'undefined' && formData ? formData.fullname : '' %>" >
                <div id="error1" class="error-message"></div>
            </div>
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <div class="input-wrapper">
                <input type="email" id="email" name="email" placeholder="Enter your email" value="<%= typeof formData !== 'undefined' && formData ? formData.email : '' %>" >
                <div id="error2" class="error-message"></div>
            </div>
        </div>

        <div class="form-group">
            <label for="mobile">Mobile Number</label>
            <div class="input-wrapper">
                <input type="tel" id="mobile" name="mobile" placeholder="Enter your mobile number" value="<%= typeof formData !== 'undefined' && formData ? formData.mobile : '' %>" >
                <div id="error3" class="error-message"></div>
            </div>
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <div class="input-wrapper">
                <input type="password" id="password" name="password" placeholder="Enter your password" >
                <div id="error4" class="error-message"></div>
                <svg class="icon toggle-password" data-target="password" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                    <circle cx="12" cy="12" r="3"></circle>
                </svg>
            </div>
        </div>

        <div class="form-group">
            <label for="cpassword">Confirm Password</label>
            <div class="input-wrapper">
                <input type="password" id="cpassword" name="cpassword" placeholder="Confirm your password" >
                <div id="error5" class="error-message"></div>
                <svg class="icon toggle-password" data-target="cpassword" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                    <circle cx="12" cy="12" r="3"></circle>
                </svg>
            </div>
        </div>

        <div class="referral-section">
            <p>Have a referral code? Claim your reward!</p>
            <button type="button" class="referral-btn" id="referralBtn">Enter Referral Code</button>
            <input type="hidden" id="referralCode" name="referralCode" value="<%= typeof referralCode !== 'undefined' && referralCode ? referralCode : '' %>">
            <% if (typeof referralCode !== 'undefined' && referralCode) { %>
                <p class="referral-applied">Referral code <%= referralCode %> applied!</p>
            <% } %>
        </div>

        <p class="login-text">Already have an account? <a href="/login">Log in</a></p>

        <button type="submit" class="signup-button">Sign Up</button>

        <div class="divider">
            <span>Or Register with</span>
        </div>

        <a href="/auth/google" class="google-button">
            <svg class="google-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 186.69 190.5">
                <g transform="translate(1184.583 765.171)">
                    <path d="M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z" fill="#4285f4" />
                    <path d="M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z" fill="#34a853" />
                    <path d="M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z" fill="#fbbc05" />
                    <path d="M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z" fill="#ea4335" />
                </g>
            </svg>
            Google
        </a>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const signupForm = document.getElementById('signupForm');
            const fullnameInput = document.getElementById('fullname');
            const emailInput = document.getElementById('email');
            const mobileInput = document.getElementById('mobile');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById("cpassword");
            const referralBtn = document.getElementById('referralBtn');
            
            const formInputs = [fullnameInput, emailInput, mobileInput, passwordInput, confirmPasswordInput];

            const errorElements = {
                name: document.getElementById('error1'),
                email: document.getElementById('error2'),
                mobile: document.getElementById('error3'),
                password: document.getElementById('error4'),
                confirm: document.getElementById('error5')
            };

            // Toggle password visibility
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function () {
                    const targetId = this.getAttribute('data-target');
                    const passwordField = document.getElementById(targetId);
                    passwordField.type = passwordField.type === 'password' ? 'text' : 'password';
                });
            });

            // Form submission validation
            signupForm.addEventListener("submit", function (event) {
                if (!validateForm()) {
                    event.preventDefault();
                } else {
                    // Clear stored form data on successful submission
                    sessionStorage.removeItem('signupFormData');
                }
            });

            // Field validation on blur
            formInputs.forEach(input => {
                let modified = false;
                
                input.addEventListener('input', function() {
                    modified = true;
                });
                
                input.addEventListener('blur', function() {
                    if (modified) {
                        validateField(this);
                    }
                });
            });

            // Save form data and redirect to referral page
            referralBtn.addEventListener('click', function() {
                // Save form data to sessionStorage
                const formData = {
                    fullname: fullnameInput.value,
                    email: emailInput.value,
                    mobile: mobileInput.value,
                    password: passwordInput.value,
                    cpassword: confirmPasswordInput.value
                };
                
                // Store form data in sessionStorage
                sessionStorage.setItem('signupFormData', JSON.stringify(formData));
                
                // Redirect to referral page
                window.location.href = '/referralSpace';
            });

            // Check for stored form data when page loads
            const savedFormData = sessionStorage.getItem('signupFormData');
            if (savedFormData) {
                const formData = JSON.parse(savedFormData);
                
                // Populate form fields with saved data
                fullnameInput.value = formData.fullname || '';
                emailInput.value = formData.email || '';
                mobileInput.value = formData.mobile || '';
                passwordInput.value = formData.password || '';
                confirmPasswordInput.value = formData.cpassword || '';
            }

            // Check for referral code in URL parameters
            const urlParams = new URLSearchParams(window.location.search);
            const referralParam = urlParams.get('referral');
            
            if (referralParam) {
                // Update the hidden referral code input
                document.getElementById('referralCode').value = referralParam;
                
                // Show the "referral applied" message if it doesn't already exist
                const referralSection = document.querySelector('.referral-section');
                if (!referralSection.querySelector('.referral-applied')) {
                    const appliedMsg = document.createElement('p');
                    appliedMsg.className = 'referral-applied';
                    appliedMsg.textContent = `Referral code ${referralParam} applied!`;
                    referralSection.appendChild(appliedMsg);
                }
            }

            function validateField(field) {
                switch(field.id) {
                    case 'fullname':
                        validateName();
                        break;
                    case 'email':
                        validateEmail();
                        break;
                    case 'mobile':
                        validateMobile();
                        break;
                    case 'password':
                        validatePassword();
                        break;
                    case 'cpassword':
                        validatePasswordMatch();
                        break;
                }
            }

            function validateForm() {
                const isNameValid = validateName();
                const isEmailValid = validateEmail();
                const isMobileValid = validateMobile();
                const isPasswordValid = validatePassword();
                const isPasswordMatchValid = validatePasswordMatch();

                return isNameValid && isEmailValid && isMobileValid &&
                       isPasswordValid && isPasswordMatchValid;
            }

            function validateName() {
                const nameValue = fullnameInput.value.trim();
                const namePattern = /^[A-Za-z\s]+$/;

                if (nameValue === "") {
                    showError(fullnameInput, errorElements.name, "Please enter your full name");
                    return false;
                } else if (!namePattern.test(nameValue)) {
                    showError(fullnameInput, errorElements.name, "Name can only contain alphabets and spaces");
                    return false;
                } else {
                    hideError(fullnameInput, errorElements.name);
                    return true;
                }
            }

            function validateEmail() {
                const emailValue = emailInput.value.trim();
                const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

                if (emailValue === "") {
                    showError(emailInput, errorElements.email, "Please enter an email address");
                    return false;
                } else if (!emailPattern.test(emailValue)) {
                    showError(emailInput, errorElements.email, "Enter a valid email (example@mail.com)");
                    return false;
                } else {
                    hideError(emailInput, errorElements.email);
                    return true;
                }
            }

            function validateMobile() {
                const mobileValue = mobileInput.value.trim();
                const mobilePattern = /^[0-9]{10,12}$/;

                if (mobileValue === "") {
                    showError(mobileInput, errorElements.mobile, "Please enter a mobile number");
                    return false;
                } else if (!mobilePattern.test(mobileValue)) {
                    showError(mobileInput, errorElements.mobile, "Enter a valid mobile number (10-12 digits)");
                    return false;
                } else {
                    hideError(mobileInput, errorElements.mobile);
                    return true;
                }
            }

            function validatePassword() {
                const passwordValue = passwordInput.value;

                if (passwordValue === "") {
                    showError(passwordInput, errorElements.password, "Please enter a password");
                    return false;
                } else if (passwordValue.length < 8) {
                    showError(passwordInput, errorElements.password, "Password must be at least 8 characters");
                    return false;
                } else {
                    hideError(passwordInput, errorElements.password);
                
                    if (confirmPasswordInput.value !== "") {
                        validatePasswordMatch();
                    }
                    return true;
                }
            }

            function validatePasswordMatch() {
                const passwordValue = passwordInput.value;
                const confirmValue = confirmPasswordInput.value;

                if (confirmValue === "") {
                    showError(confirmPasswordInput, errorElements.confirm, "Please confirm your password");
                    return false;
                } else if (passwordValue !== confirmValue) {
                    showError(confirmPasswordInput, errorElements.confirm, "Passwords do not match");
                    return false;
                } else {
                    hideError(confirmPasswordInput, errorElements.confirm);
                    return true;
                }
            }

            function showError(inputElement, errorElement, message) {
                inputElement.classList.add('error');
                errorElement.style.display = "block";
                errorElement.textContent = message;
            }

            function hideError(inputElement, errorElement) {
                inputElement.classList.remove('error');
                errorElement.style.display = "none";
                errorElement.textContent = "";
            }
        });
    </script>
</body>
</html>