<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Elite Wear - Checkout</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/userStyle/checkOut.css">
</head>
<body>
    <%- include("../partials/user/header") %>

    <div class="overlay" id="overlay"></div>
    <div class="coupon-overlay" id="couponOverlay"></div>

    <!-- Order Summary Sidebar -->
    <div class="order-summary-sidebar" id="orderSummarySidebar">
        <div class="sidebar-close" id="closeSidebar">
            <i class="fas fa-times"></i>
        </div>
        <div class="sidebar-header">
            ORDER SUMMARY
        </div>
        <div class="order-items">
            <% cartItems.forEach(item => { %>
                <div class="order-item">
                    <div class="order-item-image">
                        <img src="<%= item.productId.images[0]?.url || '/api/placeholder/60/60' %>" alt="<%= item.productId.name %>" style="background-color: #e0e0e0;">
                    </div>
                    <div class="order-item-details">
                        <div class="order-item-name"><%= item.productId.name %></div>
                        <div class="order-item-qty">Qty: <%= item.quantity %></div>
                    </div>
                    <div class="order-item-price">
                        ₹<%= (item.productId.variants.find(v => v.size === item.size)?.salePrice || 0) * item.quantity %>
                    </div>
                </div>
            <% }); %>
        </div>
        <div class="subtotal-section">
            <div class="price-row">
                <div>Subtotal (incl. of taxes)</div>
                <div>₹<%= totalPrice.toFixed(2) %></div>
            </div>
            <div class="price-row">
                <div>Delivery charge</div>
                <div><%= deliveryCharge === 0 ? 'FREE' : '₹' + deliveryCharge.toFixed(2) %></div>
            </div>
            <% if (discount > 0 && appliedCoupon) { %>
                <div class="price-row">
                    <div>Coupon Discount (<%= appliedCoupon.code %>)</div>
                    <div>-₹<%= discount.toFixed(2) %></div>
                </div>
            <% } %>
            <div class="divider"></div>
            <div class="price-row grand-total">
                <div>Grand Total</div>
                <div>₹<%= grandTotal.toFixed(2) %></div>
            </div>
        </div>
    </div>

    <!-- Coupon Sidebar -->
    <div class="coupon-sidebar" id="couponSidebar">
        <div class="coupon-sidebar-close" id="closeCouponSidebar">
            <i class="fas fa-times"></i>
        </div>
        <div class="coupon-sidebar-header">
            APPLY COUPON
        </div>
        <div class="coupon-input-group">
            <input type="text" placeholder="Enter coupon code" id="couponCodeInput">
            <button class="apply-btn" onclick="applyCoupon()">APPLY</button>
        </div>
        <div class="available-coupons-title">AVAILABLE COUPONS</div>
        <div class="coupon-list" id="couponList">
            <!-- Coupons will be populated by JavaScript -->
        </div>
        <div id="couponError" class="text-danger mt-2" style="display: none;"></div>
    </div>

    <div class="main-container">
        <div class="row g-4 mt-3">
            <div class="col-lg-5 mb-4">
                <div class="checkout-card order-summary">
                    <div class="arrow-button" id="openSidebar">
                        <i class="fas fa-chevron-right"></i>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Order summary • <%= cartItems.length %> items</h5>
                        <div class="text-end">
                            <div class="order-number">#<%= orderNumber %></div>
                            <div class="order-price">₹<%= totalPrice.toFixed(2) %></div>
                        </div>
                    </div>
                    <div class="item-thumbnails">
                        <% cartItems.forEach(item => { %>
                            <div class="item-thumbnail bg-light">
                                <img src="<%= item.productId.images[0]?.url || '/api/placeholder/50/50' %>" alt="<%= item.productId.name %>" class="w-100 h-100 object-fit-cover" style="background-color: #e0e0e0;">
                            </div>
                        <% }); %>
                    </div>
                    <div class="coupon-applied">
                        <% if (appliedCoupon) { %>
                            <span class="coupon-Code"><strong><%= appliedCoupon.code %> APPLIED</strong> <button class="btn btn-sm text-danger p-0 ms-2" onclick="removeCoupon()">Remove</button></span>
                        <% } else { %>
                            <button class="coupon-toggle-btn" id="openCouponSidebar">
                                <strong>APPLY COUPON</strong>
                                <i class="fas fa-tag ms-1"></i>
                            </button>
                        <% } %>
                    </div>
                    <div class="brand-image-container mt-4">
                        <img src="/Uploads/ChatGPT Image Apr 13, 2025, 06_50_48 PM.png" alt="ELITE WEAR Brand" class="img-fluid brand-logo">
                    </div>
                </div>
            </div>
            <div class="col-lg-7 delivery-section">
                <h5 class="mb-4">CHOOSE DELIVERY POINT</h5>
                <div class="row g-3">
                    <% addresses.forEach(addr => { %>
                        <div class="col-md-6 mb-3">
                            <div class="address-card">
                                <a href="/getaddress-edit/<%= addr._id %>" class="edit-icon"><i class="fas fa-pencil-alt"></i></a>
                                <h6 class="address-name"><%= addr.name || addr.fullname %></h6>
                                <p class="address-details mb-3">
                                    <%= addr.address || 'No address' %><br>
                                    <%= addr.landmark || '' %>,
                                    <%= addr.city || 'N/A' %>, <br>
                                    <%= addr.district || '' %>
                                    <%= addr.pincode || 'N/A' %><br>
                                    <%= addr.state || 'N/A' %>, <%= addr.country || '' %>
                                </p>
                                <button class="deliver-btn" onclick="selectAddress('<%= addr._id %>')">DELIVER HERE</button>
                            </div>
                        </div>
                    <% }); %>
                    <div class="col-md-6 mb-3">
                        <div class="add-address">
                            <div class="text-center">
                                <div class="mb-2">
                                    <i class="fas fa-plus-circle fa-2x"></i>
                                </div>
                                <div><a href="/getaddAddress">Add new Address</a></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
   <!-- Keep the HTML part of your file unchanged -->

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOMContentLoaded fired');

        // Order Summary Sidebar
        const openSidebar = document.getElementById('openSidebar');
        const closeSidebar = document.getElementById('closeSidebar');
        const sidebar = document.getElementById('orderSummarySidebar');
        const overlay = document.getElementById('overlay');

        if (openSidebar && sidebar && overlay) {
            console.log('openSidebar found:', openSidebar);
            openSidebar.addEventListener('click', function() {
                console.log('openSidebar clicked');
                sidebar.classList.add('active');
                overlay.classList.add('active');
                document.body.style.overflow = 'hidden';
            });
        } else {
            console.error('Order summary sidebar elements missing:', { openSidebar, sidebar, overlay });
        }

        if (closeSidebar && sidebar && overlay) {
            closeSidebar.addEventListener('click', function() {
                sidebar.classList.remove('active');
                overlay.classList.remove('active');
                document.body.style.overflow = 'auto';
            });
        }

        if (overlay && sidebar) {
            overlay.addEventListener('click', function() {
                sidebar.classList.remove('active');
                overlay.classList.remove('active');
                document.body.style.overflow = 'auto';
            });
        }

        // Coupon Sidebar
        const openCouponSidebar = document.getElementById('openCouponSidebar');
        const closeCouponSidebar = document.getElementById('closeCouponSidebar');
        const couponSidebar = document.getElementById('couponSidebar');
        const couponOverlay = document.getElementById('couponOverlay');
        const couponError = document.getElementById('couponError');
        
        // Fix: Properly get the totalPrice from EJS
        const totalPrice = <%= totalPrice %>;
        console.log('Total price:', totalPrice);

        if (openCouponSidebar && couponSidebar && couponOverlay) {
            console.log('openCouponSidebar found:', openCouponSidebar);
            openCouponSidebar.addEventListener('click', function() {
                console.log('openCouponSidebar clicked');
                couponSidebar.classList.add('active');
                couponOverlay.classList.add('active');
                document.body.style.overflow = 'hidden';
                fetchCoupons();
            });
        } else {
            console.log('openCouponSidebar not found, likely because a coupon is applied');
        }

        if (closeCouponSidebar && couponSidebar && couponOverlay) {
            closeCouponSidebar.addEventListener('click', function() {
                couponSidebar.classList.remove('active');
                couponOverlay.classList.remove('active');
                document.body.style.overflow = 'auto';
                couponError.style.display = 'none';
            });
        }

        if (couponOverlay && couponSidebar) {
            couponOverlay.addEventListener('click', function() {
                couponSidebar.classList.remove('active');
                couponOverlay.classList.remove('active');
                document.body.style.overflow = 'auto';
                couponError.style.display = 'none';
            });
        }

        // Fix: Parse coupons from EJS - store in a variable that can be used later
        const ejsCoupons = <%- JSON.stringify(coupons || []) %>;
        console.log('EJS coupons:', ejsCoupons);
    });

    async function fetchCoupons() {
        try {
            console.log('Fetching coupons from /coupons');
            const response = await fetch('/coupons');
            const result = await response.json();
            console.log('Fetched coupons response:', result);
            
            if (result.success) {
                renderCoupons(result.coupons);
                document.getElementById('couponError').style.display = 'none';
            } else {
                console.log('Fetch failed, using EJS coupons');
                // Fix: Use the ejsCoupons variable defined in the DOMContentLoaded event
                const ejsCoupons = <%- JSON.stringify(coupons || []) %>;
                renderCoupons(ejsCoupons); // Fallback to EJS coupons
                const couponError = document.getElementById('couponError');
                couponError.textContent = 'Failed to load coupons from server, showing available coupons';
                couponError.style.display = 'block';
            }
        } catch (error) {
            console.error('Error fetching coupons:', error);
            console.log('Fetch error, using EJS coupons');
            // Fix: Use the ejsCoupons variable defined in the DOMContentLoaded event
            const ejsCoupons = <%- JSON.stringify(coupons || []) %>;
            renderCoupons(ejsCoupons); // Fallback to EJS coupons
            const couponError = document.getElementById('couponError');
            couponError.textContent = 'Server error while loading coupons, showing available coupons';
            couponError.style.display = 'block';
        }
    }

    function renderCoupons(coupons) {
        console.log('Rendering coupons:', coupons);
        const couponList = document.getElementById('couponList');
        couponList.innerHTML = '';
        
        if (!coupons || coupons.length === 0) {
            couponList.innerHTML = '<p>No coupons available</p>';
            return;
        }
        
        // Fix: Use the totalPrice variable defined in the DOMContentLoaded event
        const totalPrice = <%= totalPrice %>;
        
        coupons.forEach(coupon => {
            const isEligible = coupon.minimumPurchase <= totalPrice;
            const couponItem = document.createElement('div');
            couponItem.className = 'coupon-item';
            couponItem.innerHTML = `
                <div class="coupon-code">${coupon.coupencode}</div>
                <div class="coupon-status status-${isEligible ? 'available' : 'unavailable'}">${isEligible ? 'Available' : 'Unavailable'}</div>
                <div class="coupon-offer">${coupon.couponpercent}% off entire order</div>
                <div class="coupon-min-purchase">Minimum purchase of ₹${coupon.minimumPurchase.toFixed(2)}</div>
                <div class="coupon-expiry">Expiry date: ${new Date(coupon.expiryDate).toLocaleDateString()}</div>
                <button class="coupon-apply-btn" data-coupon="${coupon.coupencode}" onclick="applyCoupon('${coupon.coupencode}')" ${isEligible ? '' : 'disabled'}>APPLY</button>
                ${!isEligible ? '<p class="text-danger mt-1">Add ₹' + (coupon.minimumPurchase - totalPrice).toFixed(2) + ' more to use this coupon</p>' : ''}
            `;
            couponList.appendChild(couponItem);
        });
    }

    async function applyCoupon(couponCode) {
        try {
            if (!couponCode) {
                couponCode = document.getElementById('couponCodeInput').value.trim();
            }
            
            if (!couponCode) {
                alert('Please enter a coupon code');
                return;
            }

            console.log('Applying coupon:', couponCode);
            
            // Show loading state
            const applyBtn = document.querySelector('.apply-btn');
            if (applyBtn) {
                applyBtn.disabled = true;
                applyBtn.textContent = 'Applying...';
            }
            
            const response = await fetch('/apply-coupon', {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode })
            });
            
            const result = await response.json();
            console.log('Apply coupon response:', result);
            
            if (result.success) {
                // Update the UI to show the applied coupon
                alert('Coupon applied successfully!');
                
                // Reload the page to reflect changes
                window.location.reload();
            } else {
                alert(result.message || 'Failed to apply coupon');
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            alert('Error applying coupon. Please try again.');
        } finally {
            // Reset loading state
            const applyBtn = document.querySelector('.apply-btn');
            if (applyBtn) {
                applyBtn.disabled = false;
                applyBtn.textContent = 'Apply';
            }
        }
    }

    async function removeCoupon() {
        try {
            console.log('Removing coupon');
            const response = await fetch('/remove-coupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            });
            
            const result = await response.json();
            console.log('Remove coupon response:', result);
            
            if (result.success) {
                alert('Coupon removed successfully!');
                window.location.reload();
            } else {
                alert(result.message || 'Failed to remove coupon');
            }
        } catch (error) {
            console.error('Error removing coupon:', error);
            alert('Server error while removing coupon');
        }
    }

    function selectAddress(addressId) {
        console.log('Selecting address:', addressId);
        fetch('/select-delivery-address', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ addressId }),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Select address response:', data);
            if (data.success) {
                window.location.href = '/checkout-payment';
            } else {
                alert(data.message || 'Failed to select address');
            }
        })
        .catch(error => {
            console.error('Error selecting address:', error);
            alert('Server issue');
        });
    }
</script>

</body>
</html>
