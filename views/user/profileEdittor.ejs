<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Elite Wear | Edit Profile</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- SweetAlert2 -->
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css" rel="stylesheet" />
  <!-- Header & Footer CSS -->
  <link rel="stylesheet" href="/userStyle/header.css">
  <link rel="stylesheet" href="/userStyle/footer.css">
  <style>
    :root {
      --primary-color: #0f172a;
      --secondary-color: #f8fafc;
      --accent-color: #3b82f6;
      --accent-hover: #2563eb;
      --accent-secondary: #8b5cf6;
      --accent-tertiary: #ec4899;
      --text-primary: #1e293b;
      --text-secondary: #64748b;
      --text-light: #94a3b8;
      --border-color: #e2e8f0;
      --card-bg: #ffffff;
      --sidebar-bg: #ffffff;
      --input-bg: #f8fafc;
      --input-border: #e2e8f0;
      --input-focus-border: #3b82f6;
      --input-focus-shadow: rgba(59, 130, 246, 0.1);
      --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.05);
      --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.1);
      --gradient-primary: linear-gradient(135deg, #3b82f6, #8b5cf6);
      --gradient-secondary: linear-gradient(135deg, #8b5cf6, #ec4899);
      --gradient-accent: linear-gradient(135deg, #3b82f6, #10b981);
      --success-color: #10b981;
      --error-color: #ef4444;
      --warning-color: #f59e0b;
      --transition-fast: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      --border-radius-sm: 0.375rem;
      --border-radius: 0.5rem;
      --border-radius-lg: 0.75rem;
      --border-radius-xl: 1rem;
      --border-radius-full: 9999px;
      --font-primary: 'Outfit', sans-serif;
      --font-secondary: 'Playfair Display', serif;
      --menu-item-hover: rgba(59, 130, 246, 0.05);
      --menu-item-active: rgba(59, 130, 246, 0.1);
      --menu-item-active-border: var(--gradient-primary);
      --logout-hover: rgba(239, 68, 68, 0.05);
      --toggle-bg: #f1f5f9;
      --toggle-circle: #ffffff;
      --btn-primary-bg: var(--gradient-primary);
      --btn-primary-hover-bg: var(--gradient-secondary);
      --btn-primary-text: #ffffff;
      --btn-secondary-bg: #f1f5f9;
      --btn-secondary-text: #1e293b;
      --btn-secondary-hover-bg: #e2e8f0;
    }

    /* Dark mode variables */
    [data-theme="dark"] {
      --primary-color: #f8fafc;
      --secondary-color: #0f172a;
      --text-primary: #f1f5f9;
      --text-secondary: #cbd5e1;
      --text-light: #94a3b8;
      --border-color: #334155;
      --card-bg: #1e293b;
      --sidebar-bg: #0f172a;
      --input-bg: #1e293b;
      --input-border: #334155;
      --input-focus-border: #3b82f6;
      --input-focus-shadow: rgba(59, 130, 246, 0.2);
      --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
      --card-hover-shadow: 0 20px 35px -10px rgba(0, 0, 0, 0.3);
      --menu-item-hover: rgba(59, 130, 246, 0.15);
      --menu-item-active: rgba(59, 130, 246, 0.2);
      --logout-hover: rgba(239, 68, 68, 0.15);
      --toggle-bg: #334155;
      --toggle-circle: #0f172a;
      --btn-secondary-bg: #334155;
      --btn-secondary-text: #f1f5f9;
      --btn-secondary-hover-bg: #475569;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: var(--font-primary);
      color: var(--text-primary);
      background-color: var(--secondary-color);
      overflow-x: hidden;
      transition: background-color var(--transition-normal), color var(--transition-normal);
    }

    /* Scrollbar styling */
    ::-webkit-scrollbar {
      width: 6px;
      height: 6px;
    }

    ::-webkit-scrollbar-track {
      background: var(--secondary-color);
    }

    ::-webkit-scrollbar-thumb {
      background: var(--text-light);
      border-radius: var(--border-radius-full);
    }

    ::-webkit-scrollbar-thumb:hover {
      background: var(--text-secondary);
    }

    /* Main Container */
    .main-container {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .content-wrapper {
      flex: 1;
      display: flex;
      position: relative;
    }

    /* Sidebar Toggle Button */
    .sidebar-toggle {
      position: fixed;
      top: 1rem;
      left: 1rem;
      z-index: 1050;
      width: 40px;
      height: 40px;
      border-radius: var(--border-radius-full);
      background: var(--card-bg);
      color: var(--text-primary);
      border: none;
      box-shadow: var(--card-shadow);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all var(--transition-normal);
    }

    .sidebar-toggle:hover {
      background: var(--accent-color);
      color: white;
      transform: scale(1.05);
    }

    /* Sidebar (included for reference, actual sidebar is in a separate file) */
    .sidebar {
      width: 280px;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background-color: var(--sidebar-bg);
      box-shadow: var(--card-shadow);
      z-index: 1040;
      transition: transform var(--transition-normal), box-shadow var(--transition-normal), background-color var(--transition-normal);
      display: flex;
      flex-direction: column;
      overflow-y: auto;
      transform: translateX(-100%);
      border-right: 1px solid var(--border-color);
    }

    .sidebar.show {
      transform: translateX(0);
    }

    @media (min-width: 768px) {
      .sidebar {
        transform: translateX(0);
      }
      
      .sidebar-toggle {
        display: none;
      }
    }

    /* Main Content */
    .main-content {
      flex: 1;
      padding: 2rem;
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      margin-left: 280px;
    }

    .main-content::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%233b82f6' fill-opacity='0.03' fill-rule='evenodd'/%3E%3C/svg%3E");
      opacity: 0.5;
      z-index: -1;
    }

    @media (max-width: 767px) {
      .main-content {
        margin-left: 0;
        padding-top: 4rem;
      }
    }

    /* Page Title */
    .page-title-container {
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
      border-radius: var(--border-radius-lg);
      background: var(--gradient-primary);
      padding: 2rem;
      box-shadow: var(--card-shadow);
    }

    .page-title {
      font-family: var(--font-secondary);
      font-weight: 600;
      font-size: 1.75rem;
      color: white;
      margin-bottom: 0.5rem;
      position: relative;
      z-index: 2;
    }

    .page-subtitle {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1rem;
      margin-bottom: 0;
      position: relative;
      z-index: 2;
    }

    .page-title-container::before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 150px;
      height: 150px;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255, 255, 255, 0.15)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'%3E%3C/path%3E%3Ccircle cx='12' cy='7' r='4'%3E%3C/circle%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-size: contain;
      opacity: 0.5;
      z-index: 1;
    }

    /* Form Styles */
    .profile-form-container {
      background-color: var(--card-bg);
      border-radius: var(--border-radius-lg);
      box-shadow: var(--card-shadow);
      padding: 2rem;
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
      transition: all var(--transition-normal);
    }

    .profile-form-container:hover {
      box-shadow: var(--card-hover-shadow);
      transform: translateY(-5px);
    }

    .form-section {
      margin-bottom: 2rem;
      position: relative;
    }

    .form-section-title {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1.25rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid var(--border-color);
      color: var(--text-primary);
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .form-section-title i {
      color: var(--accent-color);
    }

    .form-label {
      display: block;
      margin-bottom: 0.5rem;
      font-size: 0.875rem;
      font-weight: 500;
      color: var(--text-secondary);
    }

    .form-control {
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 0.95rem;
      line-height: 1.5;
      color: var(--text-primary);
      background-color: var(--input-bg);
      border: 1px solid var(--input-border);
      border-radius: var(--border-radius);
      transition: all var(--transition-normal);
    }

    .form-control:focus {
      border-color: var(--input-focus-border);
      box-shadow: 0 0 0 4px var(--input-focus-shadow);
      outline: none;
    }

    .form-control:disabled,
    .form-control[readonly] {
      background-color: rgba(var(--input-bg-rgb), 0.7);
      opacity: 0.7;
      cursor: not-allowed;
    }

    .form-control.is-invalid {
      border-color: var(--error-color);
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ef4444' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cline x1='12' y1='8' x2='12' y2='12'%3E%3C/line%3E%3Cline x1='12' y1='16' x2='12.01' y2='16'%3E%3C/line%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right calc(0.375em + 0.1875rem) center;
      background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
      padding-right: calc(1.5em + 0.75rem);
    }

    .form-control.is-invalid:focus {
      box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.1);
    }

    .invalid-feedback {
      display: none;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: var(--error-color);
    }

    .form-control.is-invalid ~ .invalid-feedback {
      display: block;
    }

    /* Button Styles */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-size: 0.95rem;
      font-weight: 500;
      line-height: 1.5;
      text-align: center;
      white-space: nowrap;
      vertical-align: middle;
      cursor: pointer;
      user-select: none;
      border: none;
      border-radius: var(--border-radius);
      transition: all var(--transition-normal);
      gap: 0.5rem;
      position: relative;
      overflow: hidden;
      z-index: 1;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.1);
      z-index: -1;
      transform: scaleX(0);
      transform-origin: right;
      transition: transform var(--transition-normal);
    }

    .btn:hover::before {
      transform: scaleX(1);
      transform-origin: left;
    }

    .btn-primary {
      background: var(--btn-primary-bg);
      color: var(--btn-primary-text);
    }

    .btn-primary:hover {
      box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
      transform: translateY(-2px);
      color: var(--btn-primary-text);
    }

    .btn-secondary {
      background-color: var(--btn-secondary-bg);
      color: var(--btn-secondary-text);
    }

    .btn-secondary:hover {
      background-color: var(--btn-secondary-hover-bg);
      transform: translateY(-2px);
    }

    .btn-otp {
      background: var(--gradient-accent);
      color: white;
      border-radius: var(--border-radius);
      padding: 0.75rem 1.5rem;
      font-weight: 500;
      transition: all var(--transition-normal);
      border: none;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .btn-otp:hover {
      box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
      transform: translateY(-2px);
    }

    .btn-otp:active {
      transform: translateY(0);
    }

    .btn-otp i {
      font-size: 0.9rem;
    }

    .btn-update {
      background: var(--gradient-primary);
      color: white;
      border-radius: var(--border-radius);
      padding: 0.75rem 2.5rem;
      font-weight: 500;
      transition: all var(--transition-normal);
      border: none;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      min-width: 180px;
    }

    .btn-update:hover {
      background: var(--gradient-secondary);
      box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
      transform: translateY(-2px);
    }

    .btn-update:active {
      transform: translateY(0);
    }

    .btn-update i {
      font-size: 0.9rem;
    }

    /* Alert Styles */
    .form-alert {
      padding: 1rem;
      border-radius: var(--border-radius);
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      animation: slideDown 0.3s ease forwards;
    }

    .alert-success {
      background-color: rgba(16, 185, 129, 0.1);
      border-left: 4px solid var(--success-color);
      color: var(--success-color);
    }

    .alert-danger {
      background-color: rgba(239, 68, 68, 0.1);
      border-left: 4px solid var(--error-color);
      color: var(--error-color);
    }

    .alert-info {
      background-color: rgba(59, 130, 246, 0.1);
      border-left: 4px solid var(--accent-color);
      color: var(--accent-color);
    }

    .alert-warning {
      background-color: rgba(245, 158, 11, 0.1);
      border-left: 4px solid var(--warning-color);
      color: var(--warning-color);
    }

    /* Change Password Link */
    .change-password-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--accent-color);
      text-decoration: none;
      font-weight: 500;
      margin-top: 1.5rem;
      transition: all var(--transition-normal);
      position: relative;
    }

    .change-password-link::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 100%;
      height: 2px;
      background: var(--gradient-primary);
      transform: scaleX(0);
      transform-origin: right;
      transition: transform var(--transition-normal);
    }

    .change-password-link:hover {
      color: var(--accent-hover);
    }

    .change-password-link:hover::after {
      transform: scaleX(1);
      transform-origin: left;
    }

    /* Theme Toggle */
    .theme-toggle {
      position: absolute;
      top: 1rem;
      right: 1rem;
      width: 48px;
      height: 24px;
      border-radius: var(--border-radius-full);
      background-color: var(--toggle-bg);
      cursor: pointer;
      transition: background-color var(--transition-normal);
      display: flex;
      align-items: center;
      padding: 0 4px;
      justify-content: space-between;
    }

    .theme-toggle .sun,
    .theme-toggle .moon {
      font-size: 12px;
      color: var(--text-primary);
      z-index: 1;
    }

    .theme-toggle .toggle-circle {
      position: absolute;
      top: 2px;
      left: 2px;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background-color: var(--toggle-circle);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      transition: transform var(--transition-normal);
    }

    [data-theme="dark"] .theme-toggle .toggle-circle {
      transform: translateX(24px);
    }

    /* Animation Keyframes */
    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    @keyframes slideInUp {
      from {
        transform: translateY(20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    @keyframes slideDown {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    @keyframes pulse {
      0% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
      }
      70% {
        box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
      }
      100% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
      }
    }

    /* Animation Classes */
    .animate-fadeIn {
      animation: fadeIn 0.5s ease forwards;
    }

    .animate-slideInUp {
      animation: slideInUp 0.5s ease forwards;
    }

    .animate-pulse {
      animation: pulse 2s infinite;
    }

    /* Animation Delays */
    .delay-100 {
      animation-delay: 0.1s;
    }

    .delay-200 {
      animation-delay: 0.2s;
    }

    .delay-300 {
      animation-delay: 0.3s;
    }

    .delay-400 {
      animation-delay: 0.4s;
    }

    /* Responsive Styles */
    @media (max-width: 991px) {
      .page-title {
        font-size: 1.5rem;
      }
    }

    @media (max-width: 767px) {
      .main-content {
        padding: 1.5rem;
        padding-top: 4rem;
      }

      .page-title-container {
        padding: 1.5rem;
      }

      .page-title {
        font-size: 1.35rem;
      }

      .profile-form-container {
        padding: 1.5rem;
      }

      .btn {
        padding: 0.6rem 1.25rem;
        font-size: 0.9rem;
      }
    }

    @media (max-width: 576px) {
      .main-content {
        padding: 1rem;
        padding-top: 4rem;
      }

      .page-title-container {
        padding: 1.25rem;
      }

      .page-title {
        font-size: 1.25rem;
      }

      .profile-form-container {
        padding: 1.25rem;
      }

      .form-section-title {
        font-size: 1rem;
      }

      .btn {
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
      }

      .btn-update {
        width: 100%;
      }
    }

    /* SweetAlert2 Custom Styles */
    .swal2-popup {
      font-family: var(--font-primary);
      border-radius: var(--border-radius-lg);
    }

    .swal2-title {
      font-family: var(--font-secondary);
      font-weight: 600;
    }

    .swal2-confirm {
      background: var(--gradient-primary) !important;
      border-radius: var(--border-radius) !important;
    }

    .swal2-cancel {
      background: var(--btn-secondary-bg) !important;
      color: var(--text-primary) !important;
      border-radius: var(--border-radius) !important;
    }

    /* Floating Labels (Optional Enhancement) */
    .form-floating {
      position: relative;
    }

    .form-floating > .form-control {
      height: calc(3.5rem + 2px);
      padding: 1rem 0.75rem;
    }

    .form-floating > label {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      padding: 1rem 0.75rem;
      pointer-events: none;
      border: 1px solid transparent;
      transform-origin: 0 0;
      transition: opacity .1s ease-in-out, transform .1s ease-in-out;
      color: var(--text-secondary);
    }

    .form-floating > .form-control:focus ~ label,
    .form-floating > .form-control:not(:placeholder-shown) ~ label {
      opacity: .65;
      transform: scale(.85) translateY(-.5rem) translateX(.15rem);
    }

    /* Ripple Effect */
    .ripple {
      position: absolute;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.4);
      transform: scale(0);
      animation: ripple 0.6s linear;
      pointer-events: none;
    }

    @keyframes ripple {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }

    /* Profile Container */
    .profile-container {
      display: flex;
      min-height: calc(100vh - 60px); /* Adjust based on your header height */
    }

    /* Sidebar Styles (for proper alignment) */
    .profile-sidebar {
      width: 280px;
      min-height: 100%;
      background-color: var(--sidebar-bg);
      border-right: 1px solid var(--border-color);
      transition: all var(--transition-normal);
      position: fixed;
      top: 60px; /* Adjust based on your header height */
      left: 0;
      bottom: 0;
      z-index: 1030;
      overflow-y: auto;
    }

    @media (max-width: 767px) {
      .profile-sidebar {
        transform: translateX(-100%);
      }

      .profile-sidebar.show {
        transform: translateX(0);
      }
    }

    /* Form Floating Animation */
    .input-animated {
      position: relative;
      margin-bottom: 1.5rem;
    }

    .input-animated input {
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 0.95rem;
      border: 1px solid var(--input-border);
      border-radius: var(--border-radius);
      background-color: var(--input-bg);
      color: var(--text-primary);
      transition: all var(--transition-normal);
    }

    .input-animated input:focus {
      border-color: var(--input-focus-border);
      box-shadow: 0 0 0 4px var(--input-focus-shadow);
      outline: none;
    }

    .input-animated label {
      position: absolute;
      left: 1rem;
      top: 0.75rem;
      color: var(--text-secondary);
      pointer-events: none;
      transition: all var(--transition-normal);
      background-color: var(--input-bg);
      padding: 0 0.25rem;
    }

    .input-animated input:focus ~ label,
    .input-animated input:not(:placeholder-shown) ~ label {
      top: -0.5rem;
      left: 0.75rem;
      font-size: 0.75rem;
      color: var(--accent-color);
      background-color: var(--input-bg);
    }

    /* Floating Icons */
    .floating-icon {
      position: absolute;
      opacity: 0.1;
      z-index: 0;
    }

    .floating-icon-1 {
      top: 10%;
      right: 5%;
      font-size: 4rem;
      color: var(--accent-color);
      animation: float 6s ease-in-out infinite;
    }

    .floating-icon-2 {
      bottom: 10%;
      left: 5%;
      font-size: 3rem;
      color: var(--accent-secondary);
      animation: float 8s ease-in-out infinite;
    }

    @keyframes float {
      0% {
        transform: translateY(0) rotate(0deg);
      }
      50% {
        transform: translateY(-20px) rotate(5deg);
      }
      100% {
        transform: translateY(0) rotate(0deg);
      }
    }
  </style>
</head>
<body>
  <div class="main-container">
    <!-- Include Header -->
    <%- include("../partials/user/header") %>

    <div class="profile-container">
      <!-- Include Sidebar -->
      <%- include("../partials/user/profileSidebar") %>
      
      <!-- Main Content -->
      <main class="main-content">
        <!-- Theme Toggle -->
        <div class="theme-toggle" id="themeToggle">
          <i class="fas fa-sun sun"></i>
          <i class="fas fa-moon moon"></i>
          <span class="toggle-circle"></span>
        </div>
        
        <!-- Page Title -->
        <div class="page-title-container animate-fadeIn">
          <h1 class="page-title">Edit Your Profile</h1>
          <p class="page-subtitle">Update your personal information</p>
        </div>
        
        <!-- Alert Container -->
        <div id="alertContainer" class="form-alert" role="alert" style="display: none">
          <i class="fas fa-info-circle"></i>
          <span id="alertMessage"></span>
        </div>
        
        <!-- Profile Form -->
        <div class="profile-form-container animate-slideInUp">
          <div class="floating-icon floating-icon-1">
            <i class="fas fa-user-edit"></i>
          </div>
          <div class="floating-icon floating-icon-2">
            <i class="fas fa-shield-alt"></i>
          </div>
          
          <form id="profileForm" novalidate>
            <!-- Personal Information Section -->
            <div class="form-section">
              <h3 class="form-section-title">
                <i class="fas fa-user"></i>
                Personal Information
              </h3>
              
              <div class="row g-4">
                <div class="col-md-6">
                  <div class="input-animated">
                    <input 
                      type="text" 
                      id="fullName" 
                      class="form-control" 
                      value="<%= fullname %>" 
                      placeholder=" " 
                      required
                    />
                    <label for="fullName">Full Name</label>
                  </div>
                  <div class="invalid-feedback" id="fullNameFeedback">
                    Please enter a valid full name
                  </div>
                </div>
                
                <div class="col-md-6">
                  <div class="input-animated">
                    <input 
                      type="tel" 
                      id="phoneNumber" 
                      class="form-control" 
                      value="<%= mobile || '' %>" 
                      placeholder=" "
                    />
                    <label for="phoneNumber">Phone Number</label>
                  </div>
                  <div class="invalid-feedback">
                    Please enter a valid 10-digit phone number
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Email Information Section -->
            <div class="form-section">
              <h3 class="form-section-title">
                <i class="fas fa-envelope"></i>
                Email Information
              </h3>
              
              <div class="row g-4">
                <div class="col-md-6">
                  <div class="input-animated">
                    <input 
                      type="email" 
                      id="currentEmail" 
                      class="form-control" 
                      value="<%= email %>" 
                      placeholder=" " 
                      readonly
                    />
                    <label for="currentEmail">Current Email</label>
                  </div>
                </div>
                
                <div class="col-md-6">
                  <div class="input-animated">
                    <input 
                      type="email" 
                      id="newEmail" 
                      class="form-control" 
                      placeholder=" "
                    />
                    <label for="newEmail">New Email (Optional)</label>
                  </div>
                  <div class="invalid-feedback">
                    Please enter a valid email address
                  </div>
                </div>
              </div>
              
              <div class="row mt-3">
                <div class="col-md-6 offset-md-6">
                  <button type="button" class="btn-otp" id="sendOtpBtn">
                    <i class="fas fa-paper-plane"></i>
                    Send OTP
                  </button>
                </div>
              </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="text-center mt-4">
              <button type="submit" class="btn-update">
                <i class="fas fa-save"></i>
                UPDATE PROFILE
              </button>
            </div>
          </form>
          
          <!-- Change Password Link -->
          <div class="text-center mt-4">
            <a href="/getupdatepassword" class="change-password-link">
              <i class="fas fa-lock"></i>
              Change Password
            </a>
          </div>
        </div>
      </main>
    </div>
    
    <!-- Include Footer -->
    
  </div>

  <!-- jQuery -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <!-- Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Form elements
      const form = document.getElementById("profileForm");
      const fullName = document.getElementById("fullName");
      const phoneNumber = document.getElementById("phoneNumber");
      const newEmail = document.getElementById("newEmail");
      const alertContainer = document.getElementById("alertContainer");
      const alertMessage = document.getElementById("alertMessage");
      const sendOtpBtn = document.getElementById("sendOtpBtn");
      
      // Theme toggle functionality
      const themeToggle = document.getElementById('themeToggle');
      
      // Check for saved theme preference
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        document.documentElement.setAttribute('data-theme', savedTheme);
      } else {
        // Check for system preference
        const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
        if (prefersDarkScheme.matches) {
          document.documentElement.setAttribute('data-theme', 'dark');
        }
      }
      
      themeToggle.addEventListener('click', function() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        
        // Add transition effect
        document.body.style.transition = 'background-color 0.5s ease, color 0.5s ease';
        setTimeout(() => {
          document.body.style.transition = '';
        }, 500);
      });
      
      // Sidebar toggle on mobile
      const sidebarToggle = document.querySelector('.sidebar-toggle');
      if (sidebarToggle) {
        sidebarToggle.addEventListener('click', function() {
          document.querySelector('.sidebar').classList.toggle('show');
        });
      }
      
      // Validation functions
      function validateFullName(name) {
        const re = /^[a-zA-Z\s'-]{2,50}$/;
        return re.test(name.trim());
      }

      function validatePhone(phone) {
        if (!phone) return true; // Optional
        const re = /^[0-9]{10}$/;
        return re.test(phone);
      }

      function validateEmail(email) {
        const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        return re.test(String(email).toLowerCase());
      }

      function validateField(input, validationFn) {
        const value = input.value.trim();
        if (!value || !validationFn(value)) {
          input.classList.add("is-invalid");
          return false;
        }
        input.classList.remove("is-invalid");
        return true;
      }
      
      // Show alert function with enhanced styling
      function showAlert(message, type) {
        alertContainer.className = `form-alert alert-${type}`;
        
        // Add appropriate icon based on alert type
        let iconClass = 'fas fa-info-circle';
        if (type === 'success') iconClass = 'fas fa-check-circle';
        if (type === 'danger') iconClass = 'fas fa-exclamation-circle';
        if (type === 'warning') iconClass = 'fas fa-exclamation-triangle';
        
        alertContainer.innerHTML = `<i class="${iconClass}"></i><span>${message}</span>`;
        alertContainer.style.display = "block";
        
        // Add animation
        alertContainer.style.animation = 'none';
        setTimeout(() => {
          alertContainer.style.animation = 'slideDown 0.3s ease forwards';
        }, 10);
        
        // Auto hide after delay
        setTimeout(() => {
          alertContainer.style.animation = 'slideDown 0.3s ease reverse forwards';
          setTimeout(() => {
            alertContainer.style.display = "none";
          }, 300);
        }, 5000);
      }
      
      // Form submission
      form.addEventListener("submit", async function (event) {
        event.preventDefault();

        // Add ripple effect to button
        const submitBtn = document.querySelector('.btn-update');
        createRippleEffect({ currentTarget: submitBtn });

        let isValid = true;

        if (!validateField(fullName, validateFullName)) isValid = false;
        if (!validateField(phoneNumber, validatePhone)) isValid = false;

        if (newEmail.value.trim() !== "") {
          showAlert(
            "Please verify the new email using OTP before updating other profile details",
            "warning"
          );
          isValid = false;
        }

        if (!isValid) {
          showAlert("Please correct the errors in the form", "danger");
          return;
        }

        const formData = {
          fullname: fullName.value.trim(),
          mobile: phoneNumber.value.trim() || "",
        };

        try {
          // Show loading state
          submitBtn.disabled = true;
          submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';

          const response = await fetch("/update-profile", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          });

          const result = await response.json();

          // Reset button state
          submitBtn.disabled = false;
          submitBtn.innerHTML = '<i class="fas fa-save"></i> UPDATE PROFILE';

          if (result.success) {
            showAlert(result.message, "success");
            
            // Enhanced success animation
            Swal.fire({
              icon: "success",
              title: "Profile Updated",
              text: result.message,
              timer: 1500,
              showConfirmButton: false,
              backdrop: `
                rgba(0,0,123,0.4)
                url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_P7sC%7Banimation:spinner_svv2 .8s linear infinite;animation-delay:-.8s%7D.spinner_MJg4%7Banimation-delay:-.65s%7D.spinner_opMr%7Banimation-delay:-.5s%7D@keyframes spinner_svv2%7B0%25,66.66%25%7Btransform:scaleY(1)%7D33.33%25%7Btransform:scaleY(.75)%7D%7D%3C/style%3E%3Cpath d='M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z' opacity='.25'/%3E%3Cpath d='M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z' class='spinner_P7sC'/%3E%3C/svg%3E")
                center 15% no-repeat
              `
            }).then(() => {
              window.location.href = "/LoadProfile";
            });
          } else {
            showAlert(
              result.message,
              result.message === "No changes made" ? "info" : "danger"
            );
            
            Swal.fire({
              icon: result.message === "No changes made" ? "info" : "error",
              title: result.message === "No changes made" ? "No Changes" : "Error",
              text: result.message,
              confirmButtonText: 'OK',
              confirmButtonColor: '#3b82f6'
            });
          }
        } catch (error) {
          console.error("Error updating profile:", error);
          showAlert("An error occurred, please try again", "danger");
          
          Swal.fire({
            icon: "error",
            title: "Connection Error",
            text: "An error occurred while connecting to the server. Please check your internet connection and try again.",
            confirmButtonText: 'Try Again',
            confirmButtonColor: '#3b82f6'
          });
        }
      });
      
      // Send OTP button
      sendOtpBtn.addEventListener("click", async function () {
        // Add ripple effect
        createRippleEffect({ currentTarget: sendOtpBtn });
        
        const emailValue = newEmail.value.trim();

        if (!emailValue) {
          showAlert(
            "Please enter a new email address to receive OTP",
            "warning"
          );
          newEmail.focus();
          return;
        }

        if (!validateEmail(emailValue)) {
          showAlert("Please enter a valid email address", "danger");
          newEmail.classList.add("is-invalid");
          newEmail.focus();
          return;
        }

        try {
          // Show loading state
          sendOtpBtn.disabled = true;
          sendOtpBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
          
          const response = await fetch("/send-email-update-otp", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ newEmail: emailValue }),
          });

          const result = await response.json();
          
          // Reset button state
          sendOtpBtn.disabled = false;
          sendOtpBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Send OTP';

          if (result.success) {
            showAlert(result.message, "success");
            
            Swal.fire({
              icon: "success",
              title: "OTP Sent",
              text: result.message,
              timer: 1500,
              showConfirmButton: false,
              backdrop: `
                rgba(0,0,123,0.4)
                url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='120' height='120' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'%3E%3C/path%3E%3Cpolyline points='22,6 12,13 2,6'%3E%3C/polyline%3E%3C/svg%3E")
                center 15% no-repeat
              `
            }).then(() => {
              if (result.redirectUrl) {
                window.location.href = result.redirectUrl;
              }
            });
          } else {
            showAlert(result.message, "danger");
            
            Swal.fire({
              icon: "error",
              title: "Error",
              text: result.message || "Failed to send OTP",
              confirmButtonText: 'Try Again',
              confirmButtonColor: '#3b82f6'
            });
          }
        } catch (error) {
          console.error("Error sending OTP:", error);
          showAlert("An error occurred, please try again", "danger");
          
          // Reset button state
          sendOtpBtn.disabled = false;
          sendOtpBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Send OTP';
          
          Swal.fire({
            icon: "error",
            title: "Connection Error",
            text: "An error occurred while connecting to the server. Please check your internet connection and try again.",
            confirmButtonText: 'Try Again',
            confirmButtonColor: '#3b82f6'
          });
        }
      });
      
      // Input validation events
      fullName.addEventListener("input", function () {
        validateField(this, validateFullName);
      });

      phoneNumber.addEventListener("input", function () {
        this.value = this.value.replace(/\D/g, "");
        if (!this.value) {
          this.classList.remove("is-invalid");
        } else {
          validateField(this, validatePhone);
        }
      });

      newEmail.addEventListener("input", function () {
        const value = this.value.trim();
        if (value && !validateEmail(value)) {
          this.classList.add("is-invalid");
        } else {
          this.classList.remove("is-invalid");
        }
      });
      
      // Ripple effect function
      function createRippleEffect(event) {
        const button = event.currentTarget;
        
        const circle = document.createElement('span');
        const diameter = Math.max(button.clientWidth, button.clientHeight);
        const radius = diameter / 2;
        
        circle.style.width = circle.style.height = `${diameter}px`;
        circle.style.left = `${event.clientX ? event.clientX - button.getBoundingClientRect().left - radius : button.clientWidth / 2 - radius}px`;
        circle.style.top = `${event.clientY ? event.clientY - button.getBoundingClientRect().top - radius : button.clientHeight / 2 - radius}px`;
        circle.classList.add('ripple');
        
        const ripple = button.querySelector('.ripple');
        if (ripple) {
          ripple.remove();
        }
        
        button.appendChild(circle);
        
        // Remove ripple after animation completes
        setTimeout(() => {
          if (circle) {
            circle.remove();
          }
        }, 600);
      }
      
      // Add ripple effect to all buttons
      document.querySelectorAll('.btn, .btn-otp, .btn-update').forEach(btn => {
        btn.addEventListener('click', createRippleEffect);
      });
      
      // Add active class to current sidebar item
      document.querySelectorAll('.menu-item').forEach(item => {
        if (item.getAttribute('href') === '/getprofileEdit') {
          item.classList.add('active');
        }
      });
      
      // Add animation to form elements
      const formSections = document.querySelectorAll('.form-section');
      formSections.forEach((section, index) => {
        section.classList.add('animate-slideInUp');
        section.style.animationDelay = `${0.2 + (index * 0.1)}s`;
      });
    });
  </script>
</body>
</html>
