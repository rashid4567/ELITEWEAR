<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Profile</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/userStyle/editProfile.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
   
  </head>
  <body>
    <%- include("../partials/user/header") %>

    <div class="profile-container">
      <%- include("../partials/user/profileSidebar") %>

      <div class="main-content">
        <h1 class="page-title">EDIT YOUR PROFILE</h1>

        <div
          id="alertContainer"
          class="form-alert"
          role="alert"
          style="display: none"
        >
          <span id="alertMessage"></span>
        </div>

        <div class="edit-form">
          <form id="profileForm" novalidate>
            <div class="row mb-4">
              <div class="col-md-6">
                <label for="fullName" class="form-label">Full Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="fullName"
                  value="<%= fullname %>"
                  required
                />
                <div class="invalid-feedback" id="fullNameFeedback">
                  Please enter a valid full name
                </div>
              </div>
              <div class="col-md-6">
                <label for="phoneNumber" class="form-label">Phone Number</label>
                <input
                  type="tel"
                  class="form-control"
                  id="phoneNumber"
                  value="<%= mobile || '' %>"
                />
                <div class="invalid-feedback">
                  Please enter a valid 10-digit phone number
                </div>
              </div>
            </div>

            <div class="row mb-4">
              <div class="col-md-6">
                <label for="currentEmail" class="form-label"
                  >Current Email</label
                >
                <input
                  type="email"
                  class="form-control"
                  id="currentEmail"
                  value="<%= email %>"
                  readonly
                />
              </div>
              <div class="col-md-6">
                <label for="newEmail" class="form-label"
                  >New Email (Optional)</label
                >
                <input
                  type="email"
                  class="form-control"
                  id="newEmail"
                  placeholder="Enter new email"
                />
                <div class="invalid-feedback">
                  Please enter a valid email address
                </div>
              </div>
            </div>

            <div class="row mb-4">
              <div class="col-md-6 offset-md-6">
                <button type="button" class="btn btn-otp" id="sendOtpBtn">
                  Send OTP
                </button>
              </div>
            </div>

            <div class="text-center mt-4">
              <button type="submit" class="btn btn-update">UPDATE</button>
            </div>
          </form>

          <a href="/getupdatepassword" class="change-password-link"
            >Change Password</a
          >
        </div>
      </div>
    </div>

    <%- include("../partials/user/footer") %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js"></script>

    <script>
      const form = document.getElementById("profileForm");
      const fullName = document.getElementById("fullName");
      const phoneNumber = document.getElementById("phoneNumber");
      const newEmail = document.getElementById("newEmail");
      const alertContainer = document.getElementById("alertContainer");
      const alertMessage = document.getElementById("alertMessage");
      const sendOtpBtn = document.getElementById("sendOtpBtn");

  
      document.querySelectorAll(".menu-item").forEach((item) => {
        item.addEventListener("click", function () {
          document.querySelectorAll(".menu-item").forEach((i) => {
            i.classList.remove("active");
          });
          this.classList.add("active");
        });
      });

      function validateFullName(name) {
        const re = /^[a-zA-Z\s'-]{2,50}$/;
        return re.test(name.trim());
      }

      function validatePhone(phone) {
        if (!phone) return true; 
        const re = /^[0-9]{10}$/;
        return re.test(phone);
      }

      function validateEmail(email) {
        const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        return re.test(String(email).toLowerCase());
      }

      function validateField(input, validationFn) {
        const value = input.value.trim();
        if (!value || !validationFn(value)) {
          input.classList.add("is-invalid");
          return false;
        }
        input.classList.remove("is-invalid");
        return true;
      }

      function showAlert(message, type) {
        alertContainer.className = `form-alert alert-${type}`;
        alertMessage.textContent = message;
        alertContainer.style.display = "block";
        setTimeout(() => {
          alertContainer.style.display = "none";
        }, 5000);
      }

      form.addEventListener("submit", async function (event) {
        event.preventDefault();

        let isValid = true;

        if (!validateField(fullName, validateFullName)) isValid = false;
        if (!validateField(phoneNumber, validatePhone)) isValid = false;

        if (newEmail.value.trim() !== "") {
          showAlert(
            "Please verify the new email using OTP before updating other profile details",
            "danger"
          );
          isValid = false;
        }

        if (!isValid) {
          showAlert("Please correct the errors in the form", "danger");
          return;
        }

        const formData = {
          fullname: fullName.value.trim(),
          mobile: phoneNumber.value.trim() || "",
        };

 

        try {
          const response = await fetch("/update-profile", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          });

          const result = await response.json();

        

          if (result.success) {
            showAlert(result.message, "success");
            Swal.fire({
              icon: "success",
              title: "Success",
              text: result.message,
              timer: 1500,
              showConfirmButton: false,
            }).then(() => {
              window.location.href = "/LoadProfile";
            });
          } else {
            showAlert(
              result.message,
              result.message === "No changes made" ? "info" : "danger"
            );
            Swal.fire({
              icon: "error",
              title: "Error",
              text: result.message,
            });
          }
        } catch (error) {
          console.error("Error updating profile:", error);
          showAlert("An error occurred, please try again", "danger");
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred, please try again",
          });
        }
      });

      sendOtpBtn.addEventListener("click", async function () {
        const emailValue = newEmail.value.trim();

        if (!emailValue) {
          showAlert(
            "Please enter a new email address to receive OTP",
            "danger"
          );
          newEmail.focus();
          return;
        }

        if (!validateEmail(emailValue)) {
          showAlert("Please enter a valid email address", "danger");
          newEmail.classList.add("is-invalid");
          newEmail.focus();
          return;
        }

        try {
          const response = await fetch("/send-email-update-otp", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ newEmail: emailValue }),
          });

          const result = await response.json();

          if (result.success) {
            showAlert(result.message, "success");
            Swal.fire({
              icon: "success",
              title: "OTP Sent",
              text: result.message,
              timer: 1500,
              showConfirmButton: false,
            }).then(() => {
              if (result.redirectUrl) {
                window.location.href = result.redirectUrl;
              }
            });
          } else {
            showAlert(result.message, "danger");
            Swal.fire({
              icon: "error",
              title: "Error",
              text: result.message || "Failed to send OTP",
            });
          }
        } catch (error) {
          console.error("Error sending OTP:", error);
          showAlert("An error occurred, please try again", "danger");
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred, please try again",
          });
        }
      });

      fullName.addEventListener("input", function () {
        validateField(this, validateFullName);
      });

      phoneNumber.addEventListener("input", function () {
        this.value = this.value.replace(/\D/g, "");
        if (!this.value) {
          this.classList.remove("is-invalid");
        } else {
          validateField(this, validatePhone);
        }
      });

      newEmail.addEventListener("input", function () {
        const value = this.value.trim();
        if (value && !validateEmail(value)) {
          this.classList.add("is-invalid");
        } else {
          this.classList.remove("is-invalid");
        }
      });
    </script>
  </body>
</html>