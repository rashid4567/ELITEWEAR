<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Elite Wear - Wishlist</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/userStyle/whislist.css" />
 
  </head>
  <body>
    <%- include("../partials/user/header") %>

    <div class="container-fluid  py-4">
      <div class="row">
        <%- include("../partials/user/profileSidebar") %>

        <div class="col-md-9">
          <div class="wishlist-header">
            <h5 class="fw-semibold">Wishlist (<%= products.length %>)</h5>
            <div>
              <button class="btn btn-danger btn-sm" id="empty-wishlist-btn">
                Empty my Wishlist
              </button>
            </div>
          </div>
          <% if(products.length > 0) { %>
          <div class="row gy-4" id="wishlist-items">
            <% for(let product of products) { %>
            <div
              class="col-sm-12 col-md-6 col-lg-4 wishlist-item"
              data-product-id="<%= product._id %>"
            >
              <div class="product-card">
                <a href="/productdetails/<%= product._id %>" class="product-image-link">
                  <img
                    src="<%= product.images && product.images.length > 0 ? product.images[0].url : '/api/placeholder/300/300' %>"
                    alt="<%= product.name || 'Product Image' %>"
                    class="product-image"
                  />
                </a>
                <h6 class="product-title">
                  <%= product.name || 'Unnamed Product' %>
                </h6>
                <p class="product-price">
                  â‚¹<%= product.variants[0].salePrice?.toFixed(2) || 'N/A' %>
                </p>
                <p class="discount"><%= product.offer || 'No offer' %> off</p>
                <% if (product.variants && product.variants.length > 0) { %>
                <div class="mb-2">
                  <select class="form-select form-select-sm size-select" data-product-id="<%= product._id %>">
                    <option value="">Select Size</option>
                    <% product.variants.forEach(variant => { %>
                    <option value="<%= variant.size %>"><%= variant.size %></option>
                    <% }) %>
                  </select>
                </div>
                <% } %>
                <% if (product.color) { %>
                <div class="mb-2">
                  <select class="form-select form-select-sm color-select" data-product-id="<%= product._id %>">
                    <option value="">Select Color</option>
                    <option value="<%= product.color %>"><%= product.color %></option>
                  </select>
                </div>
                <% } %>
                <button
                  class="btn btn-add-cart"
                  data-product-id="<%= product._id %>"
                >
                  Add To Cart
                </button>
                <button
                  class="btn btn-remove-wishlist"
                  data-product-id="<%= product._id %>"
                >
                  <i class="fas fa-trash-alt"></i> Remove
                </button>
              </div>
            </div>
            <% } %>
          </div>
          <% } else { %>
          <div id="empty-wishlist-message" class="text-center">
            <p>No items found in your wishlist.</p>
            <div class="mt-3">
              <a href="/allproduct" class="btn btn-dark">Continue Shopping</a>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      <div
        id="wishlistToast"
        class="toast"
        role="alert"
        aria-live="assertive"
        aria-atomic="true"
      >
        <div class="toast-header">
          <strong class="me-auto">Wishlist</strong>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="toast"
            aria-label="Close"
          ></button>
        </div>
        <div class="toast-body" id="toastBody"></div>
      </div>
    </div>

    <div
      class="modal fade"
      id="confirmEmptyModal"
      tabindex="-1"
      aria-labelledby="confirmEmptyModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="confirmEmptyModalLabel">
              ARE YOU SURE!!
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            Sure, are you want to clear the wishlist?
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" class="btn btn-danger" id="confirm-delete">
              Yes, delete
            </button>
          </div>
        </div>
      </div>
    </div>

    <%- include("../partials/user/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      const wishlistToast = new bootstrap.Toast(
        document.getElementById("wishlistToast")
      );
      const confirmEmptyModal = new bootstrap.Modal(
        document.getElementById("confirmEmptyModal")
      );

      function showToast(message, isSuccess = true) {
        const toastBody = document.getElementById("toastBody");
        toastBody.textContent = message;
        toastBody.style.color = isSuccess ? "green" : "red";
        wishlistToast.show();
      }

      function updateWishlistUI(wishlistCount, productId = null) {
        const wishlistHeader = document.querySelector(".wishlist-header h5");
        wishlistHeader.textContent = `Wishlist (${wishlistCount})`;

        if (productId) {
          const productCard = document.querySelector(
            `.wishlist-item[data-product-id="${productId}"]`
          );
          if (productCard) {
            productCard.style.transition = "opacity 0.3s";
            productCard.style.opacity = "0";
            setTimeout(() => {
              productCard.remove();
              checkEmptyWishlist(wishlistCount);
            }, 300);
          }
        } else {
          checkEmptyWishlist(wishlistCount);
        }
      }

      function checkEmptyWishlist(wishlistCount) {
        if (wishlistCount === 0) {
          const wishlistContainer = document.getElementById("wishlist-items");
          if (wishlistContainer) {
            wishlistContainer.outerHTML = `
              <div id="empty-wishlist-message" class="text-center">
                <p>No items found in your wishlist.</p>
                <div class="mt-3">
                  <a href="/allproduct" class="btn btn-dark">Continue Shopping</a>
                </div>
              </div>
            `;
          }
        }
      }

      document.querySelectorAll(".btn-add-cart").forEach((button) => {
        button.addEventListener("click", async function () {
          const productId = this.getAttribute("data-product-id");
          const sizeSelect = document.querySelector(`.size-select[data-product-id="${productId}"]`);
          const colorSelect = document.querySelector(`.color-select[data-product-id="${productId}"]`);
          const size = sizeSelect ? sizeSelect.value || null : null;
          const color = colorSelect ? colorSelect.value || null : null;

          console.log("wishlist - Sending to /add-to-cart-remove-wishlist:", { productId, quantity: 1, size, color });

          if (!productId) {
            showToast("Error: Product ID missing", false);
            return;
          }

          if (sizeSelect && !size) {
            showToast("Please select a size", false);
            return;
          }

          if (colorSelect && !color) {
            showToast("Please select a color", false);
            return;
          }

          try {
            const response = await fetch("/add-to-cart-remove-wishlist", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ productId, quantity: 1, size, color }),
              credentials: "include",
            });
            const data = await response.json();

            console.log("wishlist - Response from /add-to-cart-remove-wishlist:", data);

            showToast(data.message, data.success);
            if (data.success) {
              updateWishlistUI(data.wishlistCount, productId);
            }
          } catch (error) {
            console.error("Error adding to cart:", error);
            showToast("Failed to add to cart", false);
          }
        });
      });

      document.querySelectorAll(".btn-remove-wishlist").forEach((button) => {
        button.addEventListener("click", async function () {
          const productId = this.getAttribute("data-product-id");
          if (!productId) {
            showToast("Error: Product ID missing", false);
            return;
          }

          console.log("wishlist - Sending to /wishlist/remove:", { productId });

          try {
            const response = await fetch("/wishlist/remove", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ productId }),
              credentials: "include",
            });
            const data = await response.json();

            console.log("wishlist - Response from /wishlist/remove:", data);

            showToast(data.message, data.success);
            if (data.success) {
              updateWishlistUI(data.wishlistCount, productId);
            }
          } catch (error) {
            console.error("Error removing from wishlist:", error);
            showToast("Failed to remove product", false);
          }
        });
      });

      document
        .getElementById("empty-wishlist-btn")
        .addEventListener("click", function () {
          confirmEmptyModal.show();
        });

      document
        .getElementById("confirm-delete")
        .addEventListener("click", async function () {
          console.log("wishlist - Sending to /wishlist/empty");

          try {
            const response = await fetch("/wishlist/empty", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              credentials: "include",
            });
            const data = await response.json();

            console.log("wishlist - Response from /wishlist/empty:", data);

            showToast(data.message, data.success);
            if (data.success) {
              updateWishlistUI(0);
            }
          } catch (error) {
            console.error("Error emptying wishlist:", error);
            showToast("Failed to empty wishlist", false);
          } finally {
            confirmEmptyModal.hide();
          }
        });
    </script>
  </body>
</html>