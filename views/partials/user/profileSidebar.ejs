<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Elite Wear Sidebar</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/userStyle/sidebarpartials.css">
</head>
<body>
  <div class="demo-container">
    <!-- Sidebar Toggle Button (Mobile) -->
    <button class="sidebar-toggle d-md-none" id="sidebarToggle">
      <i class="fas fa-bars"></i>
    </button>
    
    <!-- Sidebar -->
    <div class="sidebar">
      <!-- Sidebar Header with Brand and Theme Toggle -->
      <div class="sidebar-header">
        <div class="brand">
          <span class="brand-name">ELITE<span class="accent">WEAR</span></span>
        </div>
        <div class="theme-toggle" id="themeToggle">
          <i class="fas fa-sun sun"></i>
          <i class="fas fa-moon moon"></i>
          <span class="toggle-circle"></span>
        </div>
      </div>
      
      <!-- User Profile Information -->
      <div class="profile-info">
        <div class="profile-avatar">
          <div class="avatar-circle">
            <span class="initials" id="userInitial"><%= user && user.fullname ? user.fullname.charAt(0).toUpperCase() : 'U' %></span>
          </div>
        </div>
        <div class="profile-name" id="userName">
          <%= user && user.fullname ? user.fullname : 'Unknown User' %>
        </div>
        <div class="profile-status">
          <span class="status-dot"></span>
          <span>Online</span>
        </div>
      </div>

      <!-- Sidebar Menu -->
      <div class="sidebar-menu">
        <!-- Account Section -->
        <div class="menu-section">
          <h4 class="menu-section-title">Account</h4>
          <a href="/LoadProfile" class="item-link">
            <div class="menu-item" data-path="/LoadProfile">
              <span class="icon"><i class="fas fa-user"></i></span>
              <span class="item-text">My Profile</span>
            </div>
          </a>

          <a href="/address" class="item-link">
            <div class="menu-item" data-path="/address">
              <span class="icon"><i class="fas fa-map-marker-alt"></i></span>
              <span class="item-text">My Address</span>
            </div>
          </a>

          <a href="/orders" class="item-link">
            <div class="menu-item" data-path="/orders">
              <span class="icon"><i class="fas fa-shopping-bag"></i></span>
              <span class="item-text">My Orders</span>
              <div class="badge-container">
                <span class="badge-count">2</span>
              </div>
            </div>
          </a>

          <a href="/wishlist" class="item-link">
            <div class="menu-item" data-path="/wishlist">
              <span class="icon"><i class="fas fa-heart"></i></span>
              <span class="item-text">My Wishlist</span>
              <div class="badge-container">
                <span class="badge-count">5</span>
              </div>
            </div>
          </a>
        </div>

        <div class="menu-divider"></div>
        
        <!-- Payments Section -->
        <div class="menu-section">
          <h4 class="menu-section-title">Payments</h4>
          <a href="/wallet" class="item-link">
            <div class="menu-item" data-path="/wallet">
              <span class="icon"><i class="fas fa-wallet"></i></span>
              <span class="item-text">My Wallet</span>
            </div>
          </a>

          <a href="/allcoupons" class="item-link">
            <div class="menu-item" data-path="/allcoupons">
              <span class="icon"><i class="fas fa-tag"></i></span>
              <span class="item-text">My Coupons</span>
              <div class="badge-container">
                <span class="badge-count">3</span>
              </div>
            </div>
          </a>
        </div>

        <div class="menu-divider"></div>
        
        <!-- Settings Section -->
        <div class="menu-section">
          <h4 class="menu-section-title">Settings</h4>
          <a href="/getupdatePassword" class="item-link">
            <div class="menu-item" data-path="/getupdatePassword">
              <span class="icon"><i class="fas fa-lock"></i></span>
              <span class="item-text">Change Password</span>
            </div>
          </a>

          <a href="/referral" class="item-link">
            <div class="menu-item" data-path="/referral">
              <span class="icon"><i class="fas fa-gift"></i></span>
              <span class="item-text">Referral Code</span>
            </div>
          </a>
          
          <a href="/logoutpage" class="item-link">
            <div class="menu-item logout-item" data-path="/logoutpage">
              <span class="icon"><i class="fas fa-sign-out-alt"></i></span>
              <span class="item-text">Log out</span>
            </div>
          </a>
        </div>
      </div>

      <!-- Sidebar Footer -->
      <div class="sidebar-footer">
        <p>Â© <%= new Date().getFullYear() %> Elite Wear. All rights reserved.</p>
        <p>Version 2.0.1 | <a href="#">Terms</a> | <a href="#">Privacy</a></p>
      </div>
    </div>
  </div>

  <!-- Bootstrap Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Check for saved theme preference
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        document.documentElement.setAttribute('data-theme', savedTheme);
      } else {
        // Check for system preference
        const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
        if (prefersDarkScheme.matches) {
          document.documentElement.setAttribute('data-theme', 'dark');
        }
      }
      
      // Theme toggle functionality
      const themeToggle = document.getElementById('themeToggle');
      themeToggle.addEventListener('click', function() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        
        // Add transition effect
        document.body.style.transition = 'background-color 0.5s ease, color 0.5s ease';
        setTimeout(() => {
          document.body.style.transition = '';
        }, 500);
      });
      
      // Toggle sidebar on mobile
      const sidebarToggle = document.getElementById('sidebarToggle');
      if (sidebarToggle) {
        sidebarToggle.addEventListener('click', function() {
          document.querySelector('.sidebar').classList.toggle('show');
        });
      }
      
      // Close sidebar when clicking outside on mobile
      document.addEventListener('click', function(event) {
        const sidebar = document.querySelector('.sidebar');
        const sidebarToggle = document.getElementById('sidebarToggle');
        
        if (sidebar && sidebarToggle && 
            window.innerWidth < 768 && 
            sidebar.classList.contains('show') && 
            !sidebar.contains(event.target) && 
            event.target !== sidebarToggle) {
          sidebar.classList.remove('show');
        }
      });
      
      // Add ripple effect to menu items
      document.querySelectorAll('.menu-item').forEach(item => {
        item.addEventListener('mousedown', createRippleEffect);
        
        // Add click handler for active state
        item.addEventListener('click', function() {
          if (!this.classList.contains('active')) {
            document.querySelectorAll('.menu-item').forEach(i => {
              i.classList.remove('active');
            });
            this.classList.add('active');
          }
          
          // Scale effect on click
          this.style.transform = 'scale(0.98)';
          setTimeout(() => {
            this.style.transform = '';
          }, 150);
        });
      });
      
      // Set active menu item based on current URL
      const currentPath = window.location.pathname;
      let activeItemFound = false;
      
      document.querySelectorAll('.menu-item').forEach(item => {
        const itemPath = item.getAttribute('data-path');
        
        if (itemPath && (currentPath === itemPath || currentPath.includes(itemPath))) {
          item.classList.add('active');
          activeItemFound = true;
        }
      });
      
      // If no match found, default to profile for the dashboard
      if (!activeItemFound && (currentPath === '/' || currentPath === '/profile')) {
        const profileItem = document.querySelector('[data-path="/LoadProfile"]');
        if (profileItem) {
          profileItem.classList.add('active');
        }
      }
      
      // Dynamic badge counts (you can replace this with actual data)
      updateBadgeCounts();
    });
    
    // Function to update badge counts (can be connected to your backend)
    function updateBadgeCounts() {
      // This is a placeholder. In a real app, you would fetch these values from your backend
      // const badgeCounts = {
      //   orders: <%= typeof orderCount !== 'undefined' ? orderCount : 2 %>,
      //   wishlist: <%= typeof wishlistCount !== 'undefined' ? wishlistCount : 5 %>,
      //   coupons: <%= typeof couponCount !== 'undefined' ? couponCount : 3 %>
      // };
      
      // Update the badge counts in the UI
      const orderBadge = document.querySelector('[data-path="/orders"] .badge-count');
      const wishlistBadge = document.querySelector('[data-path="/wishlist"] .badge-count');
      const couponBadge = document.querySelector('[data-path="/allcoupons"] .badge-count');
      
      if (orderBadge) orderBadge.textContent = badgeCounts.orders;
      if (wishlistBadge) wishlistBadge.textContent = badgeCounts.wishlist;
      if (couponBadge) couponBadge.textContent = badgeCounts.coupons;
      
      // Hide badges with zero count
      document.querySelectorAll('.badge-count').forEach(badge => {
        if (badge.textContent === '0') {
          badge.parentElement.style.display = 'none';
        }
      });
    }
    
    // Ripple effect function
    function createRippleEffect(event) {
      // Remove any existing ripples
      const ripples = document.querySelectorAll('.ripple');
      ripples.forEach(ripple => ripple.remove());
      
      const item = event.currentTarget;
      const rect = item.getBoundingClientRect();
      
      const size = Math.max(rect.width, rect.height) * 2;
      const x = event.clientX - rect.left - (size / 2);
      const y = event.clientY - rect.top - (size / 2);
      
      const ripple = document.createElement('span');
      ripple.classList.add('ripple');
      ripple.style.width = ripple.style.height = `${size}px`;
      ripple.style.left = `${x}px`;
      ripple.style.top = `${y}px`;
      
      item.appendChild(ripple);
      
      // Remove ripple after animation completes
      setTimeout(() => {
        ripple.remove();
      }, 600);
    }
  </script>
</body>
</html>
