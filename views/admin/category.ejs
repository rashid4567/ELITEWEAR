<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/adminStyle/category.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  
</head>
<body>
    <%- include("../partials/admin/header") %>
    <div class="container mt-4">
      
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="fw-bold">CATEGORY</h2>
            <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add Category</button>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin/">Dashboard</a></li>
                <li class="breadcrumb-item active" aria-current="page">Category</li>
            </ol>
        </nav>

    
        <div id="alertContainer" class="mb-3" style="display: none;">
            <div id="statusAlert" class="alert" role="alert"></div>
        </div>
        
        <div class="table-responsive">
            <table class="table table-bordered text-center">
                <thead class="table-dark">
                    <tr>
                        <th>SNO</th>
                        <th>Category Name</th>
                        <th>Description</th>
                        <th>Sales</th>
                        <th>Stock</th>
                        <th>Offer</th>
                        <th>Added Date</th>
                        <th>List / Unlist</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (cat.length === 0) { %>
                        <tr>
                            <td colspan="9" class="text-center">No categories available</td>
                        </tr>
                    <% } else { %>
                        <% cat.forEach((category, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= category.name %></td>
                                <td><%= category.description %></td>
                                <td><%= category.sales %></td>
                                <td><%= category.stock %></td>
                                <td><%= category.offer %>%</td>
                                <td><%= category.addedDate.toDateString() %></td>
                                <td>
                                    <button class="btn btn-sm <%= category.isListed ? 'btn-success' : 'btn-danger' %> toggle-category"
                                            data-id="<%= category._id %>">
                                        <%= category.isListed ? 'UNLIST' : 'LIST' %>
                                    </button>
                                </td>
                                <td>
                                    <i class="bi bi-eye mx-2"></i>

                                    <a href="/admin/editCategory?id=<%= category._id %>">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    
                                    <i class="bi bi-trash text-danger mx-2 delete-category" 
                                       data-id="<%= category._id %>" 
                                       data-name="<%= category.name %>"
                                       style="cursor: pointer;"></i>
                                </td>
                            </tr>
                        <% }); %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

   
    <div class="modal fade" id="addCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                  
                    <div id="formFeedback" class="alert alert-danger mb-3" style="display: none;"></div>
                    
                    <form id="addCategoryForm">
                        <div class="mb-3">
                            <label class="form-label">Category Name</label>
                            <input type="text" class="form-control" id="categoryName">
                            <div class="invalid-feedback">Please enter a category name.</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="categoryDescription" ></textarea>
                            <div class="invalid-feedback">Please enter a description.</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Initial Stock</label>
                            <input type="number" class="form-control" id="categoryStock" value="0" min="0">
                        </div>
                        <button type="submit" class="btn btn-dark w-100">Add Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

 
    <div class="modal fade" id="confirmationModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmTitle">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="confirmMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmButton">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const statusAlert = document.getElementById('statusAlert');
            
            statusAlert.className = `alert alert-${type}`;
            statusAlert.textContent = message;
            alertContainer.style.display = 'block';
            
          
            setTimeout(() => {
                alertContainer.style.display = 'none';
            }, 5000);
        }
        
    
        document.getElementById("addCategoryForm").addEventListener("submit", function(event) {
            event.preventDefault();
            
            const categoryName = document.getElementById("categoryName");
            const categoryDescription = document.getElementById("categoryDescription");
            const categoryStock = document.getElementById("categoryStock").value || 0;
            const formFeedback = document.getElementById("formFeedback");
            
            
            formFeedback.style.display = 'none';
            categoryName.classList.remove('is-invalid');
            categoryDescription.classList.remove('is-invalid');
            
           
            let isValid = true;
            let errorMessage = '';
            
            if (!categoryName.value.trim()) {
                categoryName.classList.add('is-invalid');
                isValid = false;
                errorMessage = 'Please enter a category name.';
            }
            
            if (!categoryDescription.value.trim()) {
                categoryDescription.classList.add('is-invalid');
                isValid = false;
                errorMessage = errorMessage ? 'Please fill in all required fields.' : 'Please enter a description.';
            }
            
            if (!isValid) {
                formFeedback.textContent = errorMessage;
                formFeedback.style.display = 'block';
                return;
            }

           
            fetch('/admin/addcategory', {
                method: "POST",
                headers: { 
                    "Content-Type": "application/json" 
                },
                body: JSON.stringify({
                    name: categoryName.value.trim(),
                    description: categoryDescription.value.trim(),
                    stock: parseInt(categoryStock)
                })
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        throw new Error(data.message || 'Failed to add category');
                    });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                  
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addCategoryModal'));
                    modal.hide();
                    
                    
                    showAlert(data.message, 'success');
                    
           
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    formFeedback.textContent = data.message;
                    formFeedback.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                formFeedback.textContent = error.message || "Server issue!";
                formFeedback.style.display = 'block';
            });
        });

    
        const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
        let pendingAction = null;
        
        document.getElementById('confirmButton').addEventListener('click', function() {
            if (!pendingAction) return;
            
         
            confirmationModal.hide();
            
          
            if (pendingAction.type === 'toggle') {
                toggleCategory(pendingAction.id);
            } else if (pendingAction.type === 'delete') {
                deleteCategory(pendingAction.id);
            }
            
          
            pendingAction = null;
        });
        
       
        document.querySelectorAll('.toggle-category').forEach(button => {
            button.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                const isListed = this.classList.contains('btn-success'); 
                const action = isListed ? "Unlist" : "List";
                
               
                document.getElementById('confirmTitle').textContent = `${action} Category`;
                document.getElementById('confirmMessage').textContent = `Are you sure you want to ${action.toLowerCase()} this category?`;
                
               
                pendingAction = {
                    type: 'toggle',
                    id: categoryId
                };
                
             
                confirmationModal.show();
            });
        });
        
       
        function toggleCategory(categoryId) {
            fetch('/admin/toggle-category', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: categoryId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message, 'success');
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showAlert(data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert("Server issue! Please try again.", 'danger');
            });
        }
        
      
        document.querySelectorAll('.delete-category').forEach(icon => {
            icon.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                const categoryName = this.getAttribute('data-name');
                
                
                document.getElementById('confirmTitle').textContent = 'Delete Category';
                document.getElementById('confirmMessage').textContent = `Are you sure you want to delete the category "${categoryName}"? This action cannot be undone.`;
                
              
                document.getElementById('confirmButton').className = 'btn btn-danger';
                
              
                pendingAction = {
                    type: 'delete',
                    id: categoryId
                };
                
               
                confirmationModal.show();
            });
        });
        
       
        function deleteCategory(categoryId) {
            fetch('/admin/delete-category', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: categoryId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message, 'success');
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showAlert(data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert("Server issue! Please try again.", 'danger');
            });
        }
        
        
        document.getElementById('confirmationModal').addEventListener('hidden.bs.modal', function () {
            document.getElementById('confirmButton').className = 'btn btn-primary';
        });
    </script>
</body>
</html>