<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/adminStyle/category.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <%- include("../partials/admin/header") %>
    <div class="container mt-4">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="fw-bold">CATEGORY</h2>
            <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add Category</button>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
                <li class="breadcrumb-item active" aria-current="page">Category</li>
            </ol>
        </nav>

        <!-- Category Table -->
        <div class="table-responsive">
            <table class="table table-bordered text-center">
                <thead class="table-dark">
                    <tr>
                        <th>SNO</th>
                        <th>Category Name</th>
                        <th>Description</th>
                        <th>Sales</th>
                        <th>Stock</th>
                        <th>Offer</th>
                        <th>Added Date</th>
                        <th>List / Unlist</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (cat.length === 0) { %>
                        <tr>
                            <td colspan="9" class="text-center">No categories available</td>
                        </tr>
                    <% } else { %>
                        <% cat.forEach((category, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= category.name %></td>
                                <td><%= category.description %></td>
                                <td><%= category.sales %></td>
                                <td><%= category.stock %></td>
                                <td><%= category.offer %>%</td>
                                <td><%= category.addedDate.toDateString() %></td>
                                <td>
                                    <button class="btn btn-sm <%= category.isListed ? 'btn-success' : 'btn-danger' %> toggle-category"
                                            data-id="<%= category._id %>">
                                        <%= category.isListed ? 'UNLIST' : 'LIST' %>
                                    </button>
                                </td>
                                <td>
                                    <i class="bi bi-eye mx-2"></i>

                                    <a href="/admin/editCategory?id=<%= category._id %>">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    
                                </td>
                            </tr>
                        <% }); %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Add Category Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addCategoryForm">
                        <div class="mb-3">
                            <label class="form-label">Category Name</label>
                            <input type="text" class="form-control" id="categoryName" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="categoryDescription" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Initial Stock</label>
                            <input type="number" class="form-control" id="categoryStock" value="0" min="0">
                        </div>
                        <button type="submit" class="btn btn-dark w-100">Add Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("addCategoryForm").addEventListener("submit", function(event) {
            event.preventDefault();
            
            const categoryName = document.getElementById("categoryName").value.trim();
            const categoryDescription = document.getElementById("categoryDescription").value.trim();
            const categoryStock = document.getElementById("categoryStock").value || 0;

            if (!categoryName || !categoryDescription) {
                Swal.fire("Error!", "Please fill in all required fields.", "error");
                return;
            }

            fetch('/admin/addcategory', {
                method: "POST",
                headers: { 
                    "Content-Type": "application/json" 
                },
                body: JSON.stringify({
                    name: categoryName,
                    description: categoryDescription,
                    stock: parseInt(categoryStock)
                })
            })
            .then(response => {
             
                if (!response.ok) {
                    return response.json().then(data => {
                        throw new Error(data.message || 'Failed to add category');
                    });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        "Success!",
                        data.message,
                        "success"
                    ).then(() => location.reload());
                } else {
                    Swal.fire("Error!", data.message, "error");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire("Error!", error.message || "Server issue!", "error");
            });
        });

        document.querySelectorAll('.toggle-category').forEach(button => {
            button.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                const isListed = this.classList.contains('btn-success'); 
                const action = isListed ? "Unlist" : "List"; 

                Swal.fire({
                    title: `Are you sure you want to ${action} this category?`,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: `Yes, ${action} it!`
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/admin/toggle-category', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id: categoryId })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    `${action}ed!`,
                                    data.message,
                                    "success"
                                ).then(() => location.reload()); 
                            } else {
                                Swal.fire("Error!", data.message, "error");
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire("Error!", "Server issue!", "error");
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>