<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ELITE WEAR - Coupons Management</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- SweetAlert2 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.12/dist/sweetalert2.min.css">
    <!-- Animate.css for enhanced animations -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <!-- Google Fonts - Inter & Poppins -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4f46e5;
            --primary-light: #6366f1;
            --primary-dark: #4338ca;
            --secondary: #10b981;
            --secondary-light: #34d399;
            --secondary-dark: #059669;
            --warning: #f59e0b;
            --danger: #ef4444;
            --info: #0ea5e9;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #64748b;
            --gray-light: #94a3b8;
            --gray-dark: #475569;
            --sidebar-width: 260px;
            --sidebar-collapsed-width: 70px;
            --header-height: 70px;
            --card-border-radius: 12px;
            --transition-speed: 0.3s;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f1f5f9;
            color: var(--dark);
            overflow-x: hidden;
            min-height: 100vh;
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

        /* Dashboard Container */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            transition: margin-left var(--transition-speed) ease;
            padding: 0;
            background-color: #f8fafc;
            transform: translateX(-200px);
        }

        /* Content Header */
        .content-header {
            background-color: #fff;
            padding: 20px 30px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-title {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 5px;
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            list-style: none;
            margin: 0;
            padding: 0;
            font-size: 0.875rem;
        }

        .breadcrumb-item {
            color: var(--gray);
        }

        .breadcrumb-item a {
            color: var(--primary);
            text-decoration: none;
        }

        .breadcrumb-separator {
            margin: 0 8px;
            color: var(--gray-light);
            font-size: 0.75rem;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            padding: 8px 15px;
            border-radius: 10px;
            transition: all 0.2s ease;
        }

        .user-profile:hover {
            background-color: rgba(0, 0, 0, 0.03);
        }

        .profile-info {
            text-align: right;
        }

        .user-name {
            font-weight: 600;
            margin: 0;
            font-size: 0.95rem;
        }

        .user-role {
            color: var(--gray);
            margin: 0;
            font-size: 0.8rem;
        }

        .dropdown-icon {
            color: var(--gray);
            font-size: 0.75rem;
        }

        /* Stats Row */
        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 20px;
            padding: 30px;
        }

        .stat-card {
            background-color: #fff;
            border-radius: var(--card-border-radius);
            padding: 20px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.04);
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.07);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 15px;
            font-size: 1.5rem;
            color: white;
        }

        .stat-icon.blue {
            background: linear-gradient(135deg, #4f46e5, #6366f1);
        }

        .stat-icon.green {
            background: linear-gradient(135deg, #10b981, #34d399);
        }

        .stat-icon.orange {
            background: linear-gradient(135deg, #f59e0b, #fbbf24);
        }

        .stat-icon.red {
            background: linear-gradient(135deg, #ef4444, #f87171);
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 0 0 5px;
            color: var(--dark);
        }

        .stat-label {
            color: var(--gray);
            font-size: 0.9rem;
            margin: 0;
        }

        /* Search and Filters */
        .search-filter-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 30px 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .search-box {
            position: relative;
            flex: 1;
            max-width: 400px;
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        .search-input {
            width: 100%;
            padding: 12px 15px 12px 45px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            font-size: 0.95rem;
            transition: all 0.2s ease;
            background-color: #fff;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary-light);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
        }

        .filter-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .filter-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            background-color: #fff;
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            font-weight: 500;
            color: var(--dark);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .filter-btn:hover {
            background-color: rgba(0, 0, 0, 0.02);
        }

        .filter-options {
            display: flex;
            align-items: center;
            gap: 8px;
            background-color: #fff;
            border-radius: 10px;
            padding: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .filter-option {
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 600;
            color: var(--gray-dark);
            background: none;
            border: none;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .filter-option:hover {
            background-color: rgba(0, 0, 0, 0.03);
        }

        .filter-option.active {
            background-color: var(--primary);
            color: white;
        }

        /* View Selector */
        .view-selector {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 0 30px 20px;
        }

        .view-selector-label {
            font-size: 0.9rem;
            color: var(--gray);
        }

        .view-selector-options {
            display: flex;
            align-items: center;
            gap: 5px;
            background-color: #fff;
            border-radius: 8px;
            padding: 3px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .view-option {
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            background: none;
            border: none;
            color: var(--gray);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .view-option:hover {
            background-color: rgba(0, 0, 0, 0.03);
            color: var(--dark);
        }

        .view-option.active {
            background-color: var(--primary);
            color: white;
        }

        /* Coupons Container */
        .coupons-container {
            background-color: #fff;
            border-radius: var(--card-border-radius);
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.04);
            margin: 0 30px 30px;
            padding: 25px;
            overflow: hidden;
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: var(--dark);
        }

        /* Bulk Actions */
        .bulk-select {
            display: flex;
            align-items: center;
        }

        .bulk-select-label {
            font-size: 0.9rem;
            color: var(--gray);
            margin-left: 8px;
        }

        .bulk-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 15px;
            background-color: #f8fafc;
            border-radius: 10px;
            margin-bottom: 20px;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .bulk-actions-buttons {
            display: flex;
            gap: 10px;
        }

        .bulk-action-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            background: none;
            border: 1px solid rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .bulk-action-btn:hover {
            background-color: rgba(0, 0, 0, 0.03);
        }

        .bulk-action-btn.delete {
            color: var(--danger);
            border-color: rgba(239, 68, 68, 0.2);
        }

        .bulk-action-btn.delete:hover {
            background-color: rgba(239, 68, 68, 0.05);
        }

        /* Table Styling */
        .coupons-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .coupons-table th {
            padding: 15px;
            font-weight: 600;
            color: var(--gray-dark);
            background-color: #f8fafc;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            text-align: left;
            font-size: 0.9rem;
        }

        .coupons-table th:first-child {
            border-top-left-radius: 10px;
        }

        .coupons-table th:last-child {
            border-top-right-radius: 10px;
        }

        .coupons-table td {
            padding: 15px;
            vertical-align: middle;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            font-size: 0.95rem;
        }

        .coupons-table tr:last-child td {
            border-bottom: none;
        }

        .coupons-table tr:hover td {
            background-color: rgba(0, 0, 0, 0.01);
        }

        /* Toggle Switch */
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 44px;
            height: 24px;
            cursor: pointer;
        }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .toggle-slider {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #e2e8f0;
            border-radius: 34px;
            transition: .4s;
        }

        .toggle-slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            border-radius: 50%;
            transition: .4s;
        }

        input:checked + .toggle-slider {
            background-color: var(--primary);
        }

        input:checked + .toggle-slider:before {
            transform: translateX(20px);
        }

        /* Usage Progress Bar */
        .usage-text {
            display: flex;
            justify-content: space-between;
            font-size: 0.85rem;
            margin-bottom: 5px;
        }

        .usage-progress {
            height: 6px;
            background-color: #e2e8f0;
            border-radius: 3px;
            overflow: hidden;
        }

        .usage-bar {
            height: 100%;
            background: linear-gradient(to right, var(--primary-light), var(--primary));
            border-radius: 3px;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn-view, .btn-edit, .btn-delete {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            background: none;
            border: 1px solid rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: all 0.2s ease;
            color: var(--gray-dark);
        }

        .btn-view:hover {
            background-color: rgba(14, 165, 233, 0.1);
            color: var(--info);
            border-color: rgba(14, 165, 233, 0.2);
        }

        .btn-edit:hover {
            background-color: rgba(79, 70, 229, 0.1);
            color: var(--primary);
            border-color: rgba(79, 70, 229, 0.2);
        }

        .btn-delete:hover {
            background-color: rgba(239, 68, 68, 0.1);
            color: var(--danger);
            border-color: rgba(239, 68, 68, 0.2);
        }

        /* Card View */
        .coupon-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .coupon-card {
            position: relative;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .coupon-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .coupon-header {
            padding: 15px;
            background: linear-gradient(135deg, var(--primary-light), var(--primary));
            color: white;
        }

        .coupon-code {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.25rem;
            font-weight: 700;
            letter-spacing: 1px;
        }

        .copy-code-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .copy-code-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .coupon-body {
            padding: 20px 15px;
        }

        .coupon-discount {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 15px;
            text-align: center;
        }

        .coupon-details {
            display: grid;
            gap: 10px;
        }

        .coupon-detail {
            display: flex;
            justify-content: space-between;
            font-size: 0.9rem;
        }

        .detail-label {
            color: var(--gray);
        }

        .detail-value {
            font-weight: 500;
            color: var(--dark);
        }

        .coupon-footer {
            padding: 15px;
            border-top: 1px solid rgba(0, 0, 0, 0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .coupon-status {
            display: flex;
            align-items: center;
        }

        .coupon-actions {
            display: flex;
            gap: 8px;
        }

        /* Ribbon */
        .ribbon {
            position: absolute;
            top: 0;
            right: 0;
            width: 150px;
            height: 150px;
            overflow: hidden;
            pointer-events: none;
        }

        .ribbon-content {
            position: absolute;
            display: block;
            width: 225px;
            padding: 8px 0;
            background-color: var(--danger);
            color: white;
            text-align: center;
            font-size: 0.8rem;
            font-weight: 600;
            transform: rotate(45deg);
            right: -25px;
            top: 30px;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        }

        .ribbon-expired .ribbon-content {
            background-color: var(--danger);
        }

        .ribbon-soon .ribbon-content {
            background-color: var(--warning);
        }

        .ribbon-upcoming .ribbon-content {
            background-color: var(--info);
        }

        /* Empty State */
        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 60px 20px;
            text-align: center;
        }

        .empty-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: #f1f5f9;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: var(--gray);
            margin-bottom: 20px;
        }

        .empty-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark);
        }

        .empty-text {
            color: var(--gray);
            max-width: 400px;
            margin-bottom: 25px;
        }

        /* Pagination */
        .custom-pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 30px 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .pagination-info {
            color: var(--gray);
            font-size: 0.9rem;
        }

        .custom-pagination {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            gap: 5px;
        }

        .pagination-item {
            margin: 0;
        }

        .pagination-link {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 8px;
            background-color: #fff;
            color: var(--gray-dark);
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .pagination-item.active .pagination-link {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .pagination-link:hover {
            background-color: #f1f5f9;
        }

        .pagination-item.disabled .pagination-link {
            color: var(--gray-light);
            pointer-events: none;
            background-color: #f8fafc;
        }

        .pagination-jump {
            display: flex;
            align-items: center;
            gap: 10px;
            color: var(--gray);
            font-size: 0.9rem;
        }

        .jump-form {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .jump-input {
            width: 50px;
            height: 36px;
            border-radius: 8px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            padding: 0 10px;
            font-size: 0.9rem;
            text-align: center;
        }

        .jump-input:focus {
            outline: none;
            border-color: var(--primary-light);
        }

        .jump-btn {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            background-color: var(--primary);
            color: white;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .jump-btn:hover {
            background-color: var(--primary-dark);
        }

        /* Add Coupon Button */
        .add-coupon-container {
            display: flex;
            justify-content: center;
            padding: 0 30px 30px;
        }

        .btn-add-coupon {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 25px;
            background-color: var(--primary);
            color: white;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
        }

        .btn-add-coupon:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(79, 70, 229, 0.4);
        }

        /* Loading Spinner */
        .loading-spinner {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 30px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        /* Pagination Loading */
        .pagination-loading {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: transparent;
            z-index: 9999;
            pointer-events: none;
        }

        .pagination-loading.active::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background: linear-gradient(to right, transparent, var(--primary), transparent);
            animation: loading 1.5s infinite;
        }

        @keyframes loading {
            0% {
                transform: translateX(-100%);
            }
            100% {
                transform: translateX(100%);
            }
        }

        /* Animations */
        .animate-fade-in {
            animation: fadeIn 0.5s ease forwards;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .content-fade {
            opacity: 0;
            transform: translateY(10px);
            animation: fadeIn 0.5s ease forwards;
            animation-delay: 0.2s;
        }

        /* Mobile Toggle */
        .mobile-toggle {
            position: fixed;
            top: 20px;
            left: 20px;
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background-color: var(--primary);
            color: white;
            border: none;
            display: none;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            cursor: pointer;
            z-index: 1001;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        /* Responsive Styles */
        @media (max-width: 1200px) {
            .stats-row {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 992px) {
            .main-content {
                margin-left: 0;
            }

            .mobile-toggle {
                display: flex;
            }

            .content-header {
                padding-left: 70px;
            }
        }

        @media (max-width: 768px) {
            .stats-row {
                grid-template-columns: 1fr;
            }

            .search-filter-row {
                flex-direction: column;
                align-items: stretch;
            }

            .search-box {
                max-width: none;
            }

            .filter-container {
                justify-content: space-between;
            }

            .custom-pagination-container {
                flex-direction: column;
                align-items: center;
            }

            .pagination-info {
                text-align: center;
            }

            .header-container {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            .user-profile {
                align-self: flex-end;
            }

            .coupons-table th, .coupons-table td {
                padding: 10px;
            }

            .action-buttons {
                flex-direction: column;
            }
        }

        @media (max-width: 576px) {
            .filter-options {
                display: grid;
                grid-template-columns: 1fr 1fr;
                width: 100%;
            }

            .filter-container {
                flex-direction: column;
                align-items: stretch;
                width: 100%;
            }

            .filter-btn {
                width: 100%;
                justify-content: center;
            }

            .coupons-container {
                margin: 0 15px 20px;
                padding: 15px;
            }

            .stats-row, .search-filter-row, .view-selector, .custom-pagination-container {
                padding-left: 15px;
                padding-right: 15px;
            }

            .table-responsive {
                margin: 0 -15px;
                width: calc(100% + 30px);
                overflow-x: auto;
            }

            .coupons-table {
                min-width: 800px;
            }
        }
    </style>
</head>
<body>
    <!-- Pagination Loading Indicator -->
    <div class="pagination-loading" id="paginationLoading"></div>

    <!-- Mobile Toggle Button -->
    <button class="mobile-toggle" id="mobileToggle">
        <i class="fas fa-bars"></i>
    </button>

    <div class="dashboard-container">
        <!-- Sidebar -->
        <%- include("../partials/admin/header") %>
        
        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="content-header">
                <div class="header-container">
                    <div>
                        <h1 class="page-title">Coupon Management</h1>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>
                            <li class="breadcrumb-separator"><i class="fas fa-chevron-right"></i></li>
                            <li class="breadcrumb-item">Coupons</li>
                        </ul>
                    </div>
                    
                    <div class="user-profile">
                        <div class="profile-info">
                            <p class="user-name">Ajmal</p>
                            <p class="user-role">Admin</p>
                        </div>
                        
                        <div class="dropdown-icon">
                            <i class="fas fa-chevron-down"></i>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Stats Row -->
            <div class="stats-row animate-fade-in">
                <div class="stat-card">
                    <div class="stat-icon blue">
                        <i class="fas fa-ticket-alt"></i>
                    </div>
                    <h3 class="stat-value" id="totalCoupons">0</h3>
                    <p class="stat-label">Total Coupons</p>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon green">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h3 class="stat-value" id="activeCoupons">0</h3>
                    <p class="stat-label">Active Coupons</p>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon orange">
                        <i class="fas fa-clock"></i>
                    </div>
                    <h3 class="stat-value" id="expiringCoupons">0</h3>
                    <p class="stat-label">Expiring Soon</p>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon red">
                        <i class="fas fa-times-circle"></i>
                    </div>
                    <h3 class="stat-value" id="expiredCoupons">0</h3>
                    <p class="stat-label">Expired Coupons</p>
                </div>
            </div>
            
            <!-- Search and Filters -->
            <div class="search-filter-row">
                <div class="search-box">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" class="search-input" placeholder="Search coupon code...">
                </div>
                
                <div class="filter-container">
                    <button class="filter-btn">
                        <i class="fas fa-sliders-h"></i>
                        <span>Filters</span>
                    </button>
                    <div class="filter-options">
                        <button class="filter-option active" id="filterAll">ALL</button>
                        <button class="filter-option" id="filterActive">ACTIVE</button>
                        <button class="filter-option" id="filterInactive">INACTIVE</button>
                        <button class="filter-option" id="filterExpiring">EXPIRING</button>
                    </div>
                </div>
            </div>
            
            <!-- View Selector -->
            <div class="view-selector">
                <span class="view-selector-label">View:</span>
                <div class="view-selector-options">
                    <button class="view-option active" id="tableView" title="Table View">
                        <i class="fas fa-table"></i>
                    </button>
                    <button class="view-option" id="cardView" title="Card View">
                        <i class="fas fa-th-large"></i>
                    </button>
                </div>
            </div>
            
            <!-- Table View -->
            <div id="tableViewContainer" class="animate-fade-in content-fade">
                <div class="coupons-container">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="section-title">Available Coupons</h2>
                        <div class="bulk-select px-4">
                            <input type="checkbox" id="selectAllCoupons" class="form-check-input">
                            <label for="selectAllCoupons" class="bulk-select-label ms-2">Select All</label>
                        </div>
                    </div>
                    
                    <!-- Bulk Actions (Initially Hidden) -->
                    <div class="bulk-actions" id="bulkActionsBar" style="display: none;">
                        <div class="bulk-select">
                            <span id="selectedCount" class="bulk-select-label">0 selected</span>
                        </div>
                        <div class="bulk-actions-buttons">
                            <button class="bulk-action-btn" id="bulkActivate">
                                <i class="fas fa-check-circle"></i> Activate
                            </button>
                            <button class="bulk-action-btn" id="bulkDeactivate">
                                <i class="fas fa-ban"></i> Deactivate
                            </button>
                            <button class="bulk-action-btn delete" id="bulkDelete">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table coupons-table">
                            <thead>
                                <tr>
                                    <th style="width: 40px;">
                                        <input type="checkbox" id="selectAllHeader" class="form-check-input">
                                    </th>
                                    <th>Code</th>
                                    <th>Discount</th>
                                    <th>Min Purchase</th>
                                    <th>Max Discount</th>
                                    <th>Usage</th>
                                    <th>Status</th>
                                    <th>Expiry Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="couponTableBody">
                                <!-- This will be populated by JavaScript -->
                                <tr>
                                    <td colspan="9" class="text-center py-4">
                                        <div class="loading-spinner">
                                            <div class="spinner"></div>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            
            <!-- Card View (Initially Hidden) -->
            <div id="cardViewContainer" class="animate-fade-in content-fade" style="display: none;">
                <div class="coupons-container">
                    <h2 class="section-title">Available Coupons</h2>
                    <div class="coupon-cards" id="couponCardsContainer">
                        <!-- This will be populated by JavaScript -->
                        <div class="loading-spinner">
                            <div class="spinner"></div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Empty State (Initially Hidden) -->
            <div id="emptyState" class="coupons-container" style="display: none;">
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-ticket-alt"></i>
                    </div>
                    <h3 class="empty-title">No Coupons Found</h3>
                    <p class="empty-text">You haven't created any coupons yet or none match your current filters.</p>
                    <a href="/admin/addCoupon" class="btn-add-coupon">
                        <i class="fas fa-plus"></i> Create Your First Coupon
                    </a>
                </div>
            </div>
            
            <!-- Simplified Pagination -->
            <div class="custom-pagination-container">
                <div class="pagination-info">
                    <%
                    const totalItems = totalcoupons || 0;
                    const currentPageNum = parseInt(currentPage) || 1;
                    const safeItemsPerPage = parseInt(itemsPerPage) || 7;
                  
                    const totalPages = Math.ceil(totalItems / safeItemsPerPage) || 1;
                  
                    const startItem = totalItems === 0 ? 0 : ((currentPageNum - 1) * safeItemsPerPage) + 1;
                    const endItem = Math.min(currentPageNum * safeItemsPerPage, totalItems);
                    %>
                  
                    <% if (totalItems > 0) { %>
                      Showing <span class="fw-bold"><%= startItem %></span> to 
                      <span class="fw-bold"><%= endItem %></span> of 
                      <span class="fw-bold"><%= totalItems %></span> coupons
                    <% } else { %>
                      No coupons to display
                    <% } %>
                </div>
              
                <% if (totalItems > 0 && totalPages > 1) { %>
                  <ul class="custom-pagination">
                    <%
                    // Calculate page range
                    let startPage = Math.max(1, currentPageNum - 2);
                    let endPage = Math.min(totalPages, startPage + 4);
                    
                    if (endPage - startPage < 4 && totalPages > 4) {
                      startPage = Math.max(1, endPage - 4);
                    }
                    
                    // Determine if prev/next buttons should be enabled
                    const hasPrevPage = currentPageNum > 1;
                    const hasNextPage = currentPageNum < totalPages;
                    %>
                    
                    <!-- First Page Button -->
                    <li class="pagination-item <%= !hasPrevPage ? 'disabled' : '' %>">
                      <a href="/admin/coupons?page=1" 
                         class="pagination-link" 
                         <%= !hasPrevPage ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                        <i class="fas fa-angle-double-left"></i>
                      </a>
                    </li>
                    
                    <!-- Previous Button -->
                    <li class="pagination-item <%= !hasPrevPage ? 'disabled' : '' %>">
                      <a href="/admin/coupons?page=<%= currentPageNum - 1 %>" 
                         class="pagination-link" 
                         <%= !hasPrevPage ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                        <i class="fas fa-angle-left"></i>
                      </a>
                    </li>
                    
                    <!-- Page Numbers -->
                    <% for (let i = startPage; i <= endPage; i++) { %>
                      <li class="pagination-item <%= i === currentPageNum ? 'active' : '' %>">
                        <a href="/admin/coupons?page=<%= i %>" class="pagination-link">
                          <%= i %>
                        </a>
                      </li>
                    <% } %>
                    
                    <!-- Next Button -->
                    <li class="pagination-item <%= !hasNextPage ? 'disabled' : '' %>">
                      <a href="/admin/coupons?page=<%= currentPageNum + 1 %>" 
                         class="pagination-link" 
                         <%= !hasNextPage ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                        <i class="fas fa-angle-right"></i>
                      </a>
                    </li>
                    
                    <!-- Last Page Button -->
                    <li class="pagination-item <%= !hasNextPage ? 'disabled' : '' %>">
                      <a href="/admin/coupons?page=<%= totalPages %>" 
                         class="pagination-link" 
                         <%= !hasNextPage ? 'tabindex="-1" aria-disabled="true"' : '' %>>
                        <i class="fas fa-angle-double-right"></i>
                      </a>
                    </li>
                  </ul>
                  
                  <!-- Jump to Page -->
                  <div class="pagination-jump">
                    <span>Go to:</span>
                    <form action="/admin/coupons" method="GET" class="jump-form">
                      <input type="number" name="page" min="1" max="<%= totalPages %>" 
                             class="jump-input" value="<%= currentPageNum %>">
                      <button type="submit" class="jump-btn">
                        <i class="fas fa-arrow-right"></i>
                      </button>
                    </form>
                  </div>
                <% } %>
            </div>
            
            <!-- Add Coupon Button -->
            <div class="add-coupon-container">
                <a href="/admin/addCoupon" class="btn-add-coupon">
                    <i class="fas fa-plus"></i> Add New Coupon
                </a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.12/dist/sweetalert2.all.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Mobile sidebar toggle
            document.getElementById('mobileToggle').addEventListener('click', function() {
                document.getElementById('sidebar').classList.toggle('show');
            });
            
            // View toggle
            const tableViewBtn = document.getElementById('tableView');
            const cardViewBtn = document.getElementById('cardView');
            const tableViewContainer = document.getElementById('tableViewContainer');
            const cardViewContainer = document.getElementById('cardViewContainer');
            
            tableViewBtn.addEventListener('click', function() {
                tableViewBtn.classList.add('active');
                cardViewBtn.classList.remove('active');
                tableViewContainer.style.display = 'block';
                cardViewContainer.style.display = 'none';
                localStorage.setItem('couponViewPreference', 'table');
            });
            
            cardViewBtn.addEventListener('click', function() {
                cardViewBtn.classList.add('active');
                tableViewBtn.classList.remove('active');
                cardViewContainer.style.display = 'block';
                tableViewContainer.style.display = 'none';
                localStorage.setItem('couponViewPreference', 'card');
            });
            
            // Load user preference if exists
            const viewPreference = localStorage.getItem('couponViewPreference');
            if (viewPreference === 'card') {
                cardViewBtn.click();
            }
            
            // Variables
            let allCoupons = [];
            let selectedCoupons = new Set();
            
            // Fetch and render coupons
            async function fetchCoupons() {
                try {
                    // Show loading state
                    document.getElementById('couponTableBody').innerHTML = `
                        <tr>
                            <td colspan="9" class="text-center py-4">
                                <div class="loading-spinner">
                                    <div class="spinner"></div>
                                </div>
                            </td>
                        </tr>
                    `;
                    document.getElementById('couponCardsContainer').innerHTML = `
                        <div class="loading-spinner">
                            <div class="spinner"></div>
                        </div>
                    `;
                    
                    const response = await fetch('/admin/getAllCoupons');
                    const result = await response.json();
                    
                    if (result.success) {
                        // Process coupons to add calculated fields
                        allCoupons = result.data.map(coupon => {
                            const usedCount = coupon.usedBy ? coupon.usedBy.reduce((total, user) => total + (user.usedCount || 0), 0) : 0;
                            return { ...coupon, usedCount };
                        });
                        
                        updateStats(allCoupons);
                        renderCoupons(allCoupons);
                    } else {
                        showToast('error', result.message || 'Failed to load coupons');
                        showEmptyState();
                    }
                } catch (error) {
                    console.error('Error fetching coupons:', error);
                    showToast('error', 'Server error');
                    showEmptyState();
                }
            }
            
            function showEmptyState() {
                document.getElementById('emptyState').style.display = 'block';
                document.getElementById('tableViewContainer').style.display = 'none';
                document.getElementById('cardViewContainer').style.display = 'none';
            }
            
            // Update stats
            function updateStats(coupons) {
                const now = new Date();
                const nextWeek = new Date();
                nextWeek.setDate(nextWeek.getDate() + 7);
                
                const totalCount = coupons.length;
                const activeCount = coupons.filter(c => c.isActive && new Date(c.startingDate) <= now && new Date(c.expiryDate) >= now).length;
                const expiredCount = coupons.filter(c => new Date(c.expiryDate) < now).length;
                const expiringCount = coupons.filter(c => {
                    const expiryDate = new Date(c.expiryDate);
                    return c.isActive && expiryDate >= now && expiryDate <= nextWeek;
                }).length;
                
                document.getElementById('totalCoupons').textContent = totalCount;
                document.getElementById('activeCoupons').textContent = activeCount;
                document.getElementById('expiredCoupons').textContent = expiredCount;
                document.getElementById('expiringCoupons').textContent = expiringCount;
            }
            
            // Render coupons
            function renderCoupons(coupons) {
                const tableBody = document.getElementById('couponTableBody');
                const cardsContainer = document.getElementById('couponCardsContainer');
                const emptyState = document.getElementById('emptyState');
                
                // Clear containers
                tableBody.innerHTML = '';
                cardsContainer.innerHTML = '';
                
                // Show empty state if no coupons
                if (coupons.length === 0) {
                    emptyState.style.display = 'block';
                    tableViewContainer.style.display = 'none';
                    cardViewContainer.style.display = 'none';
                    return;
                }
                
                // Hide empty state
                emptyState.style.display = 'none';
                
                // Show appropriate view
                if (tableViewBtn.classList.contains('active')) {
                    tableViewContainer.style.display = 'block';
                } else {
                    cardViewContainer.style.display = 'block';
                }
                
                // Get current page from URL
                const urlParams = new URLSearchParams(window.location.search);
                const currentPage = parseInt(urlParams.get('page')) || 1;
                const itemsPerPage = <%= itemsPerPage || 7 %>;
                
                // Calculate pagination
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;
                const paginatedCoupons = coupons.slice(startIndex, endIndex);
                
                // Render table rows
                paginatedCoupons.forEach(coupon => {
                    const row = document.createElement('tr');
                    
                    // Calculate expiry status
                    const now = new Date();
                    const startDate = new Date(coupon.startingDate);
                    const expiryDate = new Date(coupon.expiryDate);
                    const nextWeek = new Date();
                    nextWeek.setDate(nextWeek.getDate() + 7);
                    
                    let expiryStatus = '';
                    let statusClass = '';
                    
                    if (now < startDate) {
                        expiryStatus = 'upcoming';
                        statusClass = 'bg-info';
                    } else if (expiryDate < now) {
                        expiryStatus = 'expired';
                        statusClass = 'bg-danger';
                    } else if (expiryDate <= nextWeek) {
                        expiryStatus = 'expiring-soon';
                        statusClass = 'bg-warning text-dark';
                    }
                    
                    // Calculate usage percentage
                    const usedCount = coupon.usedCount || 0;
                    const usagePercentage = coupon.limit > 0 ? Math.min(Math.round((usedCount / coupon.limit) * 100), 100) : 0;
                    
                    row.innerHTML = `
                        <td>
                            <input type="checkbox" class="form-check-input coupon-checkbox" data-id="${coupon._id}" ${selectedCoupons.has(coupon._id) ? 'checked' : ''}>
                        </td>
                        <td>
                            <strong>${coupon.coupencode}</strong>
                            ${expiryStatus === 'expired' ? '<span class="badge bg-danger ms-2">Expired</span>' : ''}
                            ${expiryStatus === 'expiring-soon' ? '<span class="badge bg-warning text-dark ms-2">Expiring Soon</span>' : ''}
                            ${expiryStatus === 'upcoming' ? '<span class="badge bg-info ms-2">Upcoming</span>' : ''}
                        </td>
                        <td>${coupon.couponpercent}%</td>
                        <td>₹${coupon.minimumPurchase}</td>
                        <td>₹${coupon.maxRedeemable}</td>
                        <td>
                            <div class="d-flex flex-column">
                                <div class="usage-text">
                                    <span>${usedCount} / ${coupon.limit}</span>
                                    <span>${usagePercentage}%</span>
                                </div>
                                <div class="usage-progress">
                                    <div class="usage-bar" style="width: ${usagePercentage}%"></div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <label class="toggle-switch">
                                <input type="checkbox" class="status-toggle" data-id="${coupon._id}" ${coupon.isActive ? 'checked' : ''}>
                                <span class="toggle-slider"></span>
                            </label>
                        </td>
                        <td>${formatDate(coupon.expiryDate)}</td>
                        <td class="action-buttons">
                            <button class="btn-view" onclick="viewCouponDetails('${coupon._id}')" title="View details">
                                <i class="fas fa-eye"></i>
                            </button>
                            <a href="/admin/editCoupon/${coupon._id}" class="btn-edit" title="Edit coupon">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button class="btn-delete" onclick="confirmDeleteCoupon('${coupon._id}', '${coupon.coupencode}')" title="Delete coupon">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    `;
                    
                    tableBody.appendChild(row);
                    
                    // Create card for card view
                    const card = document.createElement('div');
                    card.className = 'coupon-card';
                    
                    // Add ribbon if expired or expiring soon
                    if (expiryStatus) {
                        const ribbonClass = expiryStatus === 'expired' ? 'ribbon-expired' : 
                                           expiryStatus === 'upcoming' ? 'ribbon-upcoming' : 'ribbon-soon';
                        const ribbonText = expiryStatus === 'expired' ? 'Expired' : 
                                          expiryStatus === 'upcoming' ? 'Upcoming' : 'Expiring Soon';
                        
                        card.innerHTML += `
                            <div class="ribbon ${ribbonClass}">
                                <span class="ribbon-content">${ribbonText}</span>
                            </div>
                        `;
                    }
                    
                    card.innerHTML += `
                        <div class="coupon-header">
                            <div class="coupon-code">
                                ${coupon.coupencode}
                                <button class="copy-code-btn" onclick="copyCouponCode('${coupon.coupencode}')" title="Copy code">
                                    <i class="fas fa-copy"></i>
                                </button>
                            </div>
                        </div>
                        <div class="coupon-body">
                            <div class="coupon-discount">${coupon.couponpercent}% OFF</div>
                            <div class="coupon-details">
                                <div class="coupon-detail">
                                    <span class="detail-label">Min. Purchase:</span>
                                    <span class="detail-value">₹${coupon.minimumPurchase}</span>
                                </div>
                                <div class="coupon-detail">
                                    <span class="detail-label">Max. Discount:</span>
                                    <span class="detail-value">₹${coupon.maxRedeemable}</span>
                                </div>
                                <div class="coupon-detail">
                                    <span class="detail-label">Usage:</span>
                                    <span class="detail-value">${usedCount} / ${coupon.limit}</span>
                                </div>
                                <div class="coupon-detail">
                                    <span class="detail-label">Start Date:</span>
                                    <span class="detail-value">${formatDate(coupon.startingDate)}</span>
                                </div>
                                <div class="coupon-detail">
                                    <span class="detail-label">Expires:</span>
                                    <span class="detail-value">${formatDate(coupon.expiryDate)}</span>
                                </div>
                            </div>
                        </div>
                        <div class="coupon-footer">
                            <div class="coupon-status">
                                <label class="toggle-switch">
                                    <input type="checkbox" class="status-toggle" data-id="${coupon._id}" ${coupon.isActive ? 'checked' : ''}>
                                    <span class="toggle-slider"></span>
                                </label>
                                <span class="ms-2">${coupon.isActive ? 'Active' : 'Inactive'}</span>
                            </div>
                            <div class="coupon-actions">
                                <button class="btn-view" onclick="viewCouponDetails('${coupon._id}')" title="View details">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <a href="/admin/editCoupon/${coupon._id}" class="btn-edit" title="Edit coupon">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button class="btn-delete" onclick="confirmDeleteCoupon('${coupon._id}', '${coupon.coupencode}')" title="Delete coupon">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    `;
                    
                    cardsContainer.appendChild(card);
                });
                
                // Add event listeners to checkboxes and toggle switches
                document.querySelectorAll('.coupon-checkbox').forEach(checkbox => {
                    checkbox.addEventListener('change', function() {
                        const couponId = this.getAttribute('data-id');
                        if (this.checked) {
                            selectedCoupons.add(couponId);
                        } else {
                            selectedCoupons.delete(couponId);
                        }
                        updateBulkActionsBar();
                    });
                });
                
                document.querySelectorAll('.status-toggle').forEach(toggle => {
                    toggle.addEventListener('change', function() {
                        const couponId = this.getAttribute('data-id');
                        confirmToggleCouponStatus(couponId, this.checked);
                    });
                });
            }
            
            // Format date
            function formatDate(dateString) {
                try {
                    const date = new Date(dateString);
                    if (isNaN(date.getTime())) {
                        return 'Invalid Date';
                    }
                    return date.toLocaleDateString('en-US', {
                        month: '2-digit',
                        day: '2-digit',
                        year: 'numeric'
                    });
                } catch (error) {
                    console.error('Error formatting date:', error);
                    return 'Invalid Date';
                }
            }
            
            // Copy coupon code
            window.copyCouponCode = function(code) {
                navigator.clipboard.writeText(code).then(() => {
                    showToast('success', 'Coupon code copied to clipboard');
                }).catch(err => {
                    console.error('Could not copy text: ', err);
                    showToast('error', 'Failed to copy coupon code');
                });
            };
            
            // View coupon details
            window.viewCouponDetails = function(couponId) {
                const coupon = allCoupons.find(c => c._id === couponId);
                if (!coupon) {
                    showToast('error', 'Coupon not found');
                    return;
                }
                
                const usedCount = coupon.usedCount || 0;
                const usagePercentage = coupon.limit > 0 ? Math.min(Math.round((usedCount / coupon.limit) * 100), 100) : 0;
                
                const now = new Date();
                const startDate = new Date(coupon.startingDate);
                const expiryDate = new Date(coupon.expiryDate);
                const daysLeft = Math.ceil((expiryDate - now) / (1000 * 60 * 60 * 24));
                
                let expiryStatus = '';
                if (now < startDate) {
                    expiryStatus = `<span class="badge bg-info">Starts in ${Math.ceil((startDate - now) / (1000 * 60 * 60 * 24))} days</span>`;
                } else if (expiryDate < now) {
                    expiryStatus = '<span class="badge bg-danger">Expired</span>';
                } else if (daysLeft <= 7) {
                    expiryStatus = `<span class="badge bg-warning text-dark">Expires in ${daysLeft} days</span>`;
                } else {
                    expiryStatus = `<span class="badge bg-success">Valid for ${daysLeft} days</span>`;
                }
                
                Swal.fire({
                    title: `Coupon: ${coupon.coupencode}`,
                    html: `
                        <div class="coupon-details-modal">
                            <div class="row mb-3">
                                <div class="col-6 text-start">Discount:</div>
                                <div class="col-6 text-end"><strong>${coupon.couponpercent}%</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Min. Purchase:</div>
                                <div class="col-6 text-end"><strong>₹${coupon.minimumPurchase}</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Max. Discount:</div>
                                <div class="col-6 text-end"><strong>₹${coupon.maxRedeemable}</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Usage:</div>
                                <div class="col-6 text-end"><strong>${usedCount} / ${coupon.limit}</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Status:</div>
                                <div class="col-6 text-end"><strong>${coupon.isActive ? '<span class="badge bg-success">Active</span>' : '<span class="badge bg-secondary">Inactive</span>'}</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Start Date:</div>
                                <div class="col-6 text-end"><strong>${formatDate(coupon.startingDate)}</strong></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6 text-start">Expiry:</div>
                                <div class="col-6 text-end"><strong>${formatDate(coupon.expiryDate)} ${expiryStatus}</strong></div>
                            </div>
                            ${coupon.description ? `
                            <div class="row mb-3">
                                <div class="col-12 text-start">Description:</div>
                                <div class="col-12 mt-1"><em>${coupon.description}</em></div>
                            </div>
                            ` : ''}
                            <div class="progress mt-3">
                                <div class="progress-bar" role="progressbar" style="width: ${usagePercentage}%" aria-valuenow="${usagePercentage}" aria-valuemin="0" aria-valuemax="100">${usagePercentage}%</div>
                            </div>
                        </div>
                    `,
                    confirmButtonText: 'Close',
                    confirmButtonColor: '#000000',
                    showCancelButton: true,
                    cancelButtonText: 'Edit',
                    cancelButtonColor: '#6c757d',
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.cancel) {
                        window.location.href = `/admin/editCoupon/${coupon._id}`;
                    }
                });
            };
            
            // Confirm before toggling coupon status
            function confirmToggleCouponStatus(couponId, newStatus) {
                const coupon = allCoupons.find(c => c._id === couponId);
                if (!coupon) return;
                
                document.querySelectorAll(`.status-toggle[data-id="${couponId}"]`).forEach(toggle => {
                    toggle.checked = coupon.isActive;
                });
                
                const statusText = newStatus ? 'activate' : 'deactivate';
                
                Swal.fire({
                    title: `${statusText.charAt(0).toUpperCase() + statusText.slice(1)} Coupon?`,
                    html: `Are you sure you want to ${statusText} the coupon <strong class="coupon-code">${coupon.coupencode}</strong>?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, ' + statusText,
                    cancelButtonText: 'Cancel',
                    confirmButtonColor: '#000000',
                    cancelButtonColor: '#6c757d',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        toggleCouponStatus(couponId, newStatus);
                    }
                });
            }
            
            // Toggle coupon status
            async function toggleCouponStatus(couponId, isActive) {
                try {
                    const response = await fetch(`/admin/toggleCouponStatus/${couponId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ isActive })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        const couponIndex = allCoupons.findIndex(c => c._id === couponId);
                        if (couponIndex !== -1) {
                            allCoupons[couponIndex].isActive = isActive;
                        }
                        
                        document.querySelectorAll(`.status-toggle[data-id="${couponId}"]`).forEach(toggle => {
                            toggle.checked = isActive;
                        });
                        
                        showToast('success', `Coupon ${isActive ? 'activated' : 'deactivated'} successfully`);
                        updateStats(allCoupons);
                    } else {
                        showToast('error', result.message || 'Failed to update coupon status');
                        const coupon = allCoupons.find(c => c._id === couponId);
                        if (coupon) {
                            document.querySelectorAll(`.status-toggle[data-id="${couponId}"]`).forEach(toggle => {
                                toggle.checked = coupon.isActive;
                            });
                        }
                    }
                } catch (error) {
                    console.error('Error toggling coupon:', error);
                    showToast('error', 'Server error');
                    const coupon = allCoupons.find(c => c._id === couponId);
                    if (coupon) {
                        document.querySelectorAll(`.status-toggle[data-id="${couponId}"]`).forEach(toggle => {
                            toggle.checked = coupon.isActive;
                        });
                    }
                }
            }
            
            // Confirm before deleting coupon
            window.confirmDeleteCoupon = function(couponId, code) {
                Swal.fire({
                    title: 'Delete Coupon?',
                    html: `Are you sure you want to delete the coupon <strong class="coupon-code">${code}</strong>?<br>This action cannot be undone.`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it',
                    cancelButtonText: 'Cancel',
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteCoupon(couponId);
                    }
                });
            }
            
            // Delete coupon
            async function deleteCoupon(couponId) {
                try {
                    const response = await fetch(`/admin/deleteCoupon/${couponId}`, {
                        method: 'DELETE'
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        allCoupons = allCoupons.filter(c => c._id !== couponId);
                        selectedCoupons.delete(couponId);
                        updateBulkActionsBar();
                        renderCoupons(allCoupons);
                        updateStats(allCoupons);
                        
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Coupon has been deleted successfully.',
                            icon: 'success',
                            confirmButtonColor: '#000000'
                        });
                    } else {
                        showToast('error', result.message || 'Failed to delete coupon');
                    }
                } catch (error) {
                    console.error('Error deleting coupon:', error);
                    showToast('error', 'Server error');
                }
            }
            
            // Show toast notification
            function showToast(icon, title) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                });
                
                Toast.fire({
                    icon: icon,
                    title: title
                });
            }
            
            // Bulk actions
            const selectAllHeader = document.getElementById('selectAllHeader');
            const selectAllCoupons = document.getElementById('selectAllCoupons');
            const bulkActionsBar = document.getElementById('bulkActionsBar');
            const selectedCount = document.getElementById('selectedCount');
            
            selectAllHeader.addEventListener('change', function() {
                document.querySelectorAll('.coupon-checkbox').forEach(checkbox => {
                    checkbox.checked = this.checked;
                    const couponId = checkbox.getAttribute('data-id');
                    if (this.checked) {
                        selectedCoupons.add(couponId);
                    } else {
                        selectedCoupons.delete(couponId);
                    }
                });
                
                selectAllCoupons.checked = this.checked;
                updateBulkActionsBar();
            });
            
            selectAllCoupons.addEventListener('change', function() {
                document.querySelectorAll('.coupon-checkbox').forEach(checkbox => {
                    checkbox.checked = this.checked;
                    const couponId = checkbox.getAttribute('data-id');
                    if (this.checked) {
                        selectedCoupons.add(couponId);
                    } else {
                        selectedCoupons.delete(couponId);
                    }
                });
                
                selectAllHeader.checked = this.checked;
                updateBulkActionsBar();
            });
            
            function updateBulkActionsBar() {
                selectedCount.textContent = `${selectedCoupons.size} selected`;
                
                if (selectedCoupons.size > 0) {
                    bulkActionsBar.style.display = 'flex';
                } else {
                    bulkActionsBar.style.display = 'none';
                }
            }
            
            // Search functionality
            document.getElementById('searchInput').addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const filteredCoupons = allCoupons.filter(coupon => 
                    coupon.coupencode.toLowerCase().includes(searchTerm)
                );
                renderCoupons(filteredCoupons);
            });
            
            // Filter buttons functionality
            document.getElementById('filterAll').addEventListener('click', function() {
                setActiveFilter(this);
                renderCoupons(allCoupons);
            });
            
            document.getElementById('filterActive').addEventListener('click', function() {
                setActiveFilter(this);
                const now = new Date();
                const filteredCoupons = allCoupons.filter(c => 
                    c.isActive && new Date(c.startingDate) <= now && new Date(c.expiryDate) >= now
                );
                renderCoupons(filteredCoupons);
            });
            
            document.getElementById('filterInactive').addEventListener('click', function() {
                setActiveFilter(this);
                const now = new Date();
                const filteredCoupons = allCoupons.filter(c => 
                    !c.isActive || new Date(c.startingDate) > now || new Date(c.expiryDate) < now
                );
                renderCoupons(filteredCoupons);
            });
            
            document.getElementById('filterExpiring').addEventListener('click', function() {
                setActiveFilter(this);
                const now = new Date();
                const nextWeek = new Date();
                nextWeek.setDate(nextWeek.getDate() + 7);
                
                const filteredCoupons = allCoupons.filter(c => {
                    const expiryDate = new Date(c.expiryDate);
                    return c.isActive && expiryDate >= now && expiryDate <= nextWeek;
                });
                renderCoupons(filteredCoupons);
            });
            
            function setActiveFilter(element) {
                document.querySelectorAll('.filter-option').forEach(btn => {
                    btn.classList.remove('active');
                });
                element.classList.add('active');
            }
            
            // Add loading indicator for pagination links
            document.querySelectorAll('.pagination-link').forEach(link => {
                link.addEventListener('click', function() {
                    // Only show loading if the link is not disabled
                    if (!this.closest('.pagination-item').classList.contains('disabled')) {
                        const loadingIndicator = document.getElementById('paginationLoading');
                        loadingIndicator.classList.add('active');
                    }
                });
            });
            
            // Add loading indicator for "Go to page" form
            document.querySelector('.pagination-jump form')?.addEventListener('submit', function() {
                const loadingIndicator = document.getElementById('paginationLoading');
                loadingIndicator.classList.add('active');
            });
            
            // Initial load
            fetchCoupons();
        });
    </script>
</body>
</html>